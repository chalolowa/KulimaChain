{
	"id": "70f6a200f4320bf5d5b13aeefee5d1f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KFShares.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"./IAKSStablecoin.sol\";\r\nimport \"./ITokensBridge.sol\";\r\n\r\ncontract KFShares is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {\r\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\r\n    bytes32 public constant PROXY_ROLE = keccak256(\"PROXY_ROLE\");\r\n\r\n    IAKSStablecoin public aksToken;\r\n    ITokensBridge public tokensBridge;\r\n\r\n    uint256 public basePricePerShare; // in AKS\r\n    mapping(address => uint256) public lockedShares;\r\n    mapping(address => bool) public whitelisted;\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    function initialize(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 totalShares,\r\n        address admin,\r\n        address _aksToken,\r\n        address _tokensBridge,\r\n        address proxy\r\n    ) external initializer {\r\n        require(totalShares > 0, \"Total shares must be greater than zero\");\r\n\r\n        __ERC20_init(name, symbol);\r\n        __AccessControl_init();\r\n        __UUPSUpgradeable_init();\r\n\r\n        aksToken = IAKSStablecoin(_aksToken);\r\n        tokensBridge = ITokensBridge(_tokensBridge);\r\n        basePricePerShare = 1e18;\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(PROXY_ROLE, proxy);\r\n        _grantRole(UPGRADER_ROLE, admin);\r\n\r\n        _mint(proxy, totalShares);\r\n    }\r\n\r\n    // Proxy/minting functions\r\n    function mint(address to, uint256 amount) external onlyRole(PROXY_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(uint256 amount) external onlyRole(PROXY_ROLE) {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function forceBurn(address account, uint256 amount) external onlyRole(PROXY_ROLE) {\r\n        _burn(account, amount);\r\n    }\r\n\r\n    function lockShares(address account, uint256 amount) external onlyRole(PROXY_ROLE) {\r\n        lockedShares[account] += amount;\r\n    }\r\n\r\n    function unlockShares(address account) external onlyRole(PROXY_ROLE) {\r\n        lockedShares[account] = 0;\r\n    }\r\n\r\n    function updatePricingModel(uint256 newBasePrice) external onlyRole(PROXY_ROLE) {\r\n        basePricePerShare = newBasePrice;\r\n    }\r\n\r\n    function getCurrentPrice(uint256 shares) external view returns (uint256) {\r\n        return shares * basePricePerShare;\r\n    }\r\n\r\n    // Transfer compliance: whitelist + lock checks\r\n    function transfer(address to, uint256 amount) public override returns (bool) {\r\n        require(whitelisted[to], \"Receiver not whitelisted\");\r\n        require(balanceOf(msg.sender) - lockedShares[msg.sender] >= amount, \"Insufficient unlocked\");\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\r\n        require(whitelisted[to], \"Receiver not whitelisted\");\r\n        require(balanceOf(from) - lockedShares[from] >= amount, \"Insufficient unlocked\");\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    // Cross-chain transfers (lock locally + send via bridge)\r\n    function transferCrossChain(\r\n        uint64 destinationChainSelector,\r\n        address receiver,\r\n        uint256 amount\r\n    ) external payable {\r\n        require(whitelisted[receiver], \"Cross-chain receiver not whitelisted\");\r\n        require(balanceOf(msg.sender) - lockedShares[msg.sender] >= amount, \"Insufficient unlocked\");\r\n\r\n        _transfer(msg.sender, address(this), amount);\r\n        lockedShares[address(this)] += amount;\r\n\r\n        tokensBridge.sendKFS{value: msg.value}(destinationChainSelector, receiver, amount);\r\n    }\r\n\r\n    // Whitelist management\r\n    function setWhitelisted(address account, bool status) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        whitelisted[account] = status;\r\n    }\r\n\r\n    // Required for UUPS upgrades\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\r\n}\r\n"
			},
			"contracts/ITokensBridge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\ninterface ITokensBridge {\r\n    function sendAKS(\r\n        uint64 _destinationChainSelector,\r\n        address _receiver,\r\n        uint256 _amount\r\n    ) external payable;\r\n    \r\n    function sendKFS(\r\n        uint64 _destinationChainSelector,\r\n        address _receiver,\r\n        uint256 _amount\r\n    ) external payable;\r\n    \r\n    function receiveAKS(\r\n        address sender,\r\n        uint64 sourceChain,\r\n        address receiver,\r\n        uint256 amount\r\n    ) external;\r\n    \r\n    function receiveKFS(\r\n        address sender,\r\n        uint64 sourceChain,\r\n        address receiver,\r\n        uint256 amount\r\n    ) external;\r\n}"
			},
			"contracts/IAKSStablecoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\ninterface IAKSStablecoin {\r\n    // Events\r\n    event BridgeUpdated(address indexed previousBridge, address indexed newBridge);\r\n    event ReserveUpdated(address indexed previousReserve, address indexed newReserve);\r\n    event ReserveMint(address indexed to, uint256 amount);\r\n    event ReserveBurn(address indexed from, uint256 amount);\r\n    event BridgeBurn(address indexed from, uint256 amount);\r\n    event BridgeMint(address indexed to, uint256 amount);\r\n    \r\n    // ERC20 standard functions\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n    \r\n    // ERC20 metadata\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    \r\n    // Contract-specific state variables\r\n    function bridge() external view returns (address);\r\n    function reserve() external view returns (address);\r\n    function MAX_SUPPLY() external view returns (uint256);\r\n    \r\n    // Owner functions\r\n    function setBridge(address _bridge) external;\r\n    function setReserve(address _reserve) external;\r\n    function pause() external;\r\n    function unpause() external;\r\n    \r\n    // Reserve functions\r\n    function reserveMint(address to, uint256 amount) external;\r\n    function reserveBurn(address from, uint256 amount) external;\r\n    \r\n    // Bridge functions\r\n    function bridgeBurn(address from, uint256 amount) external;\r\n    function bridgeMint(address to, uint256 amount) external;\r\n    \r\n    // Burnable functions\r\n    function burn(uint256 amount) external;\r\n    function burnFrom(address account, uint256 amount) external;\r\n    \r\n    // Pausable state\r\n    function paused() external view returns (bool);\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IAKSStablecoin.sol",
								"contracts/ITokensBridge.sol",
								"contracts/KFShares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IAKSStablecoin.sol",
								"contracts/ITokensBridge.sol",
								"contracts/KFShares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IAKSStablecoin.sol",
								"contracts/ITokensBridge.sol",
								"contracts/KFShares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IAKSStablecoin.sol",
								"contracts/ITokensBridge.sol",
								"contracts/KFShares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IAKSStablecoin.sol": {
				"IAKSStablecoin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BridgeBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BridgeMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousBridge",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBridge",
									"type": "address"
								}
							],
							"name": "BridgeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReserveBurn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReserveMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousReserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newReserve",
									"type": "address"
								}
							],
							"name": "ReserveUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bridgeBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bridgeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "reserveBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "reserveMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bridge",
									"type": "address"
								}
							],
							"name": "setBridge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "setReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"bridge()": "e78cea92",
							"bridgeBurn(address,uint256)": "74f4f547",
							"bridgeMint(address,uint256)": "8c2a993e",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"reserve()": "cd3293de",
							"reserveBurn(address,uint256)": "c139ec8c",
							"reserveMint(address,uint256)": "b0ea1802",
							"setBridge(address)": "8dd14802",
							"setReserve(address)": "9cecc80a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BridgeBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BridgeMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousBridge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"BridgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReserveBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReserveMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousReserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReserve\",\"type\":\"address\"}],\"name\":\"ReserveUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bridgeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reserveBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reserveMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"setReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IAKSStablecoin.sol\":\"IAKSStablecoin\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IAKSStablecoin.sol\":{\"keccak256\":\"0xc68c623b2b3d3ec55b5a39f18e81f4413df3d1094d8429e1c1c25f39fba76cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05fa6b05d4997cf1f9b049c38e5f3cd8d70900d9f1d1c65c19cee28e12070d97\",\"dweb:/ipfs/QmSfS9zu6XRwXLqpaHPjenxrAZJ9qD5hd8RBBztbo26Fjy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ITokensBridge.sol": {
				"ITokensBridge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sourceChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "receiveAKS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sourceChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "receiveKFS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_destinationChainSelector",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendAKS",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_destinationChainSelector",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendKFS",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveAKS(address,uint64,address,uint256)": "77d684d1",
							"receiveKFS(address,uint64,address,uint256)": "d2c8e827",
							"sendAKS(uint64,address,uint256)": "c42bd134",
							"sendKFS(uint64,address,uint256)": "01ee5b22"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sourceChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveAKS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sourceChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveKFS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendAKS\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendKFS\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ITokensBridge.sol\":\"ITokensBridge\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ITokensBridge.sol\":{\"keccak256\":\"0xc1f828cd905343855371b929609d802630d9fc6ee46ffdbaee28c784ed10bd68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dde8957fe48ee778fbb586b1bff86bf2e10c34bc61c8155b4034ea269ca4e0a1\",\"dweb:/ipfs/QmRUxRS4A2B5vA2Nwfxw13Lq6WB6Ws46hJSBg3d7zrAvwX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KFShares.sol": {
				"KFShares": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PROXY_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aksToken",
							"outputs": [
								{
									"internalType": "contract IAKSStablecoin",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "basePricePerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "forceBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_aksToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokensBridge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setWhitelisted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensBridge",
							"outputs": [
								{
									"internalType": "contract ITokensBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferCrossChain",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "unlockShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBasePrice",
									"type": "uint256"
								}
							],
							"name": "updatePricingModel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KFShares.sol\":445:4318  contract KFShares is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/KFShares.sol\":978:1033  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/KFShares.sol\":1003:1025  _disableInitializers() */\n  tag_4\n    /* \"contracts/KFShares.sol\":1003:1023  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"contracts/KFShares.sol\":1003:1025  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/KFShares.sol\":445:4318  contract KFShares is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7824:7854  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7857:7883  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7857:7881  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7857:7883  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7824:7883  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7898:7899  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7898:7913  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7936:7959  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8001:8017  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:8017  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:7984  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:7997  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:8017  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8050:8066  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8033:8034  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8033:8047  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8033:8066  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8097:8113  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7758:8131  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n  tag_15\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n  swap2\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\ntag_16:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_18:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_19:\n    /* \"#utility.yul\":199:222   */\n  tag_23\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_18\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_25\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KFShares.sol\":445:4318  contract KFShares is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/KFShares.sol\":445:4318  contract KFShares is Initializable, ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xe2d6f634\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xe2d6f634\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe336ac44\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe48bf15b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf7154b3c\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_37\n      jumpi\n      jump(tag_1)\n    tag_40:\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd936547e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdea7f112\n      eq\n      tag_32\n      jumpi\n      jump(tag_1)\n    tag_39:\n      dup1\n      0xa217fddf\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc255f8c8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc55d0f56\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_41:\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9281aa0b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa14d707c\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x36568abe\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8d898e34\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9081e644\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3efb0be3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0x18160ddd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x05fbf448\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":2187:2320  function lockShares(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      revert(0x00, 0x00)\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":3077:3388  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/KFShares.sol\":690:720  IAKSStablecoin public aksToken */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      revert(0x00, 0x00)\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":1828:1936  function mint(address to, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/KFShares.sol\":1944:2048  function burn(uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      revert(0x00, 0x00)\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      revert(0x00, 0x00)\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":2449:2580  function updatePricingModel(uint256 newBasePrice) external onlyRole(PROXY_ROLE) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/KFShares.sol\":727:760  ITokensBridge public tokensBridge */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      revert(0x00, 0x00)\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      revert(0x00, 0x00)\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":4034:4174  function setWhitelisted(address account, bool status) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n    tag_142:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      revert(0x00, 0x00)\n    tag_146:\n      pop\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":3459:3997  function transferCrossChain(... */\n    tag_23:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n    tag_150:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      revert(0x00, 0x00)\n    tag_154:\n      pop\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":2774:3069  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      revert(0x00, 0x00)\n    tag_158:\n      pop\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      revert(0x00, 0x00)\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":2328:2441  function unlockShares(address account) external onlyRole(PROXY_ROLE) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      revert(0x00, 0x00)\n    tag_167:\n      pop\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      stop\n        /* \"contracts/KFShares.sol\":2588:2713  function getCurrentPrice(uint256 shares) external view returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      revert(0x00, 0x00)\n    tag_171:\n      pop\n      tag_172\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      revert(0x00, 0x00)\n    tag_176:\n      pop\n      tag_177\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n    tag_177:\n      stop\n        /* \"contracts/KFShares.sol\":872:915  mapping(address => bool) public whitelisted */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      revert(0x00, 0x00)\n    tag_180:\n      pop\n      tag_181\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      revert(0x00, 0x00)\n    tag_185:\n      pop\n      tag_186\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      tag_189\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":1041:1788  function initialize(... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      revert(0x00, 0x00)\n    tag_191:\n      pop\n      tag_192\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      tag_195\n      jump\t// in\n    tag_192:\n      stop\n        /* \"contracts/KFShares.sol\":2056:2179  function forceBurn(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      revert(0x00, 0x00)\n    tag_196:\n      pop\n      tag_197\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_198:\n      tag_199\n      jump\t// in\n    tag_197:\n      stop\n        /* \"contracts/KFShares.sol\":818:865  mapping(address => uint256) public lockedShares */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      revert(0x00, 0x00)\n    tag_200:\n      pop\n      tag_201\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":621:681  bytes32 public constant PROXY_ROLE = keccak256(\"PROXY_ROLE\") */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_205\n      jumpi\n      revert(0x00, 0x00)\n    tag_205:\n      pop\n      tag_206\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":769:801  uint256 public basePricePerShare */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      revert(0x00, 0x00)\n    tag_209:\n      pop\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KFShares.sol\":548:614  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_213\n      jumpi\n      revert(0x00, 0x00)\n    tag_213:\n      pop\n      tag_214\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3566:3598  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3562  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3626:3637  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3625  super.supportsInterface */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2187:2320  function lockShares(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_56:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/KFShares.sol\":2306:2312  amount */\n      dup2\n        /* \"contracts/KFShares.sol\":2281:2293  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":2281:2302  lockedShares[account] */\n      0x00\n        /* \"contracts/KFShares.sol\":2294:2301  account */\n      dup6\n        /* \"contracts/KFShares.sol\":2281:2302  lockedShares[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KFShares.sol\":2281:2312  lockedShares[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":2187:2320  function lockShares(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_232\n      swap1\n      tag_231\n      jump\t// in\n    tag_232:\n      dup1\n      iszero\n      tag_233\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_234\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_233)\n    tag_234:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_235:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_235\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5264:5268  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5293  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5306  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5296:5308  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5280:5308  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5327:5332  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5334:5341  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5343:5348  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5326  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5366:5370  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5359:5370  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3929:3936  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3970  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3989  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3973:3991  _getERC20Storage() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3991  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4009  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4001:4022  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KFShares.sol\":3077:3388  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_76:\n        /* \"contracts/KFShares.sol\":3166:3170  bool */\n      0x00\n        /* \"contracts/KFShares.sol\":3191:3202  whitelisted */\n      0x04\n        /* \"contracts/KFShares.sol\":3191:3206  whitelisted[to] */\n      0x00\n        /* \"contracts/KFShares.sol\":3203:3205  to */\n      dup5\n        /* \"contracts/KFShares.sol\":3191:3206  whitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/KFShares.sol\":3183:3235  require(whitelisted[to], \"Receiver not whitelisted\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/KFShares.sol\":3294:3300  amount */\n      dup2\n        /* \"contracts/KFShares.sol\":3272:3284  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":3272:3290  lockedShares[from] */\n      0x00\n        /* \"contracts/KFShares.sol\":3285:3289  from */\n      dup7\n        /* \"contracts/KFShares.sol\":3272:3290  lockedShares[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KFShares.sol\":3254:3269  balanceOf(from) */\n      tag_247\n        /* \"contracts/KFShares.sol\":3264:3268  from */\n      dup7\n        /* \"contracts/KFShares.sol\":3254:3263  balanceOf */\n      tag_125\n        /* \"contracts/KFShares.sol\":3254:3269  balanceOf(from) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/KFShares.sol\":3254:3290  balanceOf(from) - lockedShares[from] */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"contracts/KFShares.sol\":3254:3300  balanceOf(from) - lockedShares[from] >= amount */\n      lt\n      iszero\n        /* \"contracts/KFShares.sol\":3246:3326  require(balanceOf(from) - lockedShares[from] >= amount, \"Insufficient unlocked\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/KFShares.sol\":3344:3380  super.transferFrom(from, to, amount) */\n      tag_253\n        /* \"contracts/KFShares.sol\":3363:3367  from */\n      dup5\n        /* \"contracts/KFShares.sol\":3369:3371  to */\n      dup5\n        /* \"contracts/KFShares.sol\":3373:3379  amount */\n      dup5\n        /* \"contracts/KFShares.sol\":3344:3362  super.transferFrom */\n      tag_254\n        /* \"contracts/KFShares.sol\":3344:3380  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/KFShares.sol\":3337:3380  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"contracts/KFShares.sol\":3077:3388  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4873  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4900  _getAccessControlStorage */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4902  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4920  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4927  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4928:4932  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4912:4943  return $._roles[role].adminRole */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_262:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6473  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6459  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":690:720  IAKSStablecoin public aksToken */\n    tag_101:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":1828:1936  function mint(address to, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_107:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/KFShares.sol\":1911:1928  _mint(to, amount) */\n      tag_273\n        /* \"contracts/KFShares.sol\":1917:1919  to */\n      dup4\n        /* \"contracts/KFShares.sol\":1921:1927  amount */\n      dup4\n        /* \"contracts/KFShares.sol\":1911:1916  _mint */\n      tag_274\n        /* \"contracts/KFShares.sol\":1911:1928  _mint(to, amount) */\n      jump\t// in\n    tag_273:\n        /* \"contracts/KFShares.sol\":1828:1936  function mint(address to, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":1944:2048  function burn(uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_112:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/KFShares.sol\":2015:2040  _burn(msg.sender, amount) */\n      tag_278\n        /* \"contracts/KFShares.sol\":2021:2031  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":2033:2039  amount */\n      dup4\n        /* \"contracts/KFShares.sol\":2015:2020  _burn */\n      tag_279\n        /* \"contracts/KFShares.sol\":2015:2040  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/KFShares.sol\":1944:2048  function burn(uint256 amount) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4152:4159  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4193  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4212  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4196:4214  _getERC20Storage() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4214  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4232  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4242  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4224:4251  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2449:2580  function updatePricingModel(uint256 newBasePrice) external onlyRole(PROXY_ROLE) {... */\n    tag_130:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/KFShares.sol\":2560:2572  newBasePrice */\n      dup2\n        /* \"contracts/KFShares.sol\":2540:2557  basePricePerShare */\n      0x02\n        /* \"contracts/KFShares.sol\":2540:2572  basePricePerShare = newBasePrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":2449:2580  function updatePricingModel(uint256 newBasePrice) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":727:760  ITokensBridge public tokensBridge */\n    tag_133:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3855  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3882  _getAccessControlStorage */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3884  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3902  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3909  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3910:3914  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3923  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3924:3931  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3894:3932  return $._roles[role].hasRole[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":4034:4174  function setWhitelisted(address account, bool status) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"contracts/KFShares.sol\":4106:4124  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_300\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/KFShares.sol\":4160:4166  status */\n      dup2\n        /* \"contracts/KFShares.sol\":4137:4148  whitelisted */\n      0x04\n        /* \"contracts/KFShares.sol\":4137:4157  whitelisted[account] */\n      0x00\n        /* \"contracts/KFShares.sol\":4149:4156  account */\n      dup6\n        /* \"contracts/KFShares.sol\":4137:4157  whitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KFShares.sol\":4137:4166  whitelisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":4034:4174  function setWhitelisted(address account, bool status) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_304\n      swap1\n      tag_231\n      jump\t// in\n    tag_304:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_305\n      swap1\n      tag_231\n      jump\t// in\n    tag_305:\n      dup1\n      iszero\n      tag_306\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_307\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_306)\n    tag_307:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_308:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_308\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KFShares.sol\":3459:3997  function transferCrossChain(... */\n    tag_153:\n        /* \"contracts/KFShares.sol\":3624:3635  whitelisted */\n      0x04\n        /* \"contracts/KFShares.sol\":3624:3645  whitelisted[receiver] */\n      0x00\n        /* \"contracts/KFShares.sol\":3636:3644  receiver */\n      dup4\n        /* \"contracts/KFShares.sol\":3624:3645  whitelisted[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/KFShares.sol\":3616:3686  require(whitelisted[receiver], \"Cross-chain receiver not whitelisted\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/KFShares.sol\":3757:3763  amount */\n      dup1\n        /* \"contracts/KFShares.sol\":3729:3741  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":3729:3753  lockedShares[msg.sender] */\n      0x00\n        /* \"contracts/KFShares.sol\":3742:3752  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":3729:3753  lockedShares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KFShares.sol\":3705:3726  balanceOf(msg.sender) */\n      tag_313\n        /* \"contracts/KFShares.sol\":3715:3725  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":3705:3714  balanceOf */\n      tag_125\n        /* \"contracts/KFShares.sol\":3705:3726  balanceOf(msg.sender) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/KFShares.sol\":3705:3753  balanceOf(msg.sender) - lockedShares[msg.sender] */\n      tag_314\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_314:\n        /* \"contracts/KFShares.sol\":3705:3763  balanceOf(msg.sender) - lockedShares[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/KFShares.sol\":3697:3789  require(balanceOf(msg.sender) - lockedShares[msg.sender] >= amount, \"Insufficient unlocked\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap1\n      tag_252\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"contracts/KFShares.sol\":3802:3846  _transfer(msg.sender, address(this), amount) */\n      tag_317\n        /* \"contracts/KFShares.sol\":3812:3822  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":3832:3836  this */\n      address\n        /* \"contracts/KFShares.sol\":3839:3845  amount */\n      dup4\n        /* \"contracts/KFShares.sol\":3802:3811  _transfer */\n      tag_318\n        /* \"contracts/KFShares.sol\":3802:3846  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/KFShares.sol\":3888:3894  amount */\n      dup1\n        /* \"contracts/KFShares.sol\":3857:3869  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":3857:3884  lockedShares[address(this)] */\n      0x00\n        /* \"contracts/KFShares.sol\":3878:3882  this */\n      address\n        /* \"contracts/KFShares.sol\":3857:3884  lockedShares[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KFShares.sol\":3857:3894  lockedShares[address(this)] += amount */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":3907:3919  tokensBridge */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KFShares.sol\":3907:3927  tokensBridge.sendKFS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ee5b22\n        /* \"contracts/KFShares.sol\":3935:3944  msg.value */\n      callvalue\n        /* \"contracts/KFShares.sol\":3946:3970  destinationChainSelector */\n      dup6\n        /* \"contracts/KFShares.sol\":3972:3980  receiver */\n      dup6\n        /* \"contracts/KFShares.sol\":3982:3988  amount */\n      dup6\n        /* \"contracts/KFShares.sol\":3907:3989  tokensBridge.sendKFS{value: msg.value}(destinationChainSelector, receiver, amount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      revert(0x00, 0x00)\n    tag_322:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/KFShares.sol\":3459:3997  function transferCrossChain(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2774:3069  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_161:\n        /* \"contracts/KFShares.sol\":2845:2849  bool */\n      0x00\n        /* \"contracts/KFShares.sol\":2870:2881  whitelisted */\n      0x04\n        /* \"contracts/KFShares.sol\":2870:2885  whitelisted[to] */\n      0x00\n        /* \"contracts/KFShares.sol\":2882:2884  to */\n      dup5\n        /* \"contracts/KFShares.sol\":2870:2885  whitelisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/KFShares.sol\":2862:2914  require(whitelisted[to], \"Receiver not whitelisted\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap1\n      tag_246\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"contracts/KFShares.sol\":2985:2991  amount */\n      dup2\n        /* \"contracts/KFShares.sol\":2957:2969  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":2957:2981  lockedShares[msg.sender] */\n      0x00\n        /* \"contracts/KFShares.sol\":2970:2980  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":2957:2981  lockedShares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KFShares.sol\":2933:2954  balanceOf(msg.sender) */\n      tag_328\n        /* \"contracts/KFShares.sol\":2943:2953  msg.sender */\n      caller\n        /* \"contracts/KFShares.sol\":2933:2942  balanceOf */\n      tag_125\n        /* \"contracts/KFShares.sol\":2933:2954  balanceOf(msg.sender) */\n      jump\t// in\n    tag_328:\n        /* \"contracts/KFShares.sol\":2933:2981  balanceOf(msg.sender) - lockedShares[msg.sender] */\n      tag_329\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_329:\n        /* \"contracts/KFShares.sol\":2933:2991  balanceOf(msg.sender) - lockedShares[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/KFShares.sol\":2925:3017  require(balanceOf(msg.sender) - lockedShares[msg.sender] >= amount, \"Insufficient unlocked\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_252\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/KFShares.sol\":3035:3061  super.transfer(to, amount) */\n      tag_332\n        /* \"contracts/KFShares.sol\":3050:3052  to */\n      dup4\n        /* \"contracts/KFShares.sol\":3054:3060  amount */\n      dup4\n        /* \"contracts/KFShares.sol\":3035:3049  super.transfer */\n      tag_333\n        /* \"contracts/KFShares.sol\":3035:3061  super.transfer(to, amount) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/KFShares.sol\":3028:3061  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/KFShares.sol\":2774:3069  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_165:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2328:2441  function unlockShares(address account) external onlyRole(PROXY_ROLE) {... */\n    tag_170:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/KFShares.sol\":2432:2433  0 */\n      0x00\n        /* \"contracts/KFShares.sol\":2408:2420  lockedShares */\n      0x03\n        /* \"contracts/KFShares.sol\":2408:2429  lockedShares[account] */\n      0x00\n        /* \"contracts/KFShares.sol\":2421:2428  account */\n      dup5\n        /* \"contracts/KFShares.sol\":2408:2429  lockedShares[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KFShares.sol\":2408:2433  lockedShares[account] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":2328:2441  function unlockShares(address account) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2588:2713  function getCurrentPrice(uint256 shares) external view returns (uint256) {... */\n    tag_174:\n        /* \"contracts/KFShares.sol\":2652:2659  uint256 */\n      0x00\n        /* \"contracts/KFShares.sol\":2688:2705  basePricePerShare */\n      sload(0x02)\n        /* \"contracts/KFShares.sol\":2679:2685  shares */\n      dup3\n        /* \"contracts/KFShares.sol\":2679:2705  shares * basePricePerShare */\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"contracts/KFShares.sol\":2672:2705  return shares * basePricePerShare */\n      swap1\n      pop\n        /* \"contracts/KFShares.sol\":2588:2713  function getCurrentPrice(uint256 shares) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n    tag_344:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":872:915  mapping(address => bool) public whitelisted */\n    tag_183:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4769:4776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4810  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4829  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4813:4831  _getERC20Storage() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4831  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4849  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4861  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4862:4867  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4869:4876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4841:4877  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":1041:1788  function initialize(... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_354:\n        /* \"contracts/KFShares.sol\":1320:1321  0 */\n      0x00\n        /* \"contracts/KFShares.sol\":1306:1317  totalShares */\n      dup11\n        /* \"contracts/KFShares.sol\":1306:1321  totalShares > 0 */\n      gt\n        /* \"contracts/KFShares.sol\":1298:1364  require(totalShares > 0, \"Total shares must be greater than zero\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_356:\n        /* \"contracts/KFShares.sol\":1377:1403  __ERC20_init(name, symbol) */\n      tag_359\n        /* \"contracts/KFShares.sol\":1390:1394  name */\n      dup13\n        /* \"contracts/KFShares.sol\":1396:1402  symbol */\n      dup13\n        /* \"contracts/KFShares.sol\":1377:1389  __ERC20_init */\n      tag_360\n        /* \"contracts/KFShares.sol\":1377:1403  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_359:\n        /* \"contracts/KFShares.sol\":1414:1436  __AccessControl_init() */\n      tag_361\n        /* \"contracts/KFShares.sol\":1414:1434  __AccessControl_init */\n      tag_362\n        /* \"contracts/KFShares.sol\":1414:1436  __AccessControl_init() */\n      jump\t// in\n    tag_361:\n        /* \"contracts/KFShares.sol\":1447:1471  __UUPSUpgradeable_init() */\n      tag_363\n        /* \"contracts/KFShares.sol\":1447:1469  __UUPSUpgradeable_init */\n      tag_364\n        /* \"contracts/KFShares.sol\":1447:1471  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_363:\n        /* \"contracts/KFShares.sol\":1510:1519  _aksToken */\n      dup8\n        /* \"contracts/KFShares.sol\":1484:1492  aksToken */\n      0x00\n      0x00\n        /* \"contracts/KFShares.sol\":1484:1520  aksToken = IAKSStablecoin(_aksToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":1560:1573  _tokensBridge */\n      dup7\n        /* \"contracts/KFShares.sol\":1531:1543  tokensBridge */\n      0x01\n      0x00\n        /* \"contracts/KFShares.sol\":1531:1574  tokensBridge = ITokensBridge(_tokensBridge) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":1605:1609  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/KFShares.sol\":1585:1602  basePricePerShare */\n      0x02\n        /* \"contracts/KFShares.sol\":1585:1609  basePricePerShare = 1e18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KFShares.sol\":1622:1659  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"contracts/KFShares.sol\":1633:1651  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"contracts/KFShares.sol\":1653:1658  admin */\n      dup11\n        /* \"contracts/KFShares.sol\":1622:1632  _grantRole */\n      tag_263\n        /* \"contracts/KFShares.sol\":1622:1659  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      jump\t// in\n    tag_365:\n      pop\n        /* \"contracts/KFShares.sol\":1670:1699  _grantRole(PROXY_ROLE, proxy) */\n      tag_366\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"contracts/KFShares.sol\":1693:1698  proxy */\n      dup8\n        /* \"contracts/KFShares.sol\":1670:1680  _grantRole */\n      tag_263\n        /* \"contracts/KFShares.sol\":1670:1699  _grantRole(PROXY_ROLE, proxy) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"contracts/KFShares.sol\":1710:1742  _grantRole(UPGRADER_ROLE, admin) */\n      tag_367\n        /* \"contracts/KFShares.sol\":588:614  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"contracts/KFShares.sol\":1736:1741  admin */\n      dup11\n        /* \"contracts/KFShares.sol\":1710:1720  _grantRole */\n      tag_263\n        /* \"contracts/KFShares.sol\":1710:1742  _grantRole(UPGRADER_ROLE, admin) */\n      jump\t// in\n    tag_367:\n      pop\n        /* \"contracts/KFShares.sol\":1755:1780  _mint(proxy, totalShares) */\n      tag_368\n        /* \"contracts/KFShares.sol\":1761:1766  proxy */\n      dup7\n        /* \"contracts/KFShares.sol\":1768:1779  totalShares */\n      dup12\n        /* \"contracts/KFShares.sol\":1755:1760  _mint */\n      tag_274\n        /* \"contracts/KFShares.sol\":1755:1780  _mint(proxy, totalShares) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/KFShares.sol\":1041:1788  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":2056:2179  function forceBurn(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n    tag_199:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_373:\n        /* \"contracts/KFShares.sol\":2149:2171  _burn(account, amount) */\n      tag_375\n        /* \"contracts/KFShares.sol\":2155:2162  account */\n      dup4\n        /* \"contracts/KFShares.sol\":2164:2170  amount */\n      dup4\n        /* \"contracts/KFShares.sol\":2149:2154  _burn */\n      tag_279\n        /* \"contracts/KFShares.sol\":2149:2171  _burn(account, amount) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/KFShares.sol\":2056:2179  function forceBurn(address account, uint256 amount) external onlyRole(PROXY_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KFShares.sol\":818:865  mapping(address => uint256) public lockedShares */\n    tag_203:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":621:681  bytes32 public constant PROXY_ROLE = keccak256(\"PROXY_ROLE\") */\n    tag_207:\n        /* \"contracts/KFShares.sol\":658:681  keccak256(\"PROXY_ROLE\") */\n      0x77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b\n        /* \"contracts/KFShares.sol\":621:681  bytes32 public constant PROXY_ROLE = keccak256(\"PROXY_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":769:801  uint256 public basePricePerShare */\n    tag_211:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/KFShares.sol\":548:614  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_215:\n        /* \"contracts/KFShares.sol\":588:614  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"contracts/KFShares.sol\":548:614  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1111:1115  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1149:1174  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1145  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1127:1174  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4241  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10075:10080  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10082:10089  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10091:10096  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10098:10102  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10074  _approve */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6056:6060  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6087  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6100  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6090:6102  _msgSender() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6072:6102  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      tag_388\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6128:6132  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6134:6141  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6143:6148  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6127  _spendAllowance */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6169:6173  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6175:6177  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6179:6184  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6168  _transfer */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6202:6206  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6195:6206  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2845:2875  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2920:2948  AccessControlStorageLocation */\n      0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2910:2948  $.slot := AccessControlStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7393  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7420  _getAccessControlStorage */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7422  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7476  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7484:7488  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7497  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7498:7505  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7569  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_392)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_392:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7894:8282  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7972:7976  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7988:8018  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8047  _getAccessControlStorage() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8045  _getAccessControlStorage */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8047  _getAccessControlStorage() */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7988:8047  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8069:8073  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8075:8082  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8068  hasRole */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8057:8276  if (hasRole(role, account)) {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8133:8138  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8100  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8107  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8108:8112  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8121  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8130  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8122:8129  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8130  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8138  $._roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8196  _msgSender() */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8194  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8196  _msgSender() */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8175:8182  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8169:8173  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8218:8222  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8211:8222  return true */\n      swap2\n      pop\n      pop\n      jump(tag_398)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8057:8276  if (hasRole(role, account)) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8260:8265  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8253:8265  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7894:8282  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_398:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8804  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8791  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8857:8858  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8896:8897  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8900:8907  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8909:8914  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8887  _update */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9240:9446  function _burn(address account, uint256 value) internal {... */\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9330  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9331  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9317  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9331  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9381:9382  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9412:9419  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9429:9430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9433:9438  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9411  _update */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9240:9446  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_415\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4758  ERC1967Utils.getImplementation */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_418\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/KFShares.sol\":4217:4315  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_285:\n        /* \"contracts/KFShares.sol\":588:614  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_420\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/KFShares.sol\":4217:4315  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_423\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_424\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_424:\n      0x01\n    tag_423:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6535:6552  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6233:6265  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6229  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6321:6325  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_433\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_432:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_434\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x903cf98c709a9afd0d51d5fd348ba936789b2b73452753a58f859a0a579afd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6685:6686  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6673  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6737:6738  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_440\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6779  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6766  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6832:6833  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_442\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      tag_443\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6867  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6869:6871  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6873:6878  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6862  _update */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4522:4526  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4551  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4564  _msgSender */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4554:4566  _msgSender() */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4566  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4586:4591  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4593:4595  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4597:4602  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4585  _transfer */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4620:4624  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4613:4624  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_448\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_457\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_460\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_464\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4547:4554  account */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4556:4560  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_465\n      swap3\n      swap2\n      swap1\n      tag_466\n      jump\t// in\n    tag_465:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11087  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11108  _getERC20Storage() */\n      tag_468\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11106  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11090:11108  _getERC20Storage() */\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11065:11108  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11127  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11193:11194  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_470\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_470:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11240  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11227  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11292:11293  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_472\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_472:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11352  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11316  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11328  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11329:11334  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11336:11343  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11352  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11375  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n      iszero\n      tag_473\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11412:11419  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11410  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11421:11426  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_474\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_474:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n    tag_473:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11055:11444  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11849  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      tag_476\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11862:11867  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11869:11876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11861  allowance */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      jump\t// in\n    tag_476:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11877  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11927  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11907  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11927  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_477\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11971  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11963  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11971  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n      iszero\n      tag_478\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12025:12032  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12034:12050  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12052:12057  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_479\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_480\n      jump\t// in\n    tag_479:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      tag_481\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12128  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12130:12137  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12163  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12155  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12163  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12165:12170  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12122  _approve */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n    tag_477:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11815:12202  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7308  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7329  _getERC20Storage() */\n      tag_483\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7327  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7311:7329  _getERC20Storage() */\n      jump\t// in\n    tag_483:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7286:7329  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7359:7360  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7347  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_484\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7497:7502  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7480  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7493  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7502  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_485\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_485:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      jump(tag_486)\n    tag_484:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7552  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7556  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7566  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7567:7571  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7572  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7604:7609  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7601  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7609  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n      iszero\n      tag_487\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7661:7665  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7667:7678  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7685  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_488\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_480\n      jump\t// in\n    tag_488:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7855:7860  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7852  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7860  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7822  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7832  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7833:7837  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7860  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7519:7885  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7913:7914  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7901  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8080:8085  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8063  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8076  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8085  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      jump(tag_490)\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8299  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8276  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8286  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8287:8289  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8299  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8354:8356  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8348:8352  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8363  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      mload(0x40)\n      tag_491\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_491:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7276:8371  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_493\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_494\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_493:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_435:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_496\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_497\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_496:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_498\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_499\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_500\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_499:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_501)\n    tag_498:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_502\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_503\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_502:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_501:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_506\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_507\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_506:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_508\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_508:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_455:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_510\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_510:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_513\n      swap2\n      swap1\n      tag_514\n      jump\t// in\n    tag_513:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_515\n      swap2\n      swap1\n      tag_514\n      jump\t// in\n    tag_515:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_497:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_519\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_519:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_518:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_520\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_494\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_520:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_500:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_522\n      swap2\n      swap1\n      tag_523\n      jump\t// in\n    tag_522:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_526\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_525)\n    tag_526:\n      0x60\n      swap2\n      pop\n    tag_525:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_527\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_528\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_527:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_503:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_530\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_532\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_532:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_528:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_534\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_535\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_536\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_535:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_537)\n    tag_534:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_538\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_538:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_539\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_540\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_540:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_539:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_533)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_537:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_533:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_536:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_542\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_542:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_544:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_545:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_546:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_547:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_548:\n        /* \"#utility.yul\":561:584   */\n      tag_634\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_547\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_635\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_635:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_549:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_637\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_548\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_48:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_640\n      tag_545\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":833:952   */\n    tag_639:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_641\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_549\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_550:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_551:\n        /* \"#utility.yul\":1268:1289   */\n      tag_644\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_550\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_51:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_646\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_551\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_552:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_553:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_649\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_552\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_554:\n        /* \"#utility.yul\":1825:1849   */\n      tag_651\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_553\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_652\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      0x00\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_652:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_555:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_654\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_554\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_556:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_557:\n        /* \"#utility.yul\":2181:2205   */\n      tag_657\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_556\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_658:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_558:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_660\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_557\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2855   */\n    tag_55:\n        /* \"#utility.yul\":2449:2455   */\n      0x00\n        /* \"#utility.yul\":2457:2463   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_663\n      tag_545\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":2474:2593   */\n    tag_662:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_664\n        /* \"#utility.yul\":2702:2709   */\n      dup6\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup7\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_555\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":2647:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_665\n        /* \"#utility.yul\":2830:2837   */\n      dup6\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup7\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_558\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2381:2855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2960   */\n    tag_559:\n        /* \"#utility.yul\":2913:2919   */\n      0x00\n        /* \"#utility.yul\":2947:2952   */\n      dup2\n        /* \"#utility.yul\":2941:2953   */\n      mload\n        /* \"#utility.yul\":2931:2953   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3135   */\n    tag_560:\n        /* \"#utility.yul\":3050:3061   */\n      0x00\n        /* \"#utility.yul\":3084:3090   */\n      dup3\n        /* \"#utility.yul\":3079:3082   */\n      dup3\n        /* \"#utility.yul\":3072:3091   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x20\n        /* \"#utility.yul\":3119:3122   */\n      dup3\n        /* \"#utility.yul\":3115:3129   */\n      add\n        /* \"#utility.yul\":3100:3129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2966:3135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3141:3280   */\n    tag_561:\n        /* \"#utility.yul\":3230:3236   */\n      dup3\n        /* \"#utility.yul\":3225:3228   */\n      dup2\n        /* \"#utility.yul\":3220:3223   */\n      dup4\n        /* \"#utility.yul\":3214:3237   */\n      mcopy\n        /* \"#utility.yul\":3271:3272   */\n      0x00\n        /* \"#utility.yul\":3262:3268   */\n      dup4\n        /* \"#utility.yul\":3257:3260   */\n      dup4\n        /* \"#utility.yul\":3253:3269   */\n      add\n        /* \"#utility.yul\":3246:3273   */\n      mstore\n        /* \"#utility.yul\":3141:3280   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3388   */\n    tag_562:\n        /* \"#utility.yul\":3327:3333   */\n      0x00\n        /* \"#utility.yul\":3378:3380   */\n      0x1f\n        /* \"#utility.yul\":3374:3381   */\n      not\n        /* \"#utility.yul\":3369:3371   */\n      0x1f\n        /* \"#utility.yul\":3362:3367   */\n      dup4\n        /* \"#utility.yul\":3358:3372   */\n      add\n        /* \"#utility.yul\":3354:3382   */\n      and\n        /* \"#utility.yul\":3344:3382   */\n      swap1\n      pop\n        /* \"#utility.yul\":3286:3388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3771   */\n    tag_563:\n        /* \"#utility.yul\":3482:3485   */\n      0x00\n        /* \"#utility.yul\":3510:3549   */\n      tag_671\n        /* \"#utility.yul\":3543:3548   */\n      dup3\n        /* \"#utility.yul\":3510:3549   */\n      tag_559\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":3565:3636   */\n      tag_672\n        /* \"#utility.yul\":3629:3635   */\n      dup2\n        /* \"#utility.yul\":3624:3627   */\n      dup6\n        /* \"#utility.yul\":3565:3636   */\n      tag_560\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":3558:3636   */\n      swap4\n      pop\n        /* \"#utility.yul\":3645:3710   */\n      tag_673\n        /* \"#utility.yul\":3703:3709   */\n      dup2\n        /* \"#utility.yul\":3698:3701   */\n      dup6\n        /* \"#utility.yul\":3691:3695   */\n      0x20\n        /* \"#utility.yul\":3684:3689   */\n      dup7\n        /* \"#utility.yul\":3680:3696   */\n      add\n        /* \"#utility.yul\":3645:3710   */\n      tag_561\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":3735:3764   */\n      tag_674\n        /* \"#utility.yul\":3757:3763   */\n      dup2\n        /* \"#utility.yul\":3735:3764   */\n      tag_562\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":3730:3733   */\n      dup5\n        /* \"#utility.yul\":3726:3765   */\n      add\n        /* \"#utility.yul\":3719:3765   */\n      swap2\n      pop\n        /* \"#utility.yul\":3486:3771   */\n      pop\n        /* \"#utility.yul\":3394:3771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3777:4090   */\n    tag_61:\n        /* \"#utility.yul\":3890:3894   */\n      0x00\n        /* \"#utility.yul\":3928:3930   */\n      0x20\n        /* \"#utility.yul\":3917:3926   */\n      dup3\n        /* \"#utility.yul\":3913:3931   */\n      add\n        /* \"#utility.yul\":3905:3931   */\n      swap1\n      pop\n        /* \"#utility.yul\":3977:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3975   */\n      dup2\n        /* \"#utility.yul\":3967:3987   */\n      sub\n        /* \"#utility.yul\":3963:3964   */\n      0x00\n        /* \"#utility.yul\":3952:3961   */\n      dup4\n        /* \"#utility.yul\":3948:3965   */\n      add\n        /* \"#utility.yul\":3941:3988   */\n      mstore\n        /* \"#utility.yul\":4005:4083   */\n      tag_676\n        /* \"#utility.yul\":4078:4082   */\n      dup2\n        /* \"#utility.yul\":4069:4075   */\n      dup5\n        /* \"#utility.yul\":4005:4083   */\n      tag_563\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":3997:4083   */\n      swap1\n      pop\n        /* \"#utility.yul\":3777:4090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_564:\n        /* \"#utility.yul\":4183:4207   */\n      tag_678\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_556\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_71:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_680\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_564\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_75:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_683\n      tag_545\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":4558:4677   */\n    tag_682:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_684\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_555\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_685\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_555\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_686\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_558\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_565:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_566:\n        /* \"#utility.yul\":5229:5253   */\n      tag_689\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_565\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_690:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_567:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_692\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_566\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_81:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_695\n      tag_545\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":5505:5624   */\n    tag_694:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_696\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_567\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_568:\n        /* \"#utility.yul\":5851:5875   */\n      tag_698\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_565\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_84:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_700\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_568\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_88:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_703\n      tag_545\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":6209:6328   */\n    tag_702:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_704\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_567\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_705\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_555\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_569:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_570:\n        /* \"#utility.yul\":6771:6793   */\n      tag_708\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_569\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_94:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_710\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_570\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7086   */\n    tag_571:\n        /* \"#utility.yul\":7054:7057   */\n      0x00\n        /* \"#utility.yul\":7075:7080   */\n      dup2\n        /* \"#utility.yul\":7068:7080   */\n      swap1\n      pop\n        /* \"#utility.yul\":7026:7086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7234   */\n    tag_572:\n        /* \"#utility.yul\":7142:7151   */\n      0x00\n        /* \"#utility.yul\":7175:7228   */\n      tag_713\n        /* \"#utility.yul\":7193:7227   */\n      tag_714\n        /* \"#utility.yul\":7202:7226   */\n      tag_715\n        /* \"#utility.yul\":7220:7225   */\n      dup5\n        /* \"#utility.yul\":7202:7226   */\n      tag_552\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":7193:7227   */\n      tag_571\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":7175:7228   */\n      tag_552\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":7162:7228   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7240:7366   */\n    tag_573:\n        /* \"#utility.yul\":7290:7299   */\n      0x00\n        /* \"#utility.yul\":7323:7360   */\n      tag_717\n        /* \"#utility.yul\":7354:7359   */\n      dup3\n        /* \"#utility.yul\":7323:7360   */\n      tag_572\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":7310:7360   */\n      swap1\n      pop\n        /* \"#utility.yul\":7240:7366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7372:7521   */\n    tag_574:\n        /* \"#utility.yul\":7445:7454   */\n      0x00\n        /* \"#utility.yul\":7478:7515   */\n      tag_719\n        /* \"#utility.yul\":7509:7514   */\n      dup3\n        /* \"#utility.yul\":7478:7515   */\n      tag_573\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":7465:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7372:7521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7527:7704   */\n    tag_575:\n        /* \"#utility.yul\":7637:7697   */\n      tag_721\n        /* \"#utility.yul\":7691:7696   */\n      dup2\n        /* \"#utility.yul\":7637:7697   */\n      tag_574\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":7632:7635   */\n      dup3\n        /* \"#utility.yul\":7625:7698   */\n      mstore\n        /* \"#utility.yul\":7527:7704   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7710:7978   */\n    tag_103:\n        /* \"#utility.yul\":7826:7830   */\n      0x00\n        /* \"#utility.yul\":7864:7866   */\n      0x20\n        /* \"#utility.yul\":7853:7862   */\n      dup3\n        /* \"#utility.yul\":7849:7867   */\n      add\n        /* \"#utility.yul\":7841:7867   */\n      swap1\n      pop\n        /* \"#utility.yul\":7877:7971   */\n      tag_723\n        /* \"#utility.yul\":7968:7969   */\n      0x00\n        /* \"#utility.yul\":7957:7966   */\n      dup4\n        /* \"#utility.yul\":7953:7970   */\n      add\n        /* \"#utility.yul\":7944:7950   */\n      dup5\n        /* \"#utility.yul\":7877:7971   */\n      tag_575\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":7710:7978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7984:8313   */\n    tag_111:\n        /* \"#utility.yul\":8043:8049   */\n      0x00\n        /* \"#utility.yul\":8092:8094   */\n      0x20\n        /* \"#utility.yul\":8080:8089   */\n      dup3\n        /* \"#utility.yul\":8071:8078   */\n      dup5\n        /* \"#utility.yul\":8067:8090   */\n      sub\n        /* \"#utility.yul\":8063:8095   */\n      slt\n        /* \"#utility.yul\":8060:8179   */\n      iszero\n      tag_725\n      jumpi\n        /* \"#utility.yul\":8098:8177   */\n      tag_726\n      tag_545\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":8060:8179   */\n    tag_725:\n        /* \"#utility.yul\":8218:8219   */\n      0x00\n        /* \"#utility.yul\":8243:8296   */\n      tag_727\n        /* \"#utility.yul\":8288:8295   */\n      dup5\n        /* \"#utility.yul\":8279:8285   */\n      dup3\n        /* \"#utility.yul\":8268:8277   */\n      dup6\n        /* \"#utility.yul\":8264:8286   */\n      add\n        /* \"#utility.yul\":8243:8296   */\n      tag_558\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":8233:8296   */\n      swap2\n      pop\n        /* \"#utility.yul\":8189:8306   */\n      pop\n        /* \"#utility.yul\":7984:8313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8319:8436   */\n    tag_576:\n        /* \"#utility.yul\":8428:8429   */\n      0x00\n        /* \"#utility.yul\":8425:8426   */\n      0x00\n        /* \"#utility.yul\":8418:8430   */\n      revert\n        /* \"#utility.yul\":8442:8559   */\n    tag_577:\n        /* \"#utility.yul\":8551:8552   */\n      0x00\n        /* \"#utility.yul\":8548:8549   */\n      0x00\n        /* \"#utility.yul\":8541:8553   */\n      revert\n        /* \"#utility.yul\":8565:8745   */\n    tag_578:\n        /* \"#utility.yul\":8613:8690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8610:8611   */\n      0x00\n        /* \"#utility.yul\":8603:8691   */\n      mstore\n        /* \"#utility.yul\":8710:8714   */\n      0x41\n        /* \"#utility.yul\":8707:8708   */\n      0x04\n        /* \"#utility.yul\":8700:8715   */\n      mstore\n        /* \"#utility.yul\":8734:8738   */\n      0x24\n        /* \"#utility.yul\":8731:8732   */\n      0x00\n        /* \"#utility.yul\":8724:8739   */\n      revert\n        /* \"#utility.yul\":8751:9032   */\n    tag_579:\n        /* \"#utility.yul\":8834:8861   */\n      tag_732\n        /* \"#utility.yul\":8856:8860   */\n      dup3\n        /* \"#utility.yul\":8834:8861   */\n      tag_562\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":8826:8832   */\n      dup2\n        /* \"#utility.yul\":8822:8862   */\n      add\n        /* \"#utility.yul\":8964:8970   */\n      dup2\n        /* \"#utility.yul\":8952:8962   */\n      dup2\n        /* \"#utility.yul\":8949:8971   */\n      lt\n        /* \"#utility.yul\":8928:8946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8916:8926   */\n      dup3\n        /* \"#utility.yul\":8913:8947   */\n      gt\n        /* \"#utility.yul\":8910:8972   */\n      or\n        /* \"#utility.yul\":8907:8995   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":8975:8993   */\n      tag_734\n      tag_578\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":8907:8995   */\n    tag_733:\n        /* \"#utility.yul\":9015:9025   */\n      dup1\n        /* \"#utility.yul\":9011:9013   */\n      0x40\n        /* \"#utility.yul\":9004:9026   */\n      mstore\n        /* \"#utility.yul\":8794:9032   */\n      pop\n        /* \"#utility.yul\":8751:9032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9038:9167   */\n    tag_580:\n        /* \"#utility.yul\":9072:9078   */\n      0x00\n        /* \"#utility.yul\":9099:9119   */\n      tag_736\n      tag_544\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":9089:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":9128:9161   */\n      tag_737\n        /* \"#utility.yul\":9156:9160   */\n      dup3\n        /* \"#utility.yul\":9148:9154   */\n      dup3\n        /* \"#utility.yul\":9128:9161   */\n      tag_579\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":9038:9167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9480   */\n    tag_581:\n        /* \"#utility.yul\":9234:9238   */\n      0x00\n        /* \"#utility.yul\":9324:9342   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9316:9322   */\n      dup3\n        /* \"#utility.yul\":9313:9343   */\n      gt\n        /* \"#utility.yul\":9310:9366   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":9346:9364   */\n      tag_740\n      tag_578\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":9310:9366   */\n    tag_739:\n        /* \"#utility.yul\":9384:9413   */\n      tag_741\n        /* \"#utility.yul\":9406:9412   */\n      dup3\n        /* \"#utility.yul\":9384:9413   */\n      tag_562\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":9376:9413   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9472   */\n      0x20\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9473   */\n      add\n        /* \"#utility.yul\":9450:9473   */\n      swap1\n      pop\n        /* \"#utility.yul\":9173:9480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9486:9634   */\n    tag_582:\n        /* \"#utility.yul\":9584:9590   */\n      dup3\n        /* \"#utility.yul\":9579:9582   */\n      dup2\n        /* \"#utility.yul\":9574:9577   */\n      dup4\n        /* \"#utility.yul\":9561:9591   */\n      calldatacopy\n        /* \"#utility.yul\":9625:9626   */\n      0x00\n        /* \"#utility.yul\":9616:9622   */\n      dup4\n        /* \"#utility.yul\":9611:9614   */\n      dup4\n        /* \"#utility.yul\":9607:9623   */\n      add\n        /* \"#utility.yul\":9600:9627   */\n      mstore\n        /* \"#utility.yul\":9486:9634   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:10063   */\n    tag_583:\n        /* \"#utility.yul\":9717:9722   */\n      0x00\n        /* \"#utility.yul\":9742:9807   */\n      tag_744\n        /* \"#utility.yul\":9758:9806   */\n      tag_745\n        /* \"#utility.yul\":9799:9805   */\n      dup5\n        /* \"#utility.yul\":9758:9806   */\n      tag_581\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":9742:9807   */\n      tag_580\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":9733:9807   */\n      swap1\n      pop\n        /* \"#utility.yul\":9830:9836   */\n      dup3\n        /* \"#utility.yul\":9823:9828   */\n      dup2\n        /* \"#utility.yul\":9816:9837   */\n      mstore\n        /* \"#utility.yul\":9868:9872   */\n      0x20\n        /* \"#utility.yul\":9861:9866   */\n      dup2\n        /* \"#utility.yul\":9857:9873   */\n      add\n        /* \"#utility.yul\":9906:9909   */\n      dup5\n        /* \"#utility.yul\":9897:9903   */\n      dup5\n        /* \"#utility.yul\":9892:9895   */\n      dup5\n        /* \"#utility.yul\":9888:9904   */\n      add\n        /* \"#utility.yul\":9885:9910   */\n      gt\n        /* \"#utility.yul\":9882:9994   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":9913:9992   */\n      tag_747\n      tag_577\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":9882:9994   */\n    tag_746:\n        /* \"#utility.yul\":10003:10057   */\n      tag_748\n        /* \"#utility.yul\":10050:10056   */\n      dup5\n        /* \"#utility.yul\":10045:10048   */\n      dup3\n        /* \"#utility.yul\":10040:10043   */\n      dup6\n        /* \"#utility.yul\":10003:10057   */\n      tag_582\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":9723:10063   */\n      pop\n        /* \"#utility.yul\":9640:10063   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10082:10420   */\n    tag_584:\n        /* \"#utility.yul\":10137:10142   */\n      0x00\n        /* \"#utility.yul\":10186:10189   */\n      dup3\n        /* \"#utility.yul\":10179:10183   */\n      0x1f\n        /* \"#utility.yul\":10171:10177   */\n      dup4\n        /* \"#utility.yul\":10167:10184   */\n      add\n        /* \"#utility.yul\":10163:10190   */\n      slt\n        /* \"#utility.yul\":10153:10275   */\n      tag_750\n      jumpi\n        /* \"#utility.yul\":10194:10273   */\n      tag_751\n      tag_576\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":10153:10275   */\n    tag_750:\n        /* \"#utility.yul\":10311:10317   */\n      dup2\n        /* \"#utility.yul\":10298:10318   */\n      calldataload\n        /* \"#utility.yul\":10336:10414   */\n      tag_752\n        /* \"#utility.yul\":10410:10413   */\n      dup5\n        /* \"#utility.yul\":10402:10408   */\n      dup3\n        /* \"#utility.yul\":10395:10399   */\n      0x20\n        /* \"#utility.yul\":10387:10393   */\n      dup7\n        /* \"#utility.yul\":10383:10400   */\n      add\n        /* \"#utility.yul\":10336:10414   */\n      tag_583\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":10327:10414   */\n      swap2\n      pop\n        /* \"#utility.yul\":10143:10420   */\n      pop\n        /* \"#utility.yul\":10082:10420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10426:11078   */\n    tag_115:\n        /* \"#utility.yul\":10503:10509   */\n      0x00\n        /* \"#utility.yul\":10511:10517   */\n      0x00\n        /* \"#utility.yul\":10560:10562   */\n      0x40\n        /* \"#utility.yul\":10548:10557   */\n      dup4\n        /* \"#utility.yul\":10539:10546   */\n      dup6\n        /* \"#utility.yul\":10535:10558   */\n      sub\n        /* \"#utility.yul\":10531:10563   */\n      slt\n        /* \"#utility.yul\":10528:10647   */\n      iszero\n      tag_754\n      jumpi\n        /* \"#utility.yul\":10566:10645   */\n      tag_755\n      tag_545\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":10528:10647   */\n    tag_754:\n        /* \"#utility.yul\":10686:10687   */\n      0x00\n        /* \"#utility.yul\":10711:10764   */\n      tag_756\n        /* \"#utility.yul\":10756:10763   */\n      dup6\n        /* \"#utility.yul\":10747:10753   */\n      dup3\n        /* \"#utility.yul\":10736:10745   */\n      dup7\n        /* \"#utility.yul\":10732:10754   */\n      add\n        /* \"#utility.yul\":10711:10764   */\n      tag_555\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":10701:10764   */\n      swap3\n      pop\n        /* \"#utility.yul\":10657:10774   */\n      pop\n        /* \"#utility.yul\":10841:10843   */\n      0x20\n        /* \"#utility.yul\":10830:10839   */\n      dup4\n        /* \"#utility.yul\":10826:10844   */\n      add\n        /* \"#utility.yul\":10813:10845   */\n      calldataload\n        /* \"#utility.yul\":10872:10890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10864:10870   */\n      dup2\n        /* \"#utility.yul\":10861:10891   */\n      gt\n        /* \"#utility.yul\":10858:10975   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":10894:10973   */\n      tag_758\n      tag_546\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":10858:10975   */\n    tag_757:\n        /* \"#utility.yul\":10999:11061   */\n      tag_759\n        /* \"#utility.yul\":11053:11060   */\n      dup6\n        /* \"#utility.yul\":11044:11050   */\n      dup3\n        /* \"#utility.yul\":11033:11042   */\n      dup7\n        /* \"#utility.yul\":11029:11051   */\n      add\n        /* \"#utility.yul\":10999:11061   */\n      tag_584\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":10989:11061   */\n      swap2\n      pop\n        /* \"#utility.yul\":10784:11071   */\n      pop\n        /* \"#utility.yul\":10426:11078   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11084:11413   */\n    tag_124:\n        /* \"#utility.yul\":11143:11149   */\n      0x00\n        /* \"#utility.yul\":11192:11194   */\n      0x20\n        /* \"#utility.yul\":11180:11189   */\n      dup3\n        /* \"#utility.yul\":11171:11178   */\n      dup5\n        /* \"#utility.yul\":11167:11190   */\n      sub\n        /* \"#utility.yul\":11163:11195   */\n      slt\n        /* \"#utility.yul\":11160:11279   */\n      iszero\n      tag_761\n      jumpi\n        /* \"#utility.yul\":11198:11277   */\n      tag_762\n      tag_545\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":11160:11279   */\n    tag_761:\n        /* \"#utility.yul\":11318:11319   */\n      0x00\n        /* \"#utility.yul\":11343:11396   */\n      tag_763\n        /* \"#utility.yul\":11388:11395   */\n      dup5\n        /* \"#utility.yul\":11379:11385   */\n      dup3\n        /* \"#utility.yul\":11368:11377   */\n      dup6\n        /* \"#utility.yul\":11364:11386   */\n      add\n        /* \"#utility.yul\":11343:11396   */\n      tag_555\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":11333:11396   */\n      swap2\n      pop\n        /* \"#utility.yul\":11289:11406   */\n      pop\n        /* \"#utility.yul\":11084:11413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11419:11567   */\n    tag_585:\n        /* \"#utility.yul\":11491:11500   */\n      0x00\n        /* \"#utility.yul\":11524:11561   */\n      tag_765\n        /* \"#utility.yul\":11555:11560   */\n      dup3\n        /* \"#utility.yul\":11524:11561   */\n      tag_573\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":11511:11561   */\n      swap1\n      pop\n        /* \"#utility.yul\":11419:11567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11573:11748   */\n    tag_586:\n        /* \"#utility.yul\":11682:11741   */\n      tag_767\n        /* \"#utility.yul\":11735:11740   */\n      dup2\n        /* \"#utility.yul\":11682:11741   */\n      tag_585\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":11677:11680   */\n      dup3\n        /* \"#utility.yul\":11670:11742   */\n      mstore\n        /* \"#utility.yul\":11573:11748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11754:12020   */\n    tag_135:\n        /* \"#utility.yul\":11869:11873   */\n      0x00\n        /* \"#utility.yul\":11907:11909   */\n      0x20\n        /* \"#utility.yul\":11896:11905   */\n      dup3\n        /* \"#utility.yul\":11892:11910   */\n      add\n        /* \"#utility.yul\":11884:11910   */\n      swap1\n      pop\n        /* \"#utility.yul\":11920:12013   */\n      tag_769\n        /* \"#utility.yul\":12010:12011   */\n      0x00\n        /* \"#utility.yul\":11999:12008   */\n      dup4\n        /* \"#utility.yul\":11995:12012   */\n      add\n        /* \"#utility.yul\":11986:11992   */\n      dup5\n        /* \"#utility.yul\":11920:12013   */\n      tag_586\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":11754:12020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12026:12142   */\n    tag_587:\n        /* \"#utility.yul\":12096:12117   */\n      tag_771\n        /* \"#utility.yul\":12111:12116   */\n      dup2\n        /* \"#utility.yul\":12096:12117   */\n      tag_550\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":12089:12094   */\n      dup2\n        /* \"#utility.yul\":12086:12118   */\n      eq\n        /* \"#utility.yul\":12076:12136   */\n      tag_772\n      jumpi\n        /* \"#utility.yul\":12132:12133   */\n      0x00\n        /* \"#utility.yul\":12129:12130   */\n      0x00\n        /* \"#utility.yul\":12122:12134   */\n      revert\n        /* \"#utility.yul\":12076:12136   */\n    tag_772:\n        /* \"#utility.yul\":12026:12142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12148:12281   */\n    tag_588:\n        /* \"#utility.yul\":12191:12196   */\n      0x00\n        /* \"#utility.yul\":12229:12235   */\n      dup2\n        /* \"#utility.yul\":12216:12236   */\n      calldataload\n        /* \"#utility.yul\":12207:12236   */\n      swap1\n      pop\n        /* \"#utility.yul\":12245:12275   */\n      tag_774\n        /* \"#utility.yul\":12269:12274   */\n      dup2\n        /* \"#utility.yul\":12245:12275   */\n      tag_587\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":12148:12281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12287:12755   */\n    tag_144:\n        /* \"#utility.yul\":12352:12358   */\n      0x00\n        /* \"#utility.yul\":12360:12366   */\n      0x00\n        /* \"#utility.yul\":12409:12411   */\n      0x40\n        /* \"#utility.yul\":12397:12406   */\n      dup4\n        /* \"#utility.yul\":12388:12395   */\n      dup6\n        /* \"#utility.yul\":12384:12407   */\n      sub\n        /* \"#utility.yul\":12380:12412   */\n      slt\n        /* \"#utility.yul\":12377:12496   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":12415:12494   */\n      tag_777\n      tag_545\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":12377:12496   */\n    tag_776:\n        /* \"#utility.yul\":12535:12536   */\n      0x00\n        /* \"#utility.yul\":12560:12613   */\n      tag_778\n        /* \"#utility.yul\":12605:12612   */\n      dup6\n        /* \"#utility.yul\":12596:12602   */\n      dup3\n        /* \"#utility.yul\":12585:12594   */\n      dup7\n        /* \"#utility.yul\":12581:12603   */\n      add\n        /* \"#utility.yul\":12560:12613   */\n      tag_555\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":12550:12613   */\n      swap3\n      pop\n        /* \"#utility.yul\":12506:12623   */\n      pop\n        /* \"#utility.yul\":12662:12664   */\n      0x20\n        /* \"#utility.yul\":12688:12738   */\n      tag_779\n        /* \"#utility.yul\":12730:12737   */\n      dup6\n        /* \"#utility.yul\":12721:12727   */\n      dup3\n        /* \"#utility.yul\":12710:12719   */\n      dup7\n        /* \"#utility.yul\":12706:12728   */\n      add\n        /* \"#utility.yul\":12688:12738   */\n      tag_588\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":12678:12738   */\n      swap2\n      pop\n        /* \"#utility.yul\":12633:12748   */\n      pop\n        /* \"#utility.yul\":12287:12755   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:12862   */\n    tag_589:\n        /* \"#utility.yul\":12797:12804   */\n      0x00\n        /* \"#utility.yul\":12837:12855   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12830:12835   */\n      dup3\n        /* \"#utility.yul\":12826:12856   */\n      and\n        /* \"#utility.yul\":12815:12856   */\n      swap1\n      pop\n        /* \"#utility.yul\":12761:12862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12868:12988   */\n    tag_590:\n        /* \"#utility.yul\":12940:12963   */\n      tag_782\n        /* \"#utility.yul\":12957:12962   */\n      dup2\n        /* \"#utility.yul\":12940:12963   */\n      tag_589\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":12933:12938   */\n      dup2\n        /* \"#utility.yul\":12930:12964   */\n      eq\n        /* \"#utility.yul\":12920:12982   */\n      tag_783\n      jumpi\n        /* \"#utility.yul\":12978:12979   */\n      0x00\n        /* \"#utility.yul\":12975:12976   */\n      0x00\n        /* \"#utility.yul\":12968:12980   */\n      revert\n        /* \"#utility.yul\":12920:12982   */\n    tag_783:\n        /* \"#utility.yul\":12868:12988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12994:13131   */\n    tag_591:\n        /* \"#utility.yul\":13039:13044   */\n      0x00\n        /* \"#utility.yul\":13077:13083   */\n      dup2\n        /* \"#utility.yul\":13064:13084   */\n      calldataload\n        /* \"#utility.yul\":13055:13084   */\n      swap1\n      pop\n        /* \"#utility.yul\":13093:13125   */\n      tag_785\n        /* \"#utility.yul\":13119:13124   */\n      dup2\n        /* \"#utility.yul\":13093:13125   */\n      tag_590\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":12994:13131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13137:13754   */\n    tag_152:\n        /* \"#utility.yul\":13213:13219   */\n      0x00\n        /* \"#utility.yul\":13221:13227   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      0x00\n        /* \"#utility.yul\":13278:13280   */\n      0x60\n        /* \"#utility.yul\":13266:13275   */\n      dup5\n        /* \"#utility.yul\":13257:13264   */\n      dup7\n        /* \"#utility.yul\":13253:13276   */\n      sub\n        /* \"#utility.yul\":13249:13281   */\n      slt\n        /* \"#utility.yul\":13246:13365   */\n      iszero\n      tag_787\n      jumpi\n        /* \"#utility.yul\":13284:13363   */\n      tag_788\n      tag_545\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":13246:13365   */\n    tag_787:\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13429:13481   */\n      tag_789\n        /* \"#utility.yul\":13473:13480   */\n      dup7\n        /* \"#utility.yul\":13464:13470   */\n      dup3\n        /* \"#utility.yul\":13453:13462   */\n      dup8\n        /* \"#utility.yul\":13449:13471   */\n      add\n        /* \"#utility.yul\":13429:13481   */\n      tag_591\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":13419:13481   */\n      swap4\n      pop\n        /* \"#utility.yul\":13375:13491   */\n      pop\n        /* \"#utility.yul\":13530:13532   */\n      0x20\n        /* \"#utility.yul\":13556:13609   */\n      tag_790\n        /* \"#utility.yul\":13601:13608   */\n      dup7\n        /* \"#utility.yul\":13592:13598   */\n      dup3\n        /* \"#utility.yul\":13581:13590   */\n      dup8\n        /* \"#utility.yul\":13577:13599   */\n      add\n        /* \"#utility.yul\":13556:13609   */\n      tag_555\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":13546:13609   */\n      swap3\n      pop\n        /* \"#utility.yul\":13501:13619   */\n      pop\n        /* \"#utility.yul\":13658:13660   */\n      0x40\n        /* \"#utility.yul\":13684:13737   */\n      tag_791\n        /* \"#utility.yul\":13729:13736   */\n      dup7\n        /* \"#utility.yul\":13720:13726   */\n      dup3\n        /* \"#utility.yul\":13709:13718   */\n      dup8\n        /* \"#utility.yul\":13705:13727   */\n      add\n        /* \"#utility.yul\":13684:13737   */\n      tag_558\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":13674:13737   */\n      swap2\n      pop\n        /* \"#utility.yul\":13629:13747   */\n      pop\n        /* \"#utility.yul\":13137:13754   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13760:14234   */\n    tag_188:\n        /* \"#utility.yul\":13828:13834   */\n      0x00\n        /* \"#utility.yul\":13836:13842   */\n      0x00\n        /* \"#utility.yul\":13885:13887   */\n      0x40\n        /* \"#utility.yul\":13873:13882   */\n      dup4\n        /* \"#utility.yul\":13864:13871   */\n      dup6\n        /* \"#utility.yul\":13860:13883   */\n      sub\n        /* \"#utility.yul\":13856:13888   */\n      slt\n        /* \"#utility.yul\":13853:13972   */\n      iszero\n      tag_793\n      jumpi\n        /* \"#utility.yul\":13891:13970   */\n      tag_794\n      tag_545\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":13853:13972   */\n    tag_793:\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14036:14089   */\n      tag_795\n        /* \"#utility.yul\":14081:14088   */\n      dup6\n        /* \"#utility.yul\":14072:14078   */\n      dup3\n        /* \"#utility.yul\":14061:14070   */\n      dup7\n        /* \"#utility.yul\":14057:14079   */\n      add\n        /* \"#utility.yul\":14036:14089   */\n      tag_555\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":14026:14089   */\n      swap3\n      pop\n        /* \"#utility.yul\":13982:14099   */\n      pop\n        /* \"#utility.yul\":14138:14140   */\n      0x20\n        /* \"#utility.yul\":14164:14217   */\n      tag_796\n        /* \"#utility.yul\":14209:14216   */\n      dup6\n        /* \"#utility.yul\":14200:14206   */\n      dup3\n        /* \"#utility.yul\":14189:14198   */\n      dup7\n        /* \"#utility.yul\":14185:14207   */\n      add\n        /* \"#utility.yul\":14164:14217   */\n      tag_555\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":14154:14217   */\n      swap2\n      pop\n        /* \"#utility.yul\":14109:14227   */\n      pop\n        /* \"#utility.yul\":13760:14234   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14240:14548   */\n    tag_592:\n        /* \"#utility.yul\":14302:14306   */\n      0x00\n        /* \"#utility.yul\":14392:14410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14384:14390   */\n      dup3\n        /* \"#utility.yul\":14381:14411   */\n      gt\n        /* \"#utility.yul\":14378:14434   */\n      iszero\n      tag_798\n      jumpi\n        /* \"#utility.yul\":14414:14432   */\n      tag_799\n      tag_578\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":14378:14434   */\n    tag_798:\n        /* \"#utility.yul\":14452:14481   */\n      tag_800\n        /* \"#utility.yul\":14474:14480   */\n      dup3\n        /* \"#utility.yul\":14452:14481   */\n      tag_562\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":14444:14481   */\n      swap1\n      pop\n        /* \"#utility.yul\":14536:14540   */\n      0x20\n        /* \"#utility.yul\":14530:14534   */\n      dup2\n        /* \"#utility.yul\":14526:14541   */\n      add\n        /* \"#utility.yul\":14518:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14240:14548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14979   */\n    tag_593:\n        /* \"#utility.yul\":14632:14637   */\n      0x00\n        /* \"#utility.yul\":14657:14723   */\n      tag_802\n        /* \"#utility.yul\":14673:14722   */\n      tag_803\n        /* \"#utility.yul\":14715:14721   */\n      dup5\n        /* \"#utility.yul\":14673:14722   */\n      tag_592\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":14657:14723   */\n      tag_580\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":14648:14723   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:14752   */\n      dup3\n        /* \"#utility.yul\":14739:14744   */\n      dup2\n        /* \"#utility.yul\":14732:14753   */\n      mstore\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14777:14782   */\n      dup2\n        /* \"#utility.yul\":14773:14789   */\n      add\n        /* \"#utility.yul\":14822:14825   */\n      dup5\n        /* \"#utility.yul\":14813:14819   */\n      dup5\n        /* \"#utility.yul\":14808:14811   */\n      dup5\n        /* \"#utility.yul\":14804:14820   */\n      add\n        /* \"#utility.yul\":14801:14826   */\n      gt\n        /* \"#utility.yul\":14798:14910   */\n      iszero\n      tag_804\n      jumpi\n        /* \"#utility.yul\":14829:14908   */\n      tag_805\n      tag_577\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":14798:14910   */\n    tag_804:\n        /* \"#utility.yul\":14919:14973   */\n      tag_806\n        /* \"#utility.yul\":14966:14972   */\n      dup5\n        /* \"#utility.yul\":14961:14964   */\n      dup3\n        /* \"#utility.yul\":14956:14959   */\n      dup6\n        /* \"#utility.yul\":14919:14973   */\n      tag_582\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":14638:14979   */\n      pop\n        /* \"#utility.yul\":14554:14979   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14999:15339   */\n    tag_594:\n        /* \"#utility.yul\":15055:15060   */\n      0x00\n        /* \"#utility.yul\":15104:15107   */\n      dup3\n        /* \"#utility.yul\":15097:15101   */\n      0x1f\n        /* \"#utility.yul\":15089:15095   */\n      dup4\n        /* \"#utility.yul\":15085:15102   */\n      add\n        /* \"#utility.yul\":15081:15108   */\n      slt\n        /* \"#utility.yul\":15071:15193   */\n      tag_808\n      jumpi\n        /* \"#utility.yul\":15112:15191   */\n      tag_809\n      tag_576\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":15071:15193   */\n    tag_808:\n        /* \"#utility.yul\":15229:15235   */\n      dup2\n        /* \"#utility.yul\":15216:15236   */\n      calldataload\n        /* \"#utility.yul\":15254:15333   */\n      tag_810\n        /* \"#utility.yul\":15329:15332   */\n      dup5\n        /* \"#utility.yul\":15321:15327   */\n      dup3\n        /* \"#utility.yul\":15314:15318   */\n      0x20\n        /* \"#utility.yul\":15306:15312   */\n      dup7\n        /* \"#utility.yul\":15302:15319   */\n      add\n        /* \"#utility.yul\":15254:15333   */\n      tag_593\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":15245:15333   */\n      swap2\n      pop\n        /* \"#utility.yul\":15061:15339   */\n      pop\n        /* \"#utility.yul\":14999:15339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15345:16908   */\n    tag_194:\n        /* \"#utility.yul\":15478:15484   */\n      0x00\n        /* \"#utility.yul\":15486:15492   */\n      0x00\n        /* \"#utility.yul\":15494:15500   */\n      0x00\n        /* \"#utility.yul\":15502:15508   */\n      0x00\n        /* \"#utility.yul\":15510:15516   */\n      0x00\n        /* \"#utility.yul\":15518:15524   */\n      0x00\n        /* \"#utility.yul\":15526:15532   */\n      0x00\n        /* \"#utility.yul\":15575:15578   */\n      0xe0\n        /* \"#utility.yul\":15563:15572   */\n      dup9\n        /* \"#utility.yul\":15554:15561   */\n      dup11\n        /* \"#utility.yul\":15550:15573   */\n      sub\n        /* \"#utility.yul\":15546:15579   */\n      slt\n        /* \"#utility.yul\":15543:15663   */\n      iszero\n      tag_812\n      jumpi\n        /* \"#utility.yul\":15582:15661   */\n      tag_813\n      tag_545\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":15543:15663   */\n    tag_812:\n        /* \"#utility.yul\":15730:15731   */\n      0x00\n        /* \"#utility.yul\":15719:15728   */\n      dup9\n        /* \"#utility.yul\":15715:15732   */\n      add\n        /* \"#utility.yul\":15702:15733   */\n      calldataload\n        /* \"#utility.yul\":15760:15778   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15752:15758   */\n      dup2\n        /* \"#utility.yul\":15749:15779   */\n      gt\n        /* \"#utility.yul\":15746:15863   */\n      iszero\n      tag_814\n      jumpi\n        /* \"#utility.yul\":15782:15861   */\n      tag_815\n      tag_546\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":15746:15863   */\n    tag_814:\n        /* \"#utility.yul\":15887:15950   */\n      tag_816\n        /* \"#utility.yul\":15942:15949   */\n      dup11\n        /* \"#utility.yul\":15933:15939   */\n      dup3\n        /* \"#utility.yul\":15922:15931   */\n      dup12\n        /* \"#utility.yul\":15918:15940   */\n      add\n        /* \"#utility.yul\":15887:15950   */\n      tag_594\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":15877:15950   */\n      swap8\n      pop\n        /* \"#utility.yul\":15673:15960   */\n      pop\n        /* \"#utility.yul\":16027:16029   */\n      0x20\n        /* \"#utility.yul\":16016:16025   */\n      dup9\n        /* \"#utility.yul\":16012:16030   */\n      add\n        /* \"#utility.yul\":15999:16031   */\n      calldataload\n        /* \"#utility.yul\":16058:16076   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16050:16056   */\n      dup2\n        /* \"#utility.yul\":16047:16077   */\n      gt\n        /* \"#utility.yul\":16044:16161   */\n      iszero\n      tag_817\n      jumpi\n        /* \"#utility.yul\":16080:16159   */\n      tag_818\n      tag_546\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":16044:16161   */\n    tag_817:\n        /* \"#utility.yul\":16185:16248   */\n      tag_819\n        /* \"#utility.yul\":16240:16247   */\n      dup11\n        /* \"#utility.yul\":16231:16237   */\n      dup3\n        /* \"#utility.yul\":16220:16229   */\n      dup12\n        /* \"#utility.yul\":16216:16238   */\n      add\n        /* \"#utility.yul\":16185:16248   */\n      tag_594\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":16175:16248   */\n      swap7\n      pop\n        /* \"#utility.yul\":15970:16258   */\n      pop\n        /* \"#utility.yul\":16297:16299   */\n      0x40\n        /* \"#utility.yul\":16323:16376   */\n      tag_820\n        /* \"#utility.yul\":16368:16375   */\n      dup11\n        /* \"#utility.yul\":16359:16365   */\n      dup3\n        /* \"#utility.yul\":16348:16357   */\n      dup12\n        /* \"#utility.yul\":16344:16366   */\n      add\n        /* \"#utility.yul\":16323:16376   */\n      tag_558\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":16313:16376   */\n      swap6\n      pop\n        /* \"#utility.yul\":16268:16386   */\n      pop\n        /* \"#utility.yul\":16425:16427   */\n      0x60\n        /* \"#utility.yul\":16451:16504   */\n      tag_821\n        /* \"#utility.yul\":16496:16503   */\n      dup11\n        /* \"#utility.yul\":16487:16493   */\n      dup3\n        /* \"#utility.yul\":16476:16485   */\n      dup12\n        /* \"#utility.yul\":16472:16494   */\n      add\n        /* \"#utility.yul\":16451:16504   */\n      tag_555\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":16441:16504   */\n      swap5\n      pop\n        /* \"#utility.yul\":16396:16514   */\n      pop\n        /* \"#utility.yul\":16553:16556   */\n      0x80\n        /* \"#utility.yul\":16580:16633   */\n      tag_822\n        /* \"#utility.yul\":16625:16632   */\n      dup11\n        /* \"#utility.yul\":16616:16622   */\n      dup3\n        /* \"#utility.yul\":16605:16614   */\n      dup12\n        /* \"#utility.yul\":16601:16623   */\n      add\n        /* \"#utility.yul\":16580:16633   */\n      tag_555\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":16570:16633   */\n      swap4\n      pop\n        /* \"#utility.yul\":16524:16643   */\n      pop\n        /* \"#utility.yul\":16682:16685   */\n      0xa0\n        /* \"#utility.yul\":16709:16762   */\n      tag_823\n        /* \"#utility.yul\":16754:16761   */\n      dup11\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup12\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16709:16762   */\n      tag_555\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":16699:16762   */\n      swap3\n      pop\n        /* \"#utility.yul\":16653:16772   */\n      pop\n        /* \"#utility.yul\":16811:16814   */\n      0xc0\n        /* \"#utility.yul\":16838:16891   */\n      tag_824\n        /* \"#utility.yul\":16883:16890   */\n      dup11\n        /* \"#utility.yul\":16874:16880   */\n      dup3\n        /* \"#utility.yul\":16863:16872   */\n      dup12\n        /* \"#utility.yul\":16859:16881   */\n      add\n        /* \"#utility.yul\":16838:16891   */\n      tag_555\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":16828:16891   */\n      swap2\n      pop\n        /* \"#utility.yul\":16782:16901   */\n      pop\n        /* \"#utility.yul\":15345:16908   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16914:17094   */\n    tag_595:\n        /* \"#utility.yul\":16962:17039   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16959:16960   */\n      0x00\n        /* \"#utility.yul\":16952:17040   */\n      mstore\n        /* \"#utility.yul\":17059:17063   */\n      0x11\n        /* \"#utility.yul\":17056:17057   */\n      0x04\n        /* \"#utility.yul\":17049:17064   */\n      mstore\n        /* \"#utility.yul\":17083:17087   */\n      0x24\n        /* \"#utility.yul\":17080:17081   */\n      0x00\n        /* \"#utility.yul\":17073:17088   */\n      revert\n        /* \"#utility.yul\":17100:17291   */\n    tag_226:\n        /* \"#utility.yul\":17140:17143   */\n      0x00\n        /* \"#utility.yul\":17159:17179   */\n      tag_827\n        /* \"#utility.yul\":17177:17178   */\n      dup3\n        /* \"#utility.yul\":17159:17179   */\n      tag_556\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":17154:17179   */\n      swap2\n      pop\n        /* \"#utility.yul\":17193:17213   */\n      tag_828\n        /* \"#utility.yul\":17211:17212   */\n      dup4\n        /* \"#utility.yul\":17193:17213   */\n      tag_556\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":17188:17213   */\n      swap3\n      pop\n        /* \"#utility.yul\":17236:17237   */\n      dup3\n        /* \"#utility.yul\":17233:17234   */\n      dup3\n        /* \"#utility.yul\":17229:17238   */\n      add\n        /* \"#utility.yul\":17222:17238   */\n      swap1\n      pop\n        /* \"#utility.yul\":17257:17260   */\n      dup1\n        /* \"#utility.yul\":17254:17255   */\n      dup3\n        /* \"#utility.yul\":17251:17261   */\n      gt\n        /* \"#utility.yul\":17248:17284   */\n      iszero\n      tag_829\n      jumpi\n        /* \"#utility.yul\":17264:17282   */\n      tag_830\n      tag_595\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":17248:17284   */\n    tag_829:\n        /* \"#utility.yul\":17100:17291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17297:17477   */\n    tag_596:\n        /* \"#utility.yul\":17345:17422   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17342:17343   */\n      0x00\n        /* \"#utility.yul\":17335:17423   */\n      mstore\n        /* \"#utility.yul\":17442:17446   */\n      0x22\n        /* \"#utility.yul\":17439:17440   */\n      0x04\n        /* \"#utility.yul\":17432:17447   */\n      mstore\n        /* \"#utility.yul\":17466:17470   */\n      0x24\n        /* \"#utility.yul\":17463:17464   */\n      0x00\n        /* \"#utility.yul\":17456:17471   */\n      revert\n        /* \"#utility.yul\":17483:17803   */\n    tag_231:\n        /* \"#utility.yul\":17527:17533   */\n      0x00\n        /* \"#utility.yul\":17564:17565   */\n      0x02\n        /* \"#utility.yul\":17558:17562   */\n      dup3\n        /* \"#utility.yul\":17554:17566   */\n      div\n        /* \"#utility.yul\":17544:17566   */\n      swap1\n      pop\n        /* \"#utility.yul\":17611:17612   */\n      0x01\n        /* \"#utility.yul\":17605:17609   */\n      dup3\n        /* \"#utility.yul\":17601:17613   */\n      and\n        /* \"#utility.yul\":17632:17650   */\n      dup1\n        /* \"#utility.yul\":17622:17703   */\n      tag_833\n      jumpi\n        /* \"#utility.yul\":17688:17692   */\n      0x7f\n        /* \"#utility.yul\":17680:17686   */\n      dup3\n        /* \"#utility.yul\":17676:17693   */\n      and\n        /* \"#utility.yul\":17666:17693   */\n      swap2\n      pop\n        /* \"#utility.yul\":17622:17703   */\n    tag_833:\n        /* \"#utility.yul\":17750:17752   */\n      0x20\n        /* \"#utility.yul\":17742:17748   */\n      dup3\n        /* \"#utility.yul\":17739:17753   */\n      lt\n        /* \"#utility.yul\":17719:17737   */\n      dup2\n        /* \"#utility.yul\":17716:17754   */\n      sub\n        /* \"#utility.yul\":17713:17797   */\n      tag_834\n      jumpi\n        /* \"#utility.yul\":17769:17787   */\n      tag_835\n      tag_596\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":17713:17797   */\n    tag_834:\n        /* \"#utility.yul\":17534:17803   */\n      pop\n        /* \"#utility.yul\":17483:17803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17809:17983   */\n    tag_597:\n        /* \"#utility.yul\":17949:17975   */\n      0x5265636569766572206e6f742077686974656c69737465640000000000000000\n        /* \"#utility.yul\":17945:17946   */\n      0x00\n        /* \"#utility.yul\":17937:17943   */\n      dup3\n        /* \"#utility.yul\":17933:17947   */\n      add\n        /* \"#utility.yul\":17926:17976   */\n      mstore\n        /* \"#utility.yul\":17809:17983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17989:18355   */\n    tag_598:\n        /* \"#utility.yul\":18131:18134   */\n      0x00\n        /* \"#utility.yul\":18152:18219   */\n      tag_838\n        /* \"#utility.yul\":18216:18218   */\n      0x18\n        /* \"#utility.yul\":18211:18214   */\n      dup4\n        /* \"#utility.yul\":18152:18219   */\n      tag_560\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":18145:18219   */\n      swap2\n      pop\n        /* \"#utility.yul\":18228:18321   */\n      tag_839\n        /* \"#utility.yul\":18317:18320   */\n      dup3\n        /* \"#utility.yul\":18228:18321   */\n      tag_597\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":18346:18348   */\n      0x20\n        /* \"#utility.yul\":18341:18344   */\n      dup3\n        /* \"#utility.yul\":18337:18349   */\n      add\n        /* \"#utility.yul\":18330:18349   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:18355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18361:18780   */\n    tag_246:\n        /* \"#utility.yul\":18527:18531   */\n      0x00\n        /* \"#utility.yul\":18565:18567   */\n      0x20\n        /* \"#utility.yul\":18554:18563   */\n      dup3\n        /* \"#utility.yul\":18550:18568   */\n      add\n        /* \"#utility.yul\":18542:18568   */\n      swap1\n      pop\n        /* \"#utility.yul\":18614:18623   */\n      dup2\n        /* \"#utility.yul\":18608:18612   */\n      dup2\n        /* \"#utility.yul\":18604:18624   */\n      sub\n        /* \"#utility.yul\":18600:18601   */\n      0x00\n        /* \"#utility.yul\":18589:18598   */\n      dup4\n        /* \"#utility.yul\":18585:18602   */\n      add\n        /* \"#utility.yul\":18578:18625   */\n      mstore\n        /* \"#utility.yul\":18642:18773   */\n      tag_841\n        /* \"#utility.yul\":18768:18772   */\n      dup2\n        /* \"#utility.yul\":18642:18773   */\n      tag_598\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":18634:18773   */\n      swap1\n      pop\n        /* \"#utility.yul\":18361:18780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18786:18980   */\n    tag_249:\n        /* \"#utility.yul\":18826:18830   */\n      0x00\n        /* \"#utility.yul\":18846:18866   */\n      tag_843\n        /* \"#utility.yul\":18864:18865   */\n      dup3\n        /* \"#utility.yul\":18846:18866   */\n      tag_556\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":18841:18866   */\n      swap2\n      pop\n        /* \"#utility.yul\":18880:18900   */\n      tag_844\n        /* \"#utility.yul\":18898:18899   */\n      dup4\n        /* \"#utility.yul\":18880:18900   */\n      tag_556\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":18875:18900   */\n      swap3\n      pop\n        /* \"#utility.yul\":18924:18925   */\n      dup3\n        /* \"#utility.yul\":18921:18922   */\n      dup3\n        /* \"#utility.yul\":18917:18926   */\n      sub\n        /* \"#utility.yul\":18909:18926   */\n      swap1\n      pop\n        /* \"#utility.yul\":18948:18949   */\n      dup2\n        /* \"#utility.yul\":18942:18946   */\n      dup2\n        /* \"#utility.yul\":18939:18950   */\n      gt\n        /* \"#utility.yul\":18936:18973   */\n      iszero\n      tag_845\n      jumpi\n        /* \"#utility.yul\":18953:18971   */\n      tag_846\n      tag_595\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":18936:18973   */\n    tag_845:\n        /* \"#utility.yul\":18786:18980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18986:19157   */\n    tag_599:\n        /* \"#utility.yul\":19126:19149   */\n      0x496e73756666696369656e7420756e6c6f636b65640000000000000000000000\n        /* \"#utility.yul\":19122:19123   */\n      0x00\n        /* \"#utility.yul\":19114:19120   */\n      dup3\n        /* \"#utility.yul\":19110:19124   */\n      add\n        /* \"#utility.yul\":19103:19150   */\n      mstore\n        /* \"#utility.yul\":18986:19157   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19163:19529   */\n    tag_600:\n        /* \"#utility.yul\":19305:19308   */\n      0x00\n        /* \"#utility.yul\":19326:19393   */\n      tag_849\n        /* \"#utility.yul\":19390:19392   */\n      0x15\n        /* \"#utility.yul\":19385:19388   */\n      dup4\n        /* \"#utility.yul\":19326:19393   */\n      tag_560\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":19319:19393   */\n      swap2\n      pop\n        /* \"#utility.yul\":19402:19495   */\n      tag_850\n        /* \"#utility.yul\":19491:19494   */\n      dup3\n        /* \"#utility.yul\":19402:19495   */\n      tag_599\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":19520:19522   */\n      0x20\n        /* \"#utility.yul\":19515:19518   */\n      dup3\n        /* \"#utility.yul\":19511:19523   */\n      add\n        /* \"#utility.yul\":19504:19523   */\n      swap1\n      pop\n        /* \"#utility.yul\":19163:19529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19535:19954   */\n    tag_252:\n        /* \"#utility.yul\":19701:19705   */\n      0x00\n        /* \"#utility.yul\":19739:19741   */\n      0x20\n        /* \"#utility.yul\":19728:19737   */\n      dup3\n        /* \"#utility.yul\":19724:19742   */\n      add\n        /* \"#utility.yul\":19716:19742   */\n      swap1\n      pop\n        /* \"#utility.yul\":19788:19797   */\n      dup2\n        /* \"#utility.yul\":19782:19786   */\n      dup2\n        /* \"#utility.yul\":19778:19798   */\n      sub\n        /* \"#utility.yul\":19774:19775   */\n      0x00\n        /* \"#utility.yul\":19763:19772   */\n      dup4\n        /* \"#utility.yul\":19759:19776   */\n      add\n        /* \"#utility.yul\":19752:19799   */\n      mstore\n        /* \"#utility.yul\":19816:19947   */\n      tag_852\n        /* \"#utility.yul\":19942:19946   */\n      dup2\n        /* \"#utility.yul\":19816:19947   */\n      tag_600\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":19808:19947   */\n      swap1\n      pop\n        /* \"#utility.yul\":19535:19954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19960:20183   */\n    tag_601:\n        /* \"#utility.yul\":20100:20134   */\n      0x43726f73732d636861696e207265636569766572206e6f742077686974656c69\n        /* \"#utility.yul\":20096:20097   */\n      0x00\n        /* \"#utility.yul\":20088:20094   */\n      dup3\n        /* \"#utility.yul\":20084:20098   */\n      add\n        /* \"#utility.yul\":20077:20135   */\n      mstore\n        /* \"#utility.yul\":20169:20175   */\n      0x7374656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20164:20166   */\n      0x20\n        /* \"#utility.yul\":20156:20162   */\n      dup3\n        /* \"#utility.yul\":20152:20167   */\n      add\n        /* \"#utility.yul\":20145:20176   */\n      mstore\n        /* \"#utility.yul\":19960:20183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20189:20555   */\n    tag_602:\n        /* \"#utility.yul\":20331:20334   */\n      0x00\n        /* \"#utility.yul\":20352:20419   */\n      tag_855\n        /* \"#utility.yul\":20416:20418   */\n      0x24\n        /* \"#utility.yul\":20411:20414   */\n      dup4\n        /* \"#utility.yul\":20352:20419   */\n      tag_560\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":20345:20419   */\n      swap2\n      pop\n        /* \"#utility.yul\":20428:20521   */\n      tag_856\n        /* \"#utility.yul\":20517:20520   */\n      dup3\n        /* \"#utility.yul\":20428:20521   */\n      tag_601\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":20546:20548   */\n      0x40\n        /* \"#utility.yul\":20541:20544   */\n      dup3\n        /* \"#utility.yul\":20537:20549   */\n      add\n        /* \"#utility.yul\":20530:20549   */\n      swap1\n      pop\n        /* \"#utility.yul\":20189:20555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20561:20980   */\n    tag_312:\n        /* \"#utility.yul\":20727:20731   */\n      0x00\n        /* \"#utility.yul\":20765:20767   */\n      0x20\n        /* \"#utility.yul\":20754:20763   */\n      dup3\n        /* \"#utility.yul\":20750:20768   */\n      add\n        /* \"#utility.yul\":20742:20768   */\n      swap1\n      pop\n        /* \"#utility.yul\":20814:20823   */\n      dup2\n        /* \"#utility.yul\":20808:20812   */\n      dup2\n        /* \"#utility.yul\":20804:20824   */\n      sub\n        /* \"#utility.yul\":20800:20801   */\n      0x00\n        /* \"#utility.yul\":20789:20798   */\n      dup4\n        /* \"#utility.yul\":20785:20802   */\n      add\n        /* \"#utility.yul\":20778:20825   */\n      mstore\n        /* \"#utility.yul\":20842:20973   */\n      tag_858\n        /* \"#utility.yul\":20968:20972   */\n      dup2\n        /* \"#utility.yul\":20842:20973   */\n      tag_602\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":20834:20973   */\n      swap1\n      pop\n        /* \"#utility.yul\":20561:20980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20986:21101   */\n    tag_603:\n        /* \"#utility.yul\":21071:21094   */\n      tag_860\n        /* \"#utility.yul\":21088:21093   */\n      dup2\n        /* \"#utility.yul\":21071:21094   */\n      tag_589\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":21066:21069   */\n      dup3\n        /* \"#utility.yul\":21059:21095   */\n      mstore\n        /* \"#utility.yul\":20986:21101   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21107:21225   */\n    tag_604:\n        /* \"#utility.yul\":21194:21218   */\n      tag_862\n        /* \"#utility.yul\":21212:21217   */\n      dup2\n        /* \"#utility.yul\":21194:21218   */\n      tag_553\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":21189:21192   */\n      dup3\n        /* \"#utility.yul\":21182:21219   */\n      mstore\n        /* \"#utility.yul\":21107:21225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21231:21669   */\n    tag_321:\n        /* \"#utility.yul\":21378:21382   */\n      0x00\n        /* \"#utility.yul\":21416:21418   */\n      0x60\n        /* \"#utility.yul\":21405:21414   */\n      dup3\n        /* \"#utility.yul\":21401:21419   */\n      add\n        /* \"#utility.yul\":21393:21419   */\n      swap1\n      pop\n        /* \"#utility.yul\":21429:21498   */\n      tag_864\n        /* \"#utility.yul\":21495:21496   */\n      0x00\n        /* \"#utility.yul\":21484:21493   */\n      dup4\n        /* \"#utility.yul\":21480:21497   */\n      add\n        /* \"#utility.yul\":21471:21477   */\n      dup7\n        /* \"#utility.yul\":21429:21498   */\n      tag_603\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":21508:21580   */\n      tag_865\n        /* \"#utility.yul\":21576:21578   */\n      0x20\n        /* \"#utility.yul\":21565:21574   */\n      dup4\n        /* \"#utility.yul\":21561:21579   */\n      add\n        /* \"#utility.yul\":21552:21558   */\n      dup6\n        /* \"#utility.yul\":21508:21580   */\n      tag_604\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":21590:21662   */\n      tag_866\n        /* \"#utility.yul\":21658:21660   */\n      0x40\n        /* \"#utility.yul\":21647:21656   */\n      dup4\n        /* \"#utility.yul\":21643:21661   */\n      add\n        /* \"#utility.yul\":21634:21640   */\n      dup5\n        /* \"#utility.yul\":21590:21662   */\n      tag_564\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":21231:21669   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21675:22085   */\n    tag_339:\n        /* \"#utility.yul\":21715:21722   */\n      0x00\n        /* \"#utility.yul\":21738:21758   */\n      tag_868\n        /* \"#utility.yul\":21756:21757   */\n      dup3\n        /* \"#utility.yul\":21738:21758   */\n      tag_556\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":21733:21758   */\n      swap2\n      pop\n        /* \"#utility.yul\":21772:21792   */\n      tag_869\n        /* \"#utility.yul\":21790:21791   */\n      dup4\n        /* \"#utility.yul\":21772:21792   */\n      tag_556\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":21767:21792   */\n      swap3\n      pop\n        /* \"#utility.yul\":21827:21828   */\n      dup3\n        /* \"#utility.yul\":21824:21825   */\n      dup3\n        /* \"#utility.yul\":21820:21829   */\n      mul\n        /* \"#utility.yul\":21849:21879   */\n      tag_870\n        /* \"#utility.yul\":21867:21878   */\n      dup2\n        /* \"#utility.yul\":21849:21879   */\n      tag_556\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":21838:21879   */\n      swap2\n      pop\n        /* \"#utility.yul\":22028:22029   */\n      dup3\n        /* \"#utility.yul\":22019:22026   */\n      dup3\n        /* \"#utility.yul\":22015:22030   */\n      div\n        /* \"#utility.yul\":22012:22013   */\n      dup5\n        /* \"#utility.yul\":22009:22031   */\n      eq\n        /* \"#utility.yul\":21989:21990   */\n      dup4\n        /* \"#utility.yul\":21982:21991   */\n      iszero\n        /* \"#utility.yul\":21962:22045   */\n      or\n        /* \"#utility.yul\":21939:22078   */\n      tag_871\n      jumpi\n        /* \"#utility.yul\":22058:22076   */\n      tag_872\n      tag_595\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":21939:22078   */\n    tag_871:\n        /* \"#utility.yul\":21723:22085   */\n      pop\n        /* \"#utility.yul\":21675:22085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22091:22316   */\n    tag_605:\n        /* \"#utility.yul\":22231:22265   */\n      0x546f74616c20736861726573206d757374206265206772656174657220746861\n        /* \"#utility.yul\":22227:22228   */\n      0x00\n        /* \"#utility.yul\":22219:22225   */\n      dup3\n        /* \"#utility.yul\":22215:22229   */\n      add\n        /* \"#utility.yul\":22208:22266   */\n      mstore\n        /* \"#utility.yul\":22300:22308   */\n      0x6e207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22295:22297   */\n      0x20\n        /* \"#utility.yul\":22287:22293   */\n      dup3\n        /* \"#utility.yul\":22283:22298   */\n      add\n        /* \"#utility.yul\":22276:22309   */\n      mstore\n        /* \"#utility.yul\":22091:22316   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22322:22688   */\n    tag_606:\n        /* \"#utility.yul\":22464:22467   */\n      0x00\n        /* \"#utility.yul\":22485:22552   */\n      tag_875\n        /* \"#utility.yul\":22549:22551   */\n      0x26\n        /* \"#utility.yul\":22544:22547   */\n      dup4\n        /* \"#utility.yul\":22485:22552   */\n      tag_560\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":22478:22552   */\n      swap2\n      pop\n        /* \"#utility.yul\":22561:22654   */\n      tag_876\n        /* \"#utility.yul\":22650:22653   */\n      dup3\n        /* \"#utility.yul\":22561:22654   */\n      tag_605\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":22679:22681   */\n      0x40\n        /* \"#utility.yul\":22674:22677   */\n      dup3\n        /* \"#utility.yul\":22670:22682   */\n      add\n        /* \"#utility.yul\":22663:22682   */\n      swap1\n      pop\n        /* \"#utility.yul\":22322:22688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22694:23113   */\n    tag_358:\n        /* \"#utility.yul\":22860:22864   */\n      0x00\n        /* \"#utility.yul\":22898:22900   */\n      0x20\n        /* \"#utility.yul\":22887:22896   */\n      dup3\n        /* \"#utility.yul\":22883:22901   */\n      add\n        /* \"#utility.yul\":22875:22901   */\n      swap1\n      pop\n        /* \"#utility.yul\":22947:22956   */\n      dup2\n        /* \"#utility.yul\":22941:22945   */\n      dup2\n        /* \"#utility.yul\":22937:22957   */\n      sub\n        /* \"#utility.yul\":22933:22934   */\n      0x00\n        /* \"#utility.yul\":22922:22931   */\n      dup4\n        /* \"#utility.yul\":22918:22935   */\n      add\n        /* \"#utility.yul\":22911:22958   */\n      mstore\n        /* \"#utility.yul\":22975:23106   */\n      tag_878\n        /* \"#utility.yul\":23101:23105   */\n      dup2\n        /* \"#utility.yul\":22975:23106   */\n      tag_606\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":22967:23106   */\n      swap1\n      pop\n        /* \"#utility.yul\":22694:23113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23119:23204   */\n    tag_607:\n        /* \"#utility.yul\":23164:23171   */\n      0x00\n        /* \"#utility.yul\":23193:23198   */\n      dup2\n        /* \"#utility.yul\":23182:23198   */\n      swap1\n      pop\n        /* \"#utility.yul\":23119:23204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23210:23366   */\n    tag_608:\n        /* \"#utility.yul\":23267:23276   */\n      0x00\n        /* \"#utility.yul\":23300:23360   */\n      tag_881\n        /* \"#utility.yul\":23317:23359   */\n      tag_882\n        /* \"#utility.yul\":23326:23358   */\n      tag_883\n        /* \"#utility.yul\":23352:23357   */\n      dup5\n        /* \"#utility.yul\":23326:23358   */\n      tag_607\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":23317:23359   */\n      tag_571\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":23300:23360   */\n      tag_589\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":23287:23360   */\n      swap1\n      pop\n        /* \"#utility.yul\":23210:23366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23372:23517   */\n    tag_609:\n        /* \"#utility.yul\":23466:23510   */\n      tag_885\n        /* \"#utility.yul\":23504:23509   */\n      dup2\n        /* \"#utility.yul\":23466:23510   */\n      tag_608\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":23461:23464   */\n      dup3\n        /* \"#utility.yul\":23454:23511   */\n      mstore\n        /* \"#utility.yul\":23372:23517   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23523:23759   */\n    tag_371:\n        /* \"#utility.yul\":23623:23627   */\n      0x00\n        /* \"#utility.yul\":23661:23663   */\n      0x20\n        /* \"#utility.yul\":23650:23659   */\n      dup3\n        /* \"#utility.yul\":23646:23664   */\n      add\n        /* \"#utility.yul\":23638:23664   */\n      swap1\n      pop\n        /* \"#utility.yul\":23674:23752   */\n      tag_887\n        /* \"#utility.yul\":23749:23750   */\n      0x00\n        /* \"#utility.yul\":23738:23747   */\n      dup4\n        /* \"#utility.yul\":23734:23751   */\n      add\n        /* \"#utility.yul\":23725:23731   */\n      dup5\n        /* \"#utility.yul\":23674:23752   */\n      tag_609\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":23523:23759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23765:23987   */\n    tag_407:\n        /* \"#utility.yul\":23858:23862   */\n      0x00\n        /* \"#utility.yul\":23896:23898   */\n      0x20\n        /* \"#utility.yul\":23885:23894   */\n      dup3\n        /* \"#utility.yul\":23881:23899   */\n      add\n        /* \"#utility.yul\":23873:23899   */\n      swap1\n      pop\n        /* \"#utility.yul\":23909:23980   */\n      tag_889\n        /* \"#utility.yul\":23977:23978   */\n      0x00\n        /* \"#utility.yul\":23966:23975   */\n      dup4\n        /* \"#utility.yul\":23962:23979   */\n      add\n        /* \"#utility.yul\":23953:23959   */\n      dup5\n        /* \"#utility.yul\":23909:23980   */\n      tag_604\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":23765:23987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23993:24136   */\n    tag_610:\n        /* \"#utility.yul\":24050:24055   */\n      0x00\n        /* \"#utility.yul\":24081:24087   */\n      dup2\n        /* \"#utility.yul\":24075:24088   */\n      mload\n        /* \"#utility.yul\":24066:24088   */\n      swap1\n      pop\n        /* \"#utility.yul\":24097:24130   */\n      tag_891\n        /* \"#utility.yul\":24124:24129   */\n      dup2\n        /* \"#utility.yul\":24097:24130   */\n      tag_566\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":23993:24136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24142:24493   */\n    tag_425:\n        /* \"#utility.yul\":24212:24218   */\n      0x00\n        /* \"#utility.yul\":24261:24263   */\n      0x20\n        /* \"#utility.yul\":24249:24258   */\n      dup3\n        /* \"#utility.yul\":24240:24247   */\n      dup5\n        /* \"#utility.yul\":24236:24259   */\n      sub\n        /* \"#utility.yul\":24232:24264   */\n      slt\n        /* \"#utility.yul\":24229:24348   */\n      iszero\n      tag_893\n      jumpi\n        /* \"#utility.yul\":24267:24346   */\n      tag_894\n      tag_545\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":24229:24348   */\n    tag_893:\n        /* \"#utility.yul\":24387:24388   */\n      0x00\n        /* \"#utility.yul\":24412:24476   */\n      tag_895\n        /* \"#utility.yul\":24468:24475   */\n      dup5\n        /* \"#utility.yul\":24459:24465   */\n      dup3\n        /* \"#utility.yul\":24448:24457   */\n      dup6\n        /* \"#utility.yul\":24444:24466   */\n      add\n        /* \"#utility.yul\":24412:24476   */\n      tag_610\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":24402:24476   */\n      swap2\n      pop\n        /* \"#utility.yul\":24358:24486   */\n      pop\n        /* \"#utility.yul\":24142:24493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24499:24831   */\n    tag_466:\n        /* \"#utility.yul\":24620:24624   */\n      0x00\n        /* \"#utility.yul\":24658:24660   */\n      0x40\n        /* \"#utility.yul\":24647:24656   */\n      dup3\n        /* \"#utility.yul\":24643:24661   */\n      add\n        /* \"#utility.yul\":24635:24661   */\n      swap1\n      pop\n        /* \"#utility.yul\":24671:24742   */\n      tag_897\n        /* \"#utility.yul\":24739:24740   */\n      0x00\n        /* \"#utility.yul\":24728:24737   */\n      dup4\n        /* \"#utility.yul\":24724:24741   */\n      add\n        /* \"#utility.yul\":24715:24721   */\n      dup6\n        /* \"#utility.yul\":24671:24742   */\n      tag_604\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":24752:24824   */\n      tag_898\n        /* \"#utility.yul\":24820:24822   */\n      0x20\n        /* \"#utility.yul\":24809:24818   */\n      dup4\n        /* \"#utility.yul\":24805:24823   */\n      add\n        /* \"#utility.yul\":24796:24802   */\n      dup5\n        /* \"#utility.yul\":24752:24824   */\n      tag_568\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":24499:24831   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24837:25279   */\n    tag_480:\n        /* \"#utility.yul\":24986:24990   */\n      0x00\n        /* \"#utility.yul\":25024:25026   */\n      0x60\n        /* \"#utility.yul\":25013:25022   */\n      dup3\n        /* \"#utility.yul\":25009:25027   */\n      add\n        /* \"#utility.yul\":25001:25027   */\n      swap1\n      pop\n        /* \"#utility.yul\":25037:25108   */\n      tag_900\n        /* \"#utility.yul\":25105:25106   */\n      0x00\n        /* \"#utility.yul\":25094:25103   */\n      dup4\n        /* \"#utility.yul\":25090:25107   */\n      add\n        /* \"#utility.yul\":25081:25087   */\n      dup7\n        /* \"#utility.yul\":25037:25108   */\n      tag_604\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":25118:25190   */\n      tag_901\n        /* \"#utility.yul\":25186:25188   */\n      0x20\n        /* \"#utility.yul\":25175:25184   */\n      dup4\n        /* \"#utility.yul\":25171:25189   */\n      add\n        /* \"#utility.yul\":25162:25168   */\n      dup6\n        /* \"#utility.yul\":25118:25190   */\n      tag_564\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":25200:25272   */\n      tag_902\n        /* \"#utility.yul\":25268:25270   */\n      0x40\n        /* \"#utility.yul\":25257:25266   */\n      dup4\n        /* \"#utility.yul\":25253:25271   */\n      add\n        /* \"#utility.yul\":25244:25250   */\n      dup5\n        /* \"#utility.yul\":25200:25272   */\n      tag_564\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":24837:25279   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25285:25426   */\n    tag_611:\n        /* \"#utility.yul\":25334:25338   */\n      0x00\n        /* \"#utility.yul\":25357:25360   */\n      dup2\n        /* \"#utility.yul\":25349:25360   */\n      swap1\n      pop\n        /* \"#utility.yul\":25380:25383   */\n      dup2\n        /* \"#utility.yul\":25377:25378   */\n      0x00\n        /* \"#utility.yul\":25370:25384   */\n      mstore\n        /* \"#utility.yul\":25414:25418   */\n      0x20\n        /* \"#utility.yul\":25411:25412   */\n      0x00\n        /* \"#utility.yul\":25401:25419   */\n      keccak256\n        /* \"#utility.yul\":25393:25419   */\n      swap1\n      pop\n        /* \"#utility.yul\":25285:25426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25432:25525   */\n    tag_612:\n        /* \"#utility.yul\":25469:25475   */\n      0x00\n        /* \"#utility.yul\":25516:25518   */\n      0x20\n        /* \"#utility.yul\":25511:25513   */\n      0x1f\n        /* \"#utility.yul\":25504:25509   */\n      dup4\n        /* \"#utility.yul\":25500:25514   */\n      add\n        /* \"#utility.yul\":25496:25519   */\n      div\n        /* \"#utility.yul\":25486:25519   */\n      swap1\n      pop\n        /* \"#utility.yul\":25432:25525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25531:25638   */\n    tag_613:\n        /* \"#utility.yul\":25575:25583   */\n      0x00\n        /* \"#utility.yul\":25625:25630   */\n      dup3\n        /* \"#utility.yul\":25619:25623   */\n      dup3\n        /* \"#utility.yul\":25615:25631   */\n      shl\n        /* \"#utility.yul\":25594:25631   */\n      swap1\n      pop\n        /* \"#utility.yul\":25531:25638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25644:26037   */\n    tag_614:\n        /* \"#utility.yul\":25713:25719   */\n      0x00\n        /* \"#utility.yul\":25763:25764   */\n      0x08\n        /* \"#utility.yul\":25751:25761   */\n      dup4\n        /* \"#utility.yul\":25747:25765   */\n      mul\n        /* \"#utility.yul\":25786:25883   */\n      tag_907\n        /* \"#utility.yul\":25816:25882   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25805:25814   */\n      dup3\n        /* \"#utility.yul\":25786:25883   */\n      tag_613\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":25904:25943   */\n      tag_908\n        /* \"#utility.yul\":25934:25942   */\n      dup7\n        /* \"#utility.yul\":25923:25932   */\n      dup4\n        /* \"#utility.yul\":25904:25943   */\n      tag_613\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":25892:25943   */\n      swap6\n      pop\n        /* \"#utility.yul\":25976:25980   */\n      dup1\n        /* \"#utility.yul\":25972:25981   */\n      not\n        /* \"#utility.yul\":25965:25970   */\n      dup5\n        /* \"#utility.yul\":25961:25982   */\n      and\n        /* \"#utility.yul\":25952:25982   */\n      swap4\n      pop\n        /* \"#utility.yul\":26025:26029   */\n      dup1\n        /* \"#utility.yul\":26015:26023   */\n      dup7\n        /* \"#utility.yul\":26011:26030   */\n      and\n        /* \"#utility.yul\":26004:26009   */\n      dup5\n        /* \"#utility.yul\":26001:26031   */\n      or\n        /* \"#utility.yul\":25991:26031   */\n      swap3\n      pop\n        /* \"#utility.yul\":25720:26037   */\n      pop\n      pop\n        /* \"#utility.yul\":25644:26037   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26043:26185   */\n    tag_615:\n        /* \"#utility.yul\":26093:26102   */\n      0x00\n        /* \"#utility.yul\":26126:26179   */\n      tag_910\n        /* \"#utility.yul\":26144:26178   */\n      tag_911\n        /* \"#utility.yul\":26153:26177   */\n      tag_912\n        /* \"#utility.yul\":26171:26176   */\n      dup5\n        /* \"#utility.yul\":26153:26177   */\n      tag_556\n      jump\t// in\n    tag_912:\n        /* \"#utility.yul\":26144:26178   */\n      tag_571\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":26126:26179   */\n      tag_556\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":26113:26179   */\n      swap1\n      pop\n        /* \"#utility.yul\":26043:26185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26191:26266   */\n    tag_616:\n        /* \"#utility.yul\":26234:26237   */\n      0x00\n        /* \"#utility.yul\":26255:26260   */\n      dup2\n        /* \"#utility.yul\":26248:26260   */\n      swap1\n      pop\n        /* \"#utility.yul\":26191:26266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26272:26541   */\n    tag_617:\n        /* \"#utility.yul\":26382:26421   */\n      tag_915\n        /* \"#utility.yul\":26413:26420   */\n      dup4\n        /* \"#utility.yul\":26382:26421   */\n      tag_615\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":26443:26534   */\n      tag_916\n        /* \"#utility.yul\":26492:26533   */\n      tag_917\n        /* \"#utility.yul\":26516:26532   */\n      dup3\n        /* \"#utility.yul\":26492:26533   */\n      tag_616\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":26484:26490   */\n      dup5\n        /* \"#utility.yul\":26477:26481   */\n      dup5\n        /* \"#utility.yul\":26471:26482   */\n      sload\n        /* \"#utility.yul\":26443:26534   */\n      tag_614\n      jump\t// in\n    tag_916:\n        /* \"#utility.yul\":26437:26441   */\n      dup3\n        /* \"#utility.yul\":26430:26535   */\n      sstore\n        /* \"#utility.yul\":26348:26541   */\n      pop\n        /* \"#utility.yul\":26272:26541   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26547:26620   */\n    tag_618:\n        /* \"#utility.yul\":26592:26595   */\n      0x00\n        /* \"#utility.yul\":26613:26614   */\n      0x00\n        /* \"#utility.yul\":26606:26614   */\n      swap1\n      pop\n        /* \"#utility.yul\":26547:26620   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":26626:26815   */\n    tag_619:\n        /* \"#utility.yul\":26703:26735   */\n      tag_920\n      tag_618\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":26744:26809   */\n      tag_921\n        /* \"#utility.yul\":26802:26808   */\n      dup2\n        /* \"#utility.yul\":26794:26800   */\n      dup5\n        /* \"#utility.yul\":26788:26792   */\n      dup5\n        /* \"#utility.yul\":26744:26809   */\n      tag_617\n      jump\t// in\n    tag_921:\n        /* \"#utility.yul\":26679:26815   */\n      pop\n        /* \"#utility.yul\":26626:26815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26821:27007   */\n    tag_620:\n        /* \"#utility.yul\":26881:27001   */\n    tag_923:\n        /* \"#utility.yul\":26898:26901   */\n      dup2\n        /* \"#utility.yul\":26891:26896   */\n      dup2\n        /* \"#utility.yul\":26888:26902   */\n      lt\n        /* \"#utility.yul\":26881:27001   */\n      iszero\n      tag_925\n      jumpi\n        /* \"#utility.yul\":26952:26991   */\n      tag_926\n        /* \"#utility.yul\":26989:26990   */\n      0x00\n        /* \"#utility.yul\":26982:26987   */\n      dup3\n        /* \"#utility.yul\":26952:26991   */\n      tag_619\n      jump\t// in\n    tag_926:\n        /* \"#utility.yul\":26925:26926   */\n      0x01\n        /* \"#utility.yul\":26918:26923   */\n      dup2\n        /* \"#utility.yul\":26914:26927   */\n      add\n        /* \"#utility.yul\":26905:26927   */\n      swap1\n      pop\n        /* \"#utility.yul\":26881:27001   */\n      jump(tag_923)\n    tag_925:\n        /* \"#utility.yul\":26821:27007   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27013:27556   */\n    tag_621:\n        /* \"#utility.yul\":27114:27116   */\n      0x1f\n        /* \"#utility.yul\":27109:27112   */\n      dup3\n        /* \"#utility.yul\":27106:27117   */\n      gt\n        /* \"#utility.yul\":27103:27549   */\n      iszero\n      tag_928\n      jumpi\n        /* \"#utility.yul\":27148:27186   */\n      tag_929\n        /* \"#utility.yul\":27180:27185   */\n      dup2\n        /* \"#utility.yul\":27148:27186   */\n      tag_611\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":27232:27261   */\n      tag_930\n        /* \"#utility.yul\":27250:27260   */\n      dup5\n        /* \"#utility.yul\":27232:27261   */\n      tag_612\n      jump\t// in\n    tag_930:\n        /* \"#utility.yul\":27222:27230   */\n      dup2\n        /* \"#utility.yul\":27218:27262   */\n      add\n        /* \"#utility.yul\":27415:27417   */\n      0x20\n        /* \"#utility.yul\":27403:27413   */\n      dup6\n        /* \"#utility.yul\":27400:27418   */\n      lt\n        /* \"#utility.yul\":27397:27446   */\n      iszero\n      tag_931\n      jumpi\n        /* \"#utility.yul\":27436:27444   */\n      dup2\n        /* \"#utility.yul\":27421:27444   */\n      swap1\n      pop\n        /* \"#utility.yul\":27397:27446   */\n    tag_931:\n        /* \"#utility.yul\":27459:27539   */\n      tag_932\n        /* \"#utility.yul\":27515:27537   */\n      tag_933\n        /* \"#utility.yul\":27533:27536   */\n      dup6\n        /* \"#utility.yul\":27515:27537   */\n      tag_612\n      jump\t// in\n    tag_933:\n        /* \"#utility.yul\":27505:27513   */\n      dup4\n        /* \"#utility.yul\":27501:27538   */\n      add\n        /* \"#utility.yul\":27488:27499   */\n      dup3\n        /* \"#utility.yul\":27459:27539   */\n      tag_620\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":27118:27549   */\n      pop\n      pop\n        /* \"#utility.yul\":27103:27549   */\n    tag_928:\n        /* \"#utility.yul\":27013:27556   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27562:27679   */\n    tag_622:\n        /* \"#utility.yul\":27616:27624   */\n      0x00\n        /* \"#utility.yul\":27666:27671   */\n      dup3\n        /* \"#utility.yul\":27660:27664   */\n      dup3\n        /* \"#utility.yul\":27656:27672   */\n      shr\n        /* \"#utility.yul\":27635:27672   */\n      swap1\n      pop\n        /* \"#utility.yul\":27562:27679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27685:27854   */\n    tag_623:\n        /* \"#utility.yul\":27729:27735   */\n      0x00\n        /* \"#utility.yul\":27762:27813   */\n      tag_936\n        /* \"#utility.yul\":27810:27811   */\n      0x00\n        /* \"#utility.yul\":27806:27812   */\n      not\n        /* \"#utility.yul\":27798:27803   */\n      dup5\n        /* \"#utility.yul\":27795:27796   */\n      0x08\n        /* \"#utility.yul\":27791:27804   */\n      mul\n        /* \"#utility.yul\":27762:27813   */\n      tag_622\n      jump\t// in\n    tag_936:\n        /* \"#utility.yul\":27758:27814   */\n      not\n        /* \"#utility.yul\":27843:27847   */\n      dup1\n        /* \"#utility.yul\":27837:27841   */\n      dup4\n        /* \"#utility.yul\":27833:27848   */\n      and\n        /* \"#utility.yul\":27823:27848   */\n      swap2\n      pop\n        /* \"#utility.yul\":27736:27854   */\n      pop\n        /* \"#utility.yul\":27685:27854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27859:28154   */\n    tag_624:\n        /* \"#utility.yul\":27935:27939   */\n      0x00\n        /* \"#utility.yul\":28081:28110   */\n      tag_938\n        /* \"#utility.yul\":28106:28109   */\n      dup4\n        /* \"#utility.yul\":28100:28104   */\n      dup4\n        /* \"#utility.yul\":28081:28110   */\n      tag_623\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":28073:28110   */\n      swap2\n      pop\n        /* \"#utility.yul\":28143:28146   */\n      dup3\n        /* \"#utility.yul\":28140:28141   */\n      0x02\n        /* \"#utility.yul\":28136:28147   */\n      mul\n        /* \"#utility.yul\":28130:28134   */\n      dup3\n        /* \"#utility.yul\":28127:28148   */\n      or\n        /* \"#utility.yul\":28119:28148   */\n      swap1\n      pop\n        /* \"#utility.yul\":27859:28154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28159:29554   */\n    tag_514:\n        /* \"#utility.yul\":28276:28313   */\n      tag_940\n        /* \"#utility.yul\":28309:28312   */\n      dup3\n        /* \"#utility.yul\":28276:28313   */\n      tag_559\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":28378:28396   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":28370:28376   */\n      dup2\n        /* \"#utility.yul\":28367:28397   */\n      gt\n        /* \"#utility.yul\":28364:28420   */\n      iszero\n      tag_941\n      jumpi\n        /* \"#utility.yul\":28400:28418   */\n      tag_942\n      tag_578\n      jump\t// in\n    tag_942:\n        /* \"#utility.yul\":28364:28420   */\n    tag_941:\n        /* \"#utility.yul\":28444:28482   */\n      tag_943\n        /* \"#utility.yul\":28476:28480   */\n      dup3\n        /* \"#utility.yul\":28470:28481   */\n      sload\n        /* \"#utility.yul\":28444:28482   */\n      tag_231\n      jump\t// in\n    tag_943:\n        /* \"#utility.yul\":28529:28596   */\n      tag_944\n        /* \"#utility.yul\":28589:28595   */\n      dup3\n        /* \"#utility.yul\":28581:28587   */\n      dup3\n        /* \"#utility.yul\":28575:28579   */\n      dup6\n        /* \"#utility.yul\":28529:28596   */\n      tag_621\n      jump\t// in\n    tag_944:\n        /* \"#utility.yul\":28623:28624   */\n      0x00\n        /* \"#utility.yul\":28647:28651   */\n      0x20\n        /* \"#utility.yul\":28634:28651   */\n      swap1\n      pop\n        /* \"#utility.yul\":28679:28681   */\n      0x1f\n        /* \"#utility.yul\":28671:28677   */\n      dup4\n        /* \"#utility.yul\":28668:28682   */\n      gt\n        /* \"#utility.yul\":28696:28697   */\n      0x01\n        /* \"#utility.yul\":28691:29309   */\n      dup2\n      eq\n      tag_946\n      jumpi\n        /* \"#utility.yul\":29353:29354   */\n      0x00\n        /* \"#utility.yul\":29370:29376   */\n      dup5\n        /* \"#utility.yul\":29367:29444   */\n      iszero\n      tag_947\n      jumpi\n        /* \"#utility.yul\":29419:29428   */\n      dup3\n        /* \"#utility.yul\":29414:29417   */\n      dup8\n        /* \"#utility.yul\":29410:29429   */\n      add\n        /* \"#utility.yul\":29404:29430   */\n      mload\n        /* \"#utility.yul\":29395:29430   */\n      swap1\n      pop\n        /* \"#utility.yul\":29367:29444   */\n    tag_947:\n        /* \"#utility.yul\":29470:29537   */\n      tag_948\n        /* \"#utility.yul\":29530:29536   */\n      dup6\n        /* \"#utility.yul\":29523:29528   */\n      dup3\n        /* \"#utility.yul\":29470:29537   */\n      tag_624\n      jump\t// in\n    tag_948:\n        /* \"#utility.yul\":29464:29468   */\n      dup7\n        /* \"#utility.yul\":29457:29538   */\n      sstore\n        /* \"#utility.yul\":29326:29548   */\n      pop\n        /* \"#utility.yul\":28661:29548   */\n      jump(tag_945)\n        /* \"#utility.yul\":28691:29309   */\n    tag_946:\n        /* \"#utility.yul\":28743:28747   */\n      0x1f\n        /* \"#utility.yul\":28739:28748   */\n      not\n        /* \"#utility.yul\":28731:28737   */\n      dup5\n        /* \"#utility.yul\":28727:28749   */\n      and\n        /* \"#utility.yul\":28777:28814   */\n      tag_949\n        /* \"#utility.yul\":28809:28813   */\n      dup7\n        /* \"#utility.yul\":28777:28814   */\n      tag_611\n      jump\t// in\n    tag_949:\n        /* \"#utility.yul\":28836:28837   */\n      0x00\n        /* \"#utility.yul\":28850:29058   */\n    tag_950:\n        /* \"#utility.yul\":28864:28871   */\n      dup3\n        /* \"#utility.yul\":28861:28862   */\n      dup2\n        /* \"#utility.yul\":28858:28872   */\n      lt\n        /* \"#utility.yul\":28850:29058   */\n      iszero\n      tag_952\n      jumpi\n        /* \"#utility.yul\":28943:28952   */\n      dup5\n        /* \"#utility.yul\":28938:28941   */\n      dup10\n        /* \"#utility.yul\":28934:28953   */\n      add\n        /* \"#utility.yul\":28928:28954   */\n      mload\n        /* \"#utility.yul\":28920:28926   */\n      dup3\n        /* \"#utility.yul\":28913:28955   */\n      sstore\n        /* \"#utility.yul\":28994:28995   */\n      0x01\n        /* \"#utility.yul\":28986:28992   */\n      dup3\n        /* \"#utility.yul\":28982:28996   */\n      add\n        /* \"#utility.yul\":28972:28996   */\n      swap2\n      pop\n        /* \"#utility.yul\":29041:29043   */\n      0x20\n        /* \"#utility.yul\":29030:29039   */\n      dup6\n        /* \"#utility.yul\":29026:29044   */\n      add\n        /* \"#utility.yul\":29013:29044   */\n      swap5\n      pop\n        /* \"#utility.yul\":28887:28891   */\n      0x20\n        /* \"#utility.yul\":28884:28885   */\n      dup2\n        /* \"#utility.yul\":28880:28892   */\n      add\n        /* \"#utility.yul\":28875:28892   */\n      swap1\n      pop\n        /* \"#utility.yul\":28850:29058   */\n      jump(tag_950)\n    tag_952:\n        /* \"#utility.yul\":29086:29092   */\n      dup7\n        /* \"#utility.yul\":29077:29084   */\n      dup4\n        /* \"#utility.yul\":29074:29093   */\n      lt\n        /* \"#utility.yul\":29071:29250   */\n      iszero\n      tag_953\n      jumpi\n        /* \"#utility.yul\":29144:29153   */\n      dup5\n        /* \"#utility.yul\":29139:29142   */\n      dup10\n        /* \"#utility.yul\":29135:29154   */\n      add\n        /* \"#utility.yul\":29129:29155   */\n      mload\n        /* \"#utility.yul\":29187:29235   */\n      tag_954\n        /* \"#utility.yul\":29229:29233   */\n      0x1f\n        /* \"#utility.yul\":29221:29227   */\n      dup10\n        /* \"#utility.yul\":29217:29234   */\n      and\n        /* \"#utility.yul\":29206:29215   */\n      dup3\n        /* \"#utility.yul\":29187:29235   */\n      tag_623\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":29179:29185   */\n      dup4\n        /* \"#utility.yul\":29172:29236   */\n      sstore\n        /* \"#utility.yul\":29094:29250   */\n      pop\n        /* \"#utility.yul\":29071:29250   */\n    tag_953:\n        /* \"#utility.yul\":29296:29297   */\n      0x01\n        /* \"#utility.yul\":29292:29293   */\n      0x02\n        /* \"#utility.yul\":29284:29290   */\n      dup9\n        /* \"#utility.yul\":29280:29294   */\n      mul\n        /* \"#utility.yul\":29276:29298   */\n      add\n        /* \"#utility.yul\":29270:29274   */\n      dup9\n        /* \"#utility.yul\":29263:29299   */\n      sstore\n        /* \"#utility.yul\":28698:29309   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":28661:29548   */\n    tag_945:\n      pop\n        /* \"#utility.yul\":28251:29554   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":28159:29554   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29560:29658   */\n    tag_625:\n        /* \"#utility.yul\":29611:29617   */\n      0x00\n        /* \"#utility.yul\":29645:29650   */\n      dup2\n        /* \"#utility.yul\":29639:29651   */\n      mload\n        /* \"#utility.yul\":29629:29651   */\n      swap1\n      pop\n        /* \"#utility.yul\":29560:29658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29664:29811   */\n    tag_626:\n        /* \"#utility.yul\":29765:29776   */\n      0x00\n        /* \"#utility.yul\":29802:29805   */\n      dup2\n        /* \"#utility.yul\":29787:29805   */\n      swap1\n      pop\n        /* \"#utility.yul\":29664:29811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29817:30203   */\n    tag_627:\n        /* \"#utility.yul\":29921:29924   */\n      0x00\n        /* \"#utility.yul\":29949:29987   */\n      tag_958\n        /* \"#utility.yul\":29981:29986   */\n      dup3\n        /* \"#utility.yul\":29949:29987   */\n      tag_625\n      jump\t// in\n    tag_958:\n        /* \"#utility.yul\":30003:30091   */\n      tag_959\n        /* \"#utility.yul\":30084:30090   */\n      dup2\n        /* \"#utility.yul\":30079:30082   */\n      dup6\n        /* \"#utility.yul\":30003:30091   */\n      tag_626\n      jump\t// in\n    tag_959:\n        /* \"#utility.yul\":29996:30091   */\n      swap4\n      pop\n        /* \"#utility.yul\":30100:30165   */\n      tag_960\n        /* \"#utility.yul\":30158:30164   */\n      dup2\n        /* \"#utility.yul\":30153:30156   */\n      dup6\n        /* \"#utility.yul\":30146:30150   */\n      0x20\n        /* \"#utility.yul\":30139:30144   */\n      dup7\n        /* \"#utility.yul\":30135:30151   */\n      add\n        /* \"#utility.yul\":30100:30165   */\n      tag_561\n      jump\t// in\n    tag_960:\n        /* \"#utility.yul\":30190:30196   */\n      dup1\n        /* \"#utility.yul\":30185:30188   */\n      dup5\n        /* \"#utility.yul\":30181:30197   */\n      add\n        /* \"#utility.yul\":30174:30197   */\n      swap2\n      pop\n        /* \"#utility.yul\":29925:30203   */\n      pop\n        /* \"#utility.yul\":29817:30203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30209:30480   */\n    tag_523:\n        /* \"#utility.yul\":30339:30342   */\n      0x00\n        /* \"#utility.yul\":30361:30454   */\n      tag_962\n        /* \"#utility.yul\":30450:30453   */\n      dup3\n        /* \"#utility.yul\":30441:30447   */\n      dup5\n        /* \"#utility.yul\":30361:30454   */\n      tag_627\n      jump\t// in\n    tag_962:\n        /* \"#utility.yul\":30354:30454   */\n      swap2\n      pop\n        /* \"#utility.yul\":30471:30474   */\n      dup2\n        /* \"#utility.yul\":30464:30474   */\n      swap1\n      pop\n        /* \"#utility.yul\":30209:30480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200975fa70692f3ebea0e374cad6627675a6d8a550b62d5ee68fbf475b5a296a6364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2865": {
									"entryPoint": null,
									"id": 2865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_584": {
									"entryPoint": 86,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_629": {
									"entryPoint": 340,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_615": {
									"entryPoint": 365,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:21",
										"nodeType": "YulBlock",
										"src": "0:456:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:21",
													"nodeType": "YulBlock",
													"src": "51:57:21",
													"statements": [
														{
															"nativeSrc": "61:41:21",
															"nodeType": "YulAssignment",
															"src": "61:41:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:21",
																		"nodeType": "YulLiteral",
																		"src": "83:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:21"
																},
																"nativeSrc": "72:30:21",
																"nodeType": "YulFunctionCall",
																"src": "72:30:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:21",
														"nodeType": "YulTypedName",
														"src": "33:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:21",
														"nodeType": "YulTypedName",
														"src": "43:7:21",
														"type": ""
													}
												],
												"src": "7:101:21"
											},
											{
												"body": {
													"nativeSrc": "177:52:21",
													"nodeType": "YulBlock",
													"src": "177:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:21",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:21"
																		},
																		"nativeSrc": "199:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nativeSrc": "187:36:21",
																"nodeType": "YulFunctionCall",
																"src": "187:36:21"
															},
															"nativeSrc": "187:36:21",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:21",
														"nodeType": "YulTypedName",
														"src": "165:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:21",
														"nodeType": "YulTypedName",
														"src": "172:3:21",
														"type": ""
													}
												],
												"src": "114:115:21"
											},
											{
												"body": {
													"nativeSrc": "331:122:21",
													"nodeType": "YulBlock",
													"src": "331:122:21",
													"statements": [
														{
															"nativeSrc": "341:26:21",
															"nodeType": "YulAssignment",
															"src": "341:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:21",
																		"nodeType": "YulLiteral",
																		"src": "364:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:21"
																},
																"nativeSrc": "349:18:21",
																"nodeType": "YulFunctionCall",
																"src": "349:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:21",
																				"nodeType": "YulLiteral",
																				"src": "443:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:21"
																		},
																		"nativeSrc": "428:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:21",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:21"
																},
																"nativeSrc": "377:69:21",
																"nodeType": "YulFunctionCall",
																"src": "377:69:21"
															},
															"nativeSrc": "377:69:21",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:21",
														"nodeType": "YulTypedName",
														"src": "303:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:21",
														"nodeType": "YulTypedName",
														"src": "315:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:21",
														"nodeType": "YulTypedName",
														"src": "326:4:21",
														"type": ""
													}
												],
												"src": "235:218:21"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f5ffd5b5061005161005660201b60201c565b6101d1565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161014891906101b8565b60405180910390a15b50565b5f5f61016461016d60201b60201c565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f67ffffffffffffffff82169050919050565b6101b281610196565b82525050565b5f6020820190506101cb5f8301846101a9565b92915050565b6080516138af6101f75f395f8181611ba801528181611bfd0152611dda01526138af5ff3fe60806040526004361061020e575f3560e01c806391d1485411610117578063d547741f1161009f578063e2d6f6341161006e578063e2d6f634146107ac578063e336ac44146107d4578063e48bf15b14610810578063f7154b3c1461083a578063f72c0d8b146108645761020e565b8063d547741f146106e4578063d936547e1461070c578063dd62ed3e14610748578063dea7f112146107845761020e565b8063a217fddf116100e6578063a217fddf146105f0578063a9059cbb1461061a578063ad3cb1cc14610656578063c255f8c814610680578063c55d0f56146106a85761020e565b806391d14854146105465780639281aa0b1461058257806395d89b41146105aa578063a14d707c146105d45761020e565b806336568abe1161019a5780634f1ef286116101695780634f1ef2861461047257806352d1902d1461048e57806370a08231146104b85780638d898e34146104f45780639081e6441461051c5761020e565b806336568abe146103d05780633efb0be3146103f857806340c10f191461042257806342966c681461044a5761020e565b806318160ddd116101e157806318160ddd146102dc57806323b872dd14610306578063248a9ca3146103425780632f2ff15d1461037e578063313ce567146103a65761020e565b806301ffc9a71461021257806305fbf4481461024e57806306fdde0314610276578063095ea7b3146102a0575b5f5ffd5b34801561021d575f5ffd5b50610238600480360381019061023391906128eb565b61088e565b6040516102459190612930565b60405180910390f35b348015610259575f5ffd5b50610274600480360381019061026f91906129d6565b610907565b005b348015610281575f5ffd5b5061028a610989565b6040516102979190612a84565b60405180910390f35b3480156102ab575f5ffd5b506102c660048036038101906102c191906129d6565b610a27565b6040516102d39190612930565b60405180910390f35b3480156102e7575f5ffd5b506102f0610a49565b6040516102fd9190612ab3565b60405180910390f35b348015610311575f5ffd5b5061032c60048036038101906103279190612acc565b610a60565b6040516103399190612930565b60405180910390f35b34801561034d575f5ffd5b5061036860048036038101906103639190612b4f565b610b91565b6040516103759190612b89565b60405180910390f35b348015610389575f5ffd5b506103a4600480360381019061039f9190612ba2565b610bbb565b005b3480156103b1575f5ffd5b506103ba610bdd565b6040516103c79190612bfb565b60405180910390f35b3480156103db575f5ffd5b506103f660048036038101906103f19190612ba2565b610be5565b005b348015610403575f5ffd5b5061040c610c60565b6040516104199190612c6f565b60405180910390f35b34801561042d575f5ffd5b50610448600480360381019061044391906129d6565b610c84565b005b348015610455575f5ffd5b50610470600480360381019061046b9190612c88565b610cbd565b005b61048c60048036038101906104879190612ddf565b610cf5565b005b348015610499575f5ffd5b506104a2610d14565b6040516104af9190612b89565b60405180910390f35b3480156104c3575f5ffd5b506104de60048036038101906104d99190612e39565b610d45565b6040516104eb9190612ab3565b60405180910390f35b3480156104ff575f5ffd5b5061051a60048036038101906105159190612c88565b610d98565b005b348015610527575f5ffd5b50610530610dcd565b60405161053d9190612e84565b60405180910390f35b348015610551575f5ffd5b5061056c60048036038101906105679190612ba2565b610df2565b6040516105799190612930565b60405180910390f35b34801561058d575f5ffd5b506105a860048036038101906105a39190612ec7565b610e63565b005b3480156105b5575f5ffd5b506105be610ec8565b6040516105cb9190612a84565b60405180910390f35b6105ee60048036038101906105e99190612f42565b610f66565b005b3480156105fb575f5ffd5b50610604611172565b6040516106119190612b89565b60405180910390f35b348015610625575f5ffd5b50610640600480360381019061063b91906129d6565b611178565b60405161064d9190612930565b60405180910390f35b348015610661575f5ffd5b5061066a6112a7565b6040516106779190612a84565b60405180910390f35b34801561068b575f5ffd5b506106a660048036038101906106a19190612e39565b6112e0565b005b3480156106b3575f5ffd5b506106ce60048036038101906106c99190612c88565b611350565b6040516106db9190612ab3565b60405180910390f35b3480156106ef575f5ffd5b5061070a60048036038101906107059190612ba2565b611366565b005b348015610717575f5ffd5b50610732600480360381019061072d9190612e39565b611388565b60405161073f9190612930565b60405180910390f35b348015610753575f5ffd5b5061076e60048036038101906107699190612f92565b6113a5565b60405161077b9190612ab3565b60405180910390f35b34801561078f575f5ffd5b506107aa60048036038101906107a5919061306e565b611435565b005b3480156107b7575f5ffd5b506107d260048036038101906107cd91906129d6565b61170a565b005b3480156107df575f5ffd5b506107fa60048036038101906107f59190612e39565b611743565b6040516108079190612ab3565b60405180910390f35b34801561081b575f5ffd5b50610824611758565b6040516108319190612b89565b60405180910390f35b348015610845575f5ffd5b5061084e61177c565b60405161085b9190612ab3565b60405180910390f35b34801561086f575f5ffd5b50610878611782565b6040516108859190612b89565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061090057506108ff826117a6565b5b9050919050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b6109318161180f565b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461097d9190613170565b92505081905550505050565b60605f610994611823565b90508060030180546109a5906131d0565b80601f01602080910402602001604051908101604052809291908181526020018280546109d1906131d0565b8015610a1c5780601f106109f357610100808354040283529160200191610a1c565b820191905f5260205f20905b8154815290600101906020018083116109ff57829003601f168201915b505050505091505090565b5f5f610a3161184a565b9050610a3e818585611851565b600191505092915050565b5f5f610a53611823565b9050806002015491505090565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae19061324a565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b3286610d45565b610b3c9190613268565b1015610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b74906132e5565b60405180910390fd5b610b88848484611863565b90509392505050565b5f5f610b9b611891565b9050805f015f8481526020019081526020015f2060010154915050919050565b610bc482610b91565b610bcd8161180f565b610bd783836118b8565b50505050565b5f6012905090565b610bed61184a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c51576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c5b82826119b0565b505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610cae8161180f565b610cb88383611aa8565b505050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610ce78161180f565b610cf13383611b27565b5050565b610cfd611ba6565b610d0682611c8c565b610d108282611cba565b5050565b5f610d1d611dd8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f5f610d4f611823565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610dc28161180f565b816002819055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f610dfc611891565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f5f1b610e6f8161180f565b8160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b60605f610ed3611823565b9050806004018054610ee4906131d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610f10906131d0565b8015610f5b5780601f10610f3257610100808354040283529160200191610f5b565b820191905f5260205f20905b815481529060010190602001808311610f3e57829003601f168201915b505050505091505090565b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690613373565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461103733610d45565b6110419190613268565b1015611082576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611079906132e5565b60405180910390fd5b61108d333083611e5f565b8060035f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110d99190613170565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ee5b22348585856040518563ffffffff1660e01b815260040161113f939291906133af565b5f604051808303818588803b158015611156575f5ffd5b505af1158015611168573d5f5f3e3d5ffd5b5050505050505050565b5f5f1b81565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f99061324a565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461124a33610d45565b6112549190613268565b1015611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c906132e5565b60405180910390fd5b61129f8383611f4f565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b61130a8161180f565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f6002548261135f91906133e4565b9050919050565b61136f82610b91565b6113788161180f565b61138283836119b0565b50505050565b6004602052805f5260405f205f915054906101000a900460ff1681565b5f5f6113af611823565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f61143e611f71565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156114865750825b90505f60018367ffffffffffffffff161480156114b957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156114c7575080155b156114fe576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561154b576001855f0160086101000a81548160ff0219169083151502179055505b5f8a1161158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158490613495565b60405180910390fd5b6115978c8c611f84565b61159f611f9a565b6115a7611fa4565b875f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002819055506116415f5f1b8a6118b8565b5061166c7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b876118b8565b506116977f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a6118b8565b506116a2868b611aa8565b83156116fc575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516116f391906134ec565b60405180910390a15b505050505050505050505050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b6117348161180f565b61173e8383611b27565b505050565b6003602052805f5260405f205f915090505481565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b81565b60025481565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6118208161181b61184a565b611fae565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61185e8383836001611fff565b505050565b5f5f61186d61184a565b905061187a8582856121dc565b611885858585611e5f565b60019150509392505050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f5f6118c2611891565b90506118ce8484610df2565b6119a5576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061194161184a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506119aa565b5f9150505b92915050565b5f5f6119ba611891565b90506119c68484610df2565b15611a9d575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611a3961184a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050611aa2565b5f9150505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b18575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b0f9190613505565b60405180910390fd5b611b235f838361226f565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b97575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b8e9190613505565b60405180910390fd5b611ba2825f8361226f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611c5357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611c3a61249e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611c8a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611cb68161180f565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611d2257506040513d601f19601f82011682018060405250810190611d1f9190613532565b60015b611d6357816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611d5a9190613505565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611dc957806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611dc09190612b89565b60405180910390fd5b611dd383836124f1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611e5d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ecf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ec69190613505565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f3f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611f369190613505565b60405180910390fd5b611f4a83838361226f565b505050565b5f5f611f5961184a565b9050611f66818585611e5f565b600191505092915050565b5f5f611f7b612563565b90508091505090565b611f8c61258c565b611f9682826125cc565b5050565b611fa261258c565b565b611fac61258c565b565b611fb88282610df2565b611ffb5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611ff292919061355d565b60405180910390fd5b5050565b5f612008611823565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361207a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016120719190613505565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120ea575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016120e19190613505565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156121d5578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516121cc9190612ab3565b60405180910390a35b5050505050565b5f6121e784846113a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015612269578181101561225a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161225193929190613584565b60405180910390fd5b61226884848484035f611fff565b5b50505050565b5f612278611823565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122cc5781816002015f8282546122c09190613170565b9250508190555061239e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015612357578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161234e93929190613584565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123e75781816002015f8282540392505081905550612433565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124909190612ab3565b60405180910390a350505050565b5f6124ca7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b612608565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6124fa82612611565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156125565761255082826126da565b5061255f565b61255e61275a565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b612594612796565b6125ca576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125d461258c565b5f6125dd611823565b9050828160030190816125f09190613750565b50818160040190816126029190613750565b50505050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361266c57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016126639190613505565b60405180910390fd5b806126987f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b612608565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516127039190613863565b5f60405180830381855af49150503d805f811461273b576040519150601f19603f3d011682016040523d82523d5f602084013e612740565b606091505b50915091506127508583836127b4565b9250505092915050565b5f341115612794576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61279f611f71565b5f0160089054906101000a900460ff16905090565b6060826127c9576127c482612841565b612839565b5f82511480156127ef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561283157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128289190613505565b60405180910390fd5b81905061283a565b5b9392505050565b5f815111156128535780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6128ca81612896565b81146128d4575f5ffd5b50565b5f813590506128e5816128c1565b92915050565b5f60208284031215612900576128ff61288e565b5b5f61290d848285016128d7565b91505092915050565b5f8115159050919050565b61292a81612916565b82525050565b5f6020820190506129435f830184612921565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61297282612949565b9050919050565b61298281612968565b811461298c575f5ffd5b50565b5f8135905061299d81612979565b92915050565b5f819050919050565b6129b5816129a3565b81146129bf575f5ffd5b50565b5f813590506129d0816129ac565b92915050565b5f5f604083850312156129ec576129eb61288e565b5b5f6129f98582860161298f565b9250506020612a0a858286016129c2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612a5682612a14565b612a608185612a1e565b9350612a70818560208601612a2e565b612a7981612a3c565b840191505092915050565b5f6020820190508181035f830152612a9c8184612a4c565b905092915050565b612aad816129a3565b82525050565b5f602082019050612ac65f830184612aa4565b92915050565b5f5f5f60608486031215612ae357612ae261288e565b5b5f612af08682870161298f565b9350506020612b018682870161298f565b9250506040612b12868287016129c2565b9150509250925092565b5f819050919050565b612b2e81612b1c565b8114612b38575f5ffd5b50565b5f81359050612b4981612b25565b92915050565b5f60208284031215612b6457612b6361288e565b5b5f612b7184828501612b3b565b91505092915050565b612b8381612b1c565b82525050565b5f602082019050612b9c5f830184612b7a565b92915050565b5f5f60408385031215612bb857612bb761288e565b5b5f612bc585828601612b3b565b9250506020612bd68582860161298f565b9150509250929050565b5f60ff82169050919050565b612bf581612be0565b82525050565b5f602082019050612c0e5f830184612bec565b92915050565b5f819050919050565b5f612c37612c32612c2d84612949565b612c14565b612949565b9050919050565b5f612c4882612c1d565b9050919050565b5f612c5982612c3e565b9050919050565b612c6981612c4f565b82525050565b5f602082019050612c825f830184612c60565b92915050565b5f60208284031215612c9d57612c9c61288e565b5b5f612caa848285016129c2565b91505092915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612cf182612a3c565b810181811067ffffffffffffffff82111715612d1057612d0f612cbb565b5b80604052505050565b5f612d22612885565b9050612d2e8282612ce8565b919050565b5f67ffffffffffffffff821115612d4d57612d4c612cbb565b5b612d5682612a3c565b9050602081019050919050565b828183375f83830152505050565b5f612d83612d7e84612d33565b612d19565b905082815260208101848484011115612d9f57612d9e612cb7565b5b612daa848285612d63565b509392505050565b5f82601f830112612dc657612dc5612cb3565b5b8135612dd6848260208601612d71565b91505092915050565b5f5f60408385031215612df557612df461288e565b5b5f612e028582860161298f565b925050602083013567ffffffffffffffff811115612e2357612e22612892565b5b612e2f85828601612db2565b9150509250929050565b5f60208284031215612e4e57612e4d61288e565b5b5f612e5b8482850161298f565b91505092915050565b5f612e6e82612c3e565b9050919050565b612e7e81612e64565b82525050565b5f602082019050612e975f830184612e75565b92915050565b612ea681612916565b8114612eb0575f5ffd5b50565b5f81359050612ec181612e9d565b92915050565b5f5f60408385031215612edd57612edc61288e565b5b5f612eea8582860161298f565b9250506020612efb85828601612eb3565b9150509250929050565b5f67ffffffffffffffff82169050919050565b612f2181612f05565b8114612f2b575f5ffd5b50565b5f81359050612f3c81612f18565b92915050565b5f5f5f60608486031215612f5957612f5861288e565b5b5f612f6686828701612f2e565b9350506020612f778682870161298f565b9250506040612f88868287016129c2565b9150509250925092565b5f5f60408385031215612fa857612fa761288e565b5b5f612fb58582860161298f565b9250506020612fc68582860161298f565b9150509250929050565b5f67ffffffffffffffff821115612fea57612fe9612cbb565b5b612ff382612a3c565b9050602081019050919050565b5f61301261300d84612fd0565b612d19565b90508281526020810184848401111561302e5761302d612cb7565b5b613039848285612d63565b509392505050565b5f82601f83011261305557613054612cb3565b5b8135613065848260208601613000565b91505092915050565b5f5f5f5f5f5f5f60e0888a0312156130895761308861288e565b5b5f88013567ffffffffffffffff8111156130a6576130a5612892565b5b6130b28a828b01613041565b975050602088013567ffffffffffffffff8111156130d3576130d2612892565b5b6130df8a828b01613041565b96505060406130f08a828b016129c2565b95505060606131018a828b0161298f565b94505060806131128a828b0161298f565b93505060a06131238a828b0161298f565b92505060c06131348a828b0161298f565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61317a826129a3565b9150613185836129a3565b925082820190508082111561319d5761319c613143565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806131e757607f821691505b6020821081036131fa576131f96131a3565b5b50919050565b7f5265636569766572206e6f742077686974656c697374656400000000000000005f82015250565b5f613234601883612a1e565b915061323f82613200565b602082019050919050565b5f6020820190508181035f83015261326181613228565b9050919050565b5f613272826129a3565b915061327d836129a3565b925082820390508181111561329557613294613143565b5b92915050565b7f496e73756666696369656e7420756e6c6f636b656400000000000000000000005f82015250565b5f6132cf601583612a1e565b91506132da8261329b565b602082019050919050565b5f6020820190508181035f8301526132fc816132c3565b9050919050565b7f43726f73732d636861696e207265636569766572206e6f742077686974656c695f8201527f7374656400000000000000000000000000000000000000000000000000000000602082015250565b5f61335d602483612a1e565b915061336882613303565b604082019050919050565b5f6020820190508181035f83015261338a81613351565b9050919050565b61339a81612f05565b82525050565b6133a981612968565b82525050565b5f6060820190506133c25f830186613391565b6133cf60208301856133a0565b6133dc6040830184612aa4565b949350505050565b5f6133ee826129a3565b91506133f9836129a3565b9250828202613407816129a3565b9150828204841483151761341e5761341d613143565b5b5092915050565b7f546f74616c20736861726573206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f61347f602683612a1e565b915061348a82613425565b604082019050919050565b5f6020820190508181035f8301526134ac81613473565b9050919050565b5f819050919050565b5f6134d66134d16134cc846134b3565b612c14565b612f05565b9050919050565b6134e6816134bc565b82525050565b5f6020820190506134ff5f8301846134dd565b92915050565b5f6020820190506135185f8301846133a0565b92915050565b5f8151905061352c81612b25565b92915050565b5f602082840312156135475761354661288e565b5b5f6135548482850161351e565b91505092915050565b5f6040820190506135705f8301856133a0565b61357d6020830184612b7a565b9392505050565b5f6060820190506135975f8301866133a0565b6135a46020830185612aa4565b6135b16040830184612aa4565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026136157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826135da565b61361f86836135da565b95508019841693508086168417925050509392505050565b5f61365161364c613647846129a3565b612c14565b6129a3565b9050919050565b5f819050919050565b61366a83613637565b61367e61367682613658565b8484546135e6565b825550505050565b5f5f905090565b613695613686565b6136a0818484613661565b505050565b5b818110156136c3576136b85f8261368d565b6001810190506136a6565b5050565b601f821115613708576136d9816135b9565b6136e2846135cb565b810160208510156136f1578190505b6137056136fd856135cb565b8301826136a5565b50505b505050565b5f82821c905092915050565b5f6137285f198460080261370d565b1980831691505092915050565b5f6137408383613719565b9150826002028217905092915050565b61375982612a14565b67ffffffffffffffff81111561377257613771612cbb565b5b61377c82546131d0565b6137878282856136c7565b5f60209050601f8311600181146137b8575f84156137a6578287015190505b6137b08582613735565b865550613817565b601f1984166137c6866135b9565b5f5b828110156137ed578489015182556001820191506020850194506020810190506137c8565b8683101561380a5784890151613806601f891682613719565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f61383d8261381f565b6138478185613829565b9350613857818560208601612a2e565b80840191505092915050565b5f61386e8284613833565b91508190509291505056fea26469706673582212200975fa70692f3ebea0e374cad6627675a6d8a550b62d5ee68fbf475b5a296a6364736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH0 PUSH2 0x65 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x164 PUSH2 0x16D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2 DUP2 PUSH2 0x196 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x38AF PUSH2 0x1F7 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1BA8 ADD MSTORE DUP2 DUP2 PUSH2 0x1BFD ADD MSTORE PUSH2 0x1DDA ADD MSTORE PUSH2 0x38AF PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xE2D6F634 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE2D6F634 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xE336AC44 EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xE48BF15B EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0xF7154B3C EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x864 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDEA7F112 EQ PUSH2 0x784 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xC255F8C8 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xC55D0F56 EQ PUSH2 0x6A8 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x9281AA0B EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xA14D707C EQ PUSH2 0x5D4 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x8D898E34 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x9081E644 EQ PUSH2 0x51C JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x3EFB0BE3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x44A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A6 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x5FBF448 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0xD98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x530 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x2E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5BE PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66A PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x12E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x70A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x732 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x76E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x1435 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x170A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x824 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x84E PUSH2 0x177C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x878 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x900 JUMPI POP PUSH2 0x8FF DUP3 PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x931 DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x994 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x9A5 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA31 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xA3E DUP2 DUP6 DUP6 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA53 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB32 DUP7 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB88 DUP5 DUP5 DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB9B PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC4 DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xBCD DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xBD7 DUP4 DUP4 PUSH2 0x18B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBED PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5B DUP3 DUP3 PUSH2 0x19B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xCAE DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xCB8 DUP4 DUP4 PUSH2 0x1AA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xCE7 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xCF1 CALLER DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0xD06 DUP3 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xD10 DUP3 DUP3 PUSH2 0x1CBA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD1D PUSH2 0x1DD8 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD4F PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xDC2 DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xDFC PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xE6F DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xED3 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xEE4 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF10 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1037 CALLER PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108D CALLER ADDRESS DUP4 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1EE5B22 CALLVALUE DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33AF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1156 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1168 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F9 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x124A CALLER PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1254 SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F DUP4 DUP4 PUSH2 0x1F4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x130A DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x1378 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x1382 DUP4 DUP4 PUSH2 0x19B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x13AF PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x143E PUSH2 0x1F71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1486 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14B9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x14C7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x154B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 DUP11 GT PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1597 DUP13 DUP13 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x159F PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1641 PUSH0 PUSH0 SHL DUP11 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x166C PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B DUP8 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x1697 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x16A2 DUP7 DUP12 PUSH2 0x1AA8 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x16FC JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x1734 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x173E DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x181B PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x185E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x186D PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x187A DUP6 DUP3 DUP6 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x1885 DUP6 DUP6 DUP6 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x18C2 PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CE DUP5 DUP5 PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0x19A5 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1941 PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x19AA JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x19BA PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C6 DUP5 DUP5 PUSH2 0xDF2 JUMP JUMPDEST ISZERO PUSH2 0x1A9D JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A39 PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1AA2 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B23 PUSH0 DUP4 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B97 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA2 DUP3 PUSH0 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C53 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3A PUSH2 0x249E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C8A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1CB6 DUP2 PUSH2 0x180F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D22 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1F SWAP2 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D63 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5A SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1DC9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC0 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DD3 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4A DUP4 DUP4 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1F59 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x1F66 DUP2 DUP6 DUP6 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1F7B PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F8C PUSH2 0x258C JUMP JUMPDEST PUSH2 0x1F96 DUP3 DUP3 PUSH2 0x25CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1FA2 PUSH2 0x258C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FAC PUSH2 0x258C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FB8 DUP3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0x1FFB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF2 SWAP3 SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2008 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x207A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2071 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x21D5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x21CC SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21E7 DUP5 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x2269 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x225A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2268 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2278 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22CC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22C0 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x239E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2357 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23E7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2433 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2490 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x2608 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24FA DUP3 PUSH2 0x2611 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2550 DUP3 DUP3 PUSH2 0x26DA JUMP JUMPDEST POP PUSH2 0x255F JUMP JUMPDEST PUSH2 0x255E PUSH2 0x275A JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2594 PUSH2 0x2796 JUMP JUMPDEST PUSH2 0x25CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x25D4 PUSH2 0x258C JUMP JUMPDEST PUSH0 PUSH2 0x25DD PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x25F0 SWAP2 SWAP1 PUSH2 0x3750 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2602 SWAP2 SWAP1 PUSH2 0x3750 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x266C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2663 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2698 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x2608 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2703 SWAP2 SWAP1 PUSH2 0x3863 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x273B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2750 DUP6 DUP4 DUP4 PUSH2 0x27B4 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2794 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x279F PUSH2 0x1F71 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27C9 JUMPI PUSH2 0x27C4 DUP3 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x2839 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27EF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2831 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2828 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x283A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2853 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CA DUP2 PUSH2 0x2896 JUMP JUMPDEST DUP2 EQ PUSH2 0x28D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28E5 DUP2 PUSH2 0x28C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2900 JUMPI PUSH2 0x28FF PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290D DUP5 DUP3 DUP6 ADD PUSH2 0x28D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292A DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2943 PUSH0 DUP4 ADD DUP5 PUSH2 0x2921 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2972 DUP3 PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2982 DUP2 PUSH2 0x2968 JUMP JUMPDEST DUP2 EQ PUSH2 0x298C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299D DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B5 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x29BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D0 DUP2 PUSH2 0x29AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0A DUP6 DUP3 DUP7 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A56 DUP3 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x2A60 DUP2 DUP6 PUSH2 0x2A1E JUMP JUMPDEST SWAP4 POP PUSH2 0x2A70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2A79 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 DUP5 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AAD DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AE3 JUMPI PUSH2 0x2AE2 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AF0 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B01 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B12 DUP7 DUP3 DUP8 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2E DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B38 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B49 DUP2 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B64 JUMPI PUSH2 0x2B63 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B71 DUP5 DUP3 DUP6 ADD PUSH2 0x2B3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B83 DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x2B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB8 JUMPI PUSH2 0x2BB7 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BC5 DUP6 DUP3 DUP7 ADD PUSH2 0x2B3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF5 DUP2 PUSH2 0x2BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C0E PUSH0 DUP4 ADD DUP5 PUSH2 0x2BEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C37 PUSH2 0x2C32 PUSH2 0x2C2D DUP5 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C48 DUP3 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C59 DUP3 PUSH2 0x2C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C69 DUP2 PUSH2 0x2C4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9D JUMPI PUSH2 0x2C9C PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CAA DUP5 DUP3 DUP6 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2CF1 DUP3 PUSH2 0x2A3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D10 JUMPI PUSH2 0x2D0F PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D22 PUSH2 0x2885 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D2E DUP3 DUP3 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D4C PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x2D56 DUP3 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D83 PUSH2 0x2D7E DUP5 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D9F JUMPI PUSH2 0x2D9E PUSH2 0x2CB7 JUMP JUMPDEST JUMPDEST PUSH2 0x2DAA DUP5 DUP3 DUP6 PUSH2 0x2D63 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DC6 JUMPI PUSH2 0x2DC5 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DD6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DF5 JUMPI PUSH2 0x2DF4 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E02 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x2E2F DUP6 DUP3 DUP7 ADD PUSH2 0x2DB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E4E JUMPI PUSH2 0x2E4D PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E5B DUP5 DUP3 DUP6 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E6E DUP3 PUSH2 0x2C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7E DUP2 PUSH2 0x2E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E97 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA6 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC1 DUP2 PUSH2 0x2E9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EDD JUMPI PUSH2 0x2EDC PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EEA DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2EFB DUP6 DUP3 DUP7 ADD PUSH2 0x2EB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F21 DUP2 PUSH2 0x2F05 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F2B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F3C DUP2 PUSH2 0x2F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F66 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F77 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F88 DUP7 DUP3 DUP8 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA8 JUMPI PUSH2 0x2FA7 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FB5 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FC6 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FEA JUMPI PUSH2 0x2FE9 PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x2FF3 DUP3 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3012 PUSH2 0x300D DUP5 PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x302E JUMPI PUSH2 0x302D PUSH2 0x2CB7 JUMP JUMPDEST JUMPDEST PUSH2 0x3039 DUP5 DUP3 DUP6 PUSH2 0x2D63 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3055 JUMPI PUSH2 0x3054 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3089 JUMPI PUSH2 0x3088 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30A6 JUMPI PUSH2 0x30A5 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x30B2 DUP11 DUP3 DUP12 ADD PUSH2 0x3041 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D2 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x30DF DUP11 DUP3 DUP12 ADD PUSH2 0x3041 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30F0 DUP11 DUP3 DUP12 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3101 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3112 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3123 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3134 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x317A DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3185 DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x319D JUMPI PUSH2 0x319C PUSH2 0x3143 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x31A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636569766572206E6F742077686974656C69737465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3234 PUSH1 0x18 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x323F DUP3 PUSH2 0x3200 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3261 DUP2 PUSH2 0x3228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3272 DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x327D DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3295 JUMPI PUSH2 0x3294 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420756E6C6F636B65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32CF PUSH1 0x15 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x32DA DUP3 PUSH2 0x329B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32FC DUP2 PUSH2 0x32C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F73732D636861696E207265636569766572206E6F742077686974656C69 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x335D PUSH1 0x24 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x3368 DUP3 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x338A DUP2 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339A DUP2 PUSH2 0x2F05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33A9 DUP2 PUSH2 0x2968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x3391 JUMP JUMPDEST PUSH2 0x33CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x33DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33EE DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F9 DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3407 DUP2 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x341E JUMPI PUSH2 0x341D PUSH2 0x3143 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20736861726573206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x347F PUSH1 0x26 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x348A DUP3 PUSH2 0x3425 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x34AC DUP2 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34D6 PUSH2 0x34D1 PUSH2 0x34CC DUP5 PUSH2 0x34B3 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E6 DUP2 PUSH2 0x34BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34FF PUSH0 DUP4 ADD DUP5 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3518 PUSH0 DUP4 ADD DUP5 PUSH2 0x33A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x352C DUP2 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3547 JUMPI PUSH2 0x3546 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x351E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3570 PUSH0 DUP4 ADD DUP6 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x357D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3597 PUSH0 DUP4 ADD DUP7 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x35A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2AA4 JUMP JUMPDEST PUSH2 0x35B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3615 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x35DA JUMP JUMPDEST PUSH2 0x361F DUP7 DUP4 PUSH2 0x35DA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3651 PUSH2 0x364C PUSH2 0x3647 DUP5 PUSH2 0x29A3 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x29A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x366A DUP4 PUSH2 0x3637 JUMP JUMPDEST PUSH2 0x367E PUSH2 0x3676 DUP3 PUSH2 0x3658 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x35E6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3695 PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x36A0 DUP2 DUP5 DUP5 PUSH2 0x3661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36C3 JUMPI PUSH2 0x36B8 PUSH0 DUP3 PUSH2 0x368D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3708 JUMPI PUSH2 0x36D9 DUP2 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x36E2 DUP5 PUSH2 0x35CB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x36F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3705 PUSH2 0x36FD DUP6 PUSH2 0x35CB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x36A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3728 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x370D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3740 DUP4 DUP4 PUSH2 0x3719 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3759 DUP3 PUSH2 0x2A14 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3772 JUMPI PUSH2 0x3771 PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x377C DUP3 SLOAD PUSH2 0x31D0 JUMP JUMPDEST PUSH2 0x3787 DUP3 DUP3 DUP6 PUSH2 0x36C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x37B8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x37A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x37B0 DUP6 DUP3 PUSH2 0x3735 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3817 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x37C6 DUP7 PUSH2 0x35B9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37ED JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x380A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3806 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3719 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x383D DUP3 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3847 DUP2 DUP6 PUSH2 0x3829 JUMP JUMPDEST SWAP4 POP PUSH2 0x3857 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x386E DUP3 DUP5 PUSH2 0x3833 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH22 0xFA70692F3EBEA0E374CAD6627675A6D8A550B62D5EE6 DUP16 0xBF SELFBALANCE JUMPDEST GAS 0x29 PUSH11 0x6364736F6C634300081E00 CALLER ",
							"sourceMap": "445:3873:20:-:0;;;1171:4:2;1128:48;;;;;;;;;978:55:20;;;;;;;;;;1003:22;:20;;;:22;;:::i;:::-;445:3873;;7709:422:1;7824:30;7857:26;:24;;;:26;;:::i;:::-;7824:59;;7898:1;:15;;;;;;;;;;;;7894:76;;;7936:23;;;;;;;;;;;;;;7894:76;8001:16;7983:34;;:1;:14;;;;;;;;;;;;:34;;;7979:146;;8050:16;8033:1;:14;;;:33;;;;;;;;;;;;;;;;;;8085:29;8097:16;8085:29;;;;;;:::i;:::-;;;;;;;;7979:146;7758:373;7709:422::o;9071:205::-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:101:21:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;445:3873:20:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": 4466,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PROXY_ROLE_2841": {
									"entryPoint": 5976,
									"id": 2841,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2836": {
									"entryPoint": 6018,
									"id": 2836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_654": {
									"entryPoint": 4775,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 8090,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_880": {
									"entryPoint": 8068,
									"id": 880,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_908": {
									"entryPoint": 9676,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_684": {
									"entryPoint": 8100,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1312": {
									"entryPoint": 6225,
									"id": 1312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1380": {
									"entryPoint": 8191,
									"id": 1380,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3211": {
									"entryPoint": 7308,
									"id": 3211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1294": {
									"entryPoint": 6951,
									"id": 1294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 9612,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2059": {
									"entryPoint": 10074,
									"id": 2059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_760": {
									"entryPoint": 7640,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_744": {
									"entryPoint": 7078,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 6159,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 8110,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": 6289,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getERC20Storage_864": {
									"entryPoint": 6179,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_629": {
									"entryPoint": 8049,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 6328,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_615": {
									"entryPoint": 9571,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": 10134,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1261": {
									"entryPoint": 6824,
									"id": 1261,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1457": {
									"entryPoint": 6218,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2433": {
									"entryPoint": 10305,
									"id": 2433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 6576,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1839": {
									"entryPoint": 9745,
									"id": 1839,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1428": {
									"entryPoint": 8668,
									"id": 1428,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1136": {
									"entryPoint": 7775,
									"id": 1136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1228": {
									"entryPoint": 8815,
									"id": 1228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_811": {
									"entryPoint": 7354,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@aksToken_2844": {
									"entryPoint": 3168,
									"id": 2844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_1033": {
									"entryPoint": 5029,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1057": {
									"entryPoint": 2599,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_985": {
									"entryPoint": 3397,
									"id": 985,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@basePricePerShare_2849": {
									"entryPoint": 6012,
									"id": 2849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_2970": {
									"entryPoint": 3261,
									"id": 2970,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_949": {
									"entryPoint": 3037,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@forceBurn_2986": {
									"entryPoint": 5898,
									"id": 2986,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_2351": {
									"entryPoint": 9946,
									"id": 2351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2491": {
									"entryPoint": 9736,
									"id": 2491,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentPrice_3043": {
									"entryPoint": 4944,
									"id": 3043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1812": {
									"entryPoint": 9374,
									"id": 1812,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 2961,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 3003,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 3570,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2939": {
									"entryPoint": 5173,
									"id": 2939,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@lockShares_3003": {
									"entryPoint": 2311,
									"id": 3003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@lockedShares_2853": {
									"entryPoint": 5955,
									"id": 2853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2955": {
									"entryPoint": 3204,
									"id": 2955,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_924": {
									"entryPoint": 2441,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_702": {
									"entryPoint": 3348,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_232": {
									"entryPoint": 3045,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 4966,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setWhitelisted_3201": {
									"entryPoint": 3683,
									"id": 3201,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1514": {
									"entryPoint": 6054,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 2190,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_940": {
									"entryPoint": 3784,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensBridge_2847": {
									"entryPoint": 3533,
									"id": 2847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_965": {
									"entryPoint": 2633,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferCrossChain_3184": {
									"entryPoint": 3942,
									"id": 3184,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferFrom_1089": {
									"entryPoint": 6243,
									"id": 1089,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_3122": {
									"entryPoint": 2656,
									"id": 3122,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1009": {
									"entryPoint": 8015,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_3082": {
									"entryPoint": 4472,
									"id": 3082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockShares_3018": {
									"entryPoint": 4832,
									"id": 3018,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePricingModel_3031": {
									"entryPoint": 3480,
									"id": 3031,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1875": {
									"entryPoint": 9457,
									"id": 1875,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_722": {
									"entryPoint": 3317,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2391": {
									"entryPoint": 10164,
									"id": 2391,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whitelisted_2857": {
									"entryPoint": 5000,
									"id": 2857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 11633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 12288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 11955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 11067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 13598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 10455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 11698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 12353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 12078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 12178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 13618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 11170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 10475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_address": {
									"entryPoint": 12398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_addresst_uint256": {
									"entryPoint": 12098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 13216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IAKSStablecoin_$2772_to_t_address_fromStack": {
									"entryPoint": 11360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ITokensBridge_$2815_to_t_address_fromStack": {
									"entryPoint": 11893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 13533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 13201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 13573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 13661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13700,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAKSStablecoin_$2772__to_t_address__fromStack_reversed": {
									"entryPoint": 11375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokensBridge_$2815__to_t_address__fromStack_reversed": {
									"entryPoint": 11908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 13548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_address_t_uint256__to_t_uint64_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13231,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 11571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 12240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 13753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 13284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 14023,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 13491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 12037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 13989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IAKSStablecoin_$2772_to_t_address": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ITokensBridge_$2815_to_t_address": {
									"entryPoint": 11876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 13500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 11326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 11293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 13879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 14160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11619,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 13771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 12752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 14133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 14105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 12707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 13912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 13786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 14093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 13965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5": {
									"entryPoint": 13349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514": {
									"entryPoint": 12800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2": {
									"entryPoint": 12955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48": {
									"entryPoint": 13059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 13798,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 13921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 12056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 13958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30483:21",
										"nodeType": "YulBlock",
										"src": "0:30483:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:21",
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nativeSrc": "57:19:21",
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:21",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nativeSrc": "67:9:21",
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:21",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nativeSrc": "177:28:21",
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:21",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:21",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nativeSrc": "187:12:21",
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nativeSrc": "187:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nativeSrc": "300:28:21",
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:21",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:21",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nativeSrc": "310:12:21",
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nativeSrc": "310:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nativeSrc": "378:105:21",
													"nodeType": "YulBlock",
													"src": "378:105:21",
													"statements": [
														{
															"nativeSrc": "388:89:21",
															"nodeType": "YulAssignment",
															"src": "388:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:21",
																		"nodeType": "YulLiteral",
																		"src": "410:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nativeSrc": "399:78:21",
																"nodeType": "YulFunctionCall",
																"src": "399:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:21",
														"nodeType": "YulTypedName",
														"src": "360:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:21",
														"nodeType": "YulTypedName",
														"src": "370:7:21",
														"type": ""
													}
												],
												"src": "334:149:21"
											},
											{
												"body": {
													"nativeSrc": "531:78:21",
													"nodeType": "YulBlock",
													"src": "531:78:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:21",
																"nodeType": "YulBlock",
																"src": "587:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:21",
																					"nodeType": "YulLiteral",
																					"src": "596:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:21",
																					"nodeType": "YulLiteral",
																					"src": "599:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:21"
																			},
																			"nativeSrc": "589:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:21"
																		},
																		"nativeSrc": "589:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:21",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:21"
																				},
																				"nativeSrc": "561:23:21",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:21"
																		},
																		"nativeSrc": "551:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:21"
																},
																"nativeSrc": "544:42:21",
																"nodeType": "YulFunctionCall",
																"src": "544:42:21"
															},
															"nativeSrc": "541:62:21",
															"nodeType": "YulIf",
															"src": "541:62:21"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:21",
														"nodeType": "YulTypedName",
														"src": "524:5:21",
														"type": ""
													}
												],
												"src": "489:120:21"
											},
											{
												"body": {
													"nativeSrc": "666:86:21",
													"nodeType": "YulBlock",
													"src": "666:86:21",
													"statements": [
														{
															"nativeSrc": "676:29:21",
															"nodeType": "YulAssignment",
															"src": "676:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:21"
																},
																"nativeSrc": "685:20:21",
																"nodeType": "YulFunctionCall",
																"src": "685:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:21"
																},
																"nativeSrc": "714:32:21",
																"nodeType": "YulFunctionCall",
																"src": "714:32:21"
															},
															"nativeSrc": "714:32:21",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:21"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:21",
														"nodeType": "YulTypedName",
														"src": "644:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:21",
														"nodeType": "YulTypedName",
														"src": "652:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:21",
														"nodeType": "YulTypedName",
														"src": "660:5:21",
														"type": ""
													}
												],
												"src": "615:137:21"
											},
											{
												"body": {
													"nativeSrc": "823:262:21",
													"nodeType": "YulBlock",
													"src": "823:262:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:21",
																"nodeType": "YulBlock",
																"src": "869:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:21"
																			},
																			"nativeSrc": "871:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:21"
																		},
																		"nativeSrc": "871:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:21"
																		},
																		"nativeSrc": "840:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:21",
																		"nodeType": "YulLiteral",
																		"src": "865:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:21"
																},
																"nativeSrc": "836:32:21",
																"nodeType": "YulFunctionCall",
																"src": "836:32:21"
															},
															"nativeSrc": "833:119:21",
															"nodeType": "YulIf",
															"src": "833:119:21"
														},
														{
															"nativeSrc": "962:116:21",
															"nodeType": "YulBlock",
															"src": "962:116:21",
															"statements": [
																{
																	"nativeSrc": "977:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:21",
																		"nodeType": "YulLiteral",
																		"src": "991:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:21",
																			"nodeType": "YulTypedName",
																			"src": "981:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:21",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:21"
																				},
																				"nativeSrc": "1036:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:21",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:21"
																		},
																		"nativeSrc": "1016:52:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:21",
														"nodeType": "YulTypedName",
														"src": "793:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:21",
														"nodeType": "YulTypedName",
														"src": "804:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:21",
														"nodeType": "YulTypedName",
														"src": "816:6:21",
														"type": ""
													}
												],
												"src": "758:327:21"
											},
											{
												"body": {
													"nativeSrc": "1133:48:21",
													"nodeType": "YulBlock",
													"src": "1133:48:21",
													"statements": [
														{
															"nativeSrc": "1143:32:21",
															"nodeType": "YulAssignment",
															"src": "1143:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:21"
																		},
																		"nativeSrc": "1161:13:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:21"
																},
																"nativeSrc": "1154:21:21",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:21",
														"nodeType": "YulTypedName",
														"src": "1115:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:21",
														"nodeType": "YulTypedName",
														"src": "1125:7:21",
														"type": ""
													}
												],
												"src": "1091:90:21"
											},
											{
												"body": {
													"nativeSrc": "1246:50:21",
													"nodeType": "YulBlock",
													"src": "1246:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:21",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:21"
																		},
																		"nativeSrc": "1268:21:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:21"
																},
																"nativeSrc": "1256:34:21",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:21"
															},
															"nativeSrc": "1256:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:21",
														"nodeType": "YulTypedName",
														"src": "1234:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:21",
														"nodeType": "YulTypedName",
														"src": "1241:3:21",
														"type": ""
													}
												],
												"src": "1187:109:21"
											},
											{
												"body": {
													"nativeSrc": "1394:118:21",
													"nodeType": "YulBlock",
													"src": "1394:118:21",
													"statements": [
														{
															"nativeSrc": "1404:26:21",
															"nodeType": "YulAssignment",
															"src": "1404:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:21",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:21"
																},
																"nativeSrc": "1412:18:21",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:21",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:21"
																		},
																		"nativeSrc": "1487:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:21",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:21"
																},
																"nativeSrc": "1440:65:21",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:21"
															},
															"nativeSrc": "1440:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:21",
														"nodeType": "YulTypedName",
														"src": "1366:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:21",
														"nodeType": "YulTypedName",
														"src": "1378:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:21",
														"nodeType": "YulTypedName",
														"src": "1389:4:21",
														"type": ""
													}
												],
												"src": "1302:210:21"
											},
											{
												"body": {
													"nativeSrc": "1563:81:21",
													"nodeType": "YulBlock",
													"src": "1563:81:21",
													"statements": [
														{
															"nativeSrc": "1573:65:21",
															"nodeType": "YulAssignment",
															"src": "1573:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:21",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:21"
																},
																"nativeSrc": "1584:54:21",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:21",
														"nodeType": "YulTypedName",
														"src": "1545:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:21",
														"nodeType": "YulTypedName",
														"src": "1555:7:21",
														"type": ""
													}
												],
												"src": "1518:126:21"
											},
											{
												"body": {
													"nativeSrc": "1695:51:21",
													"nodeType": "YulBlock",
													"src": "1695:51:21",
													"statements": [
														{
															"nativeSrc": "1705:35:21",
															"nodeType": "YulAssignment",
															"src": "1705:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:21"
																},
																"nativeSrc": "1716:24:21",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:21",
														"nodeType": "YulTypedName",
														"src": "1677:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:21",
														"nodeType": "YulTypedName",
														"src": "1687:7:21",
														"type": ""
													}
												],
												"src": "1650:96:21"
											},
											{
												"body": {
													"nativeSrc": "1795:79:21",
													"nodeType": "YulBlock",
													"src": "1795:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:21",
																"nodeType": "YulBlock",
																"src": "1852:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:21",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:21"
																			},
																			"nativeSrc": "1854:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:21"
																		},
																		"nativeSrc": "1854:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:21"
																				},
																				"nativeSrc": "1825:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:21"
																		},
																		"nativeSrc": "1815:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:21"
																},
																"nativeSrc": "1808:43:21",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:21"
															},
															"nativeSrc": "1805:63:21",
															"nodeType": "YulIf",
															"src": "1805:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:21",
														"nodeType": "YulTypedName",
														"src": "1788:5:21",
														"type": ""
													}
												],
												"src": "1752:122:21"
											},
											{
												"body": {
													"nativeSrc": "1932:87:21",
													"nodeType": "YulBlock",
													"src": "1932:87:21",
													"statements": [
														{
															"nativeSrc": "1942:29:21",
															"nodeType": "YulAssignment",
															"src": "1942:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:21"
																},
																"nativeSrc": "1951:20:21",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:21"
																},
																"nativeSrc": "1980:33:21",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:21"
															},
															"nativeSrc": "1980:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:21",
														"nodeType": "YulTypedName",
														"src": "1910:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:21",
														"nodeType": "YulTypedName",
														"src": "1918:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:21",
														"nodeType": "YulTypedName",
														"src": "1926:5:21",
														"type": ""
													}
												],
												"src": "1880:139:21"
											},
											{
												"body": {
													"nativeSrc": "2070:32:21",
													"nodeType": "YulBlock",
													"src": "2070:32:21",
													"statements": [
														{
															"nativeSrc": "2080:16:21",
															"nodeType": "YulAssignment",
															"src": "2080:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "2091:5:21",
																"nodeType": "YulIdentifier",
																"src": "2091:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2080:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2025:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2052:5:21",
														"nodeType": "YulTypedName",
														"src": "2052:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2062:7:21",
														"nodeType": "YulTypedName",
														"src": "2062:7:21",
														"type": ""
													}
												],
												"src": "2025:77:21"
											},
											{
												"body": {
													"nativeSrc": "2151:79:21",
													"nodeType": "YulBlock",
													"src": "2151:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:21",
																"nodeType": "YulBlock",
																"src": "2208:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:21",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:21"
																			},
																			"nativeSrc": "2210:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:21"
																		},
																		"nativeSrc": "2210:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2181:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:21"
																				},
																				"nativeSrc": "2181:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:21"
																		},
																		"nativeSrc": "2171:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:21"
																},
																"nativeSrc": "2164:43:21",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:21"
															},
															"nativeSrc": "2161:63:21",
															"nodeType": "YulIf",
															"src": "2161:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2108:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:21",
														"nodeType": "YulTypedName",
														"src": "2144:5:21",
														"type": ""
													}
												],
												"src": "2108:122:21"
											},
											{
												"body": {
													"nativeSrc": "2288:87:21",
													"nodeType": "YulBlock",
													"src": "2288:87:21",
													"statements": [
														{
															"nativeSrc": "2298:29:21",
															"nodeType": "YulAssignment",
															"src": "2298:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:21"
																},
																"nativeSrc": "2307:20:21",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2336:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:21"
																},
																"nativeSrc": "2336:33:21",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:21"
															},
															"nativeSrc": "2336:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2236:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:21",
														"nodeType": "YulTypedName",
														"src": "2266:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:21",
														"nodeType": "YulTypedName",
														"src": "2274:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:21",
														"nodeType": "YulTypedName",
														"src": "2282:5:21",
														"type": ""
													}
												],
												"src": "2236:139:21"
											},
											{
												"body": {
													"nativeSrc": "2464:391:21",
													"nodeType": "YulBlock",
													"src": "2464:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:83:21",
																"nodeType": "YulBlock",
																"src": "2510:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2512:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:21"
																			},
																			"nativeSrc": "2512:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:21"
																		},
																		"nativeSrc": "2512:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:21"
																		},
																		"nativeSrc": "2481:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:21"
																},
																"nativeSrc": "2477:32:21",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:21"
															},
															"nativeSrc": "2474:119:21",
															"nodeType": "YulIf",
															"src": "2474:119:21"
														},
														{
															"nativeSrc": "2603:117:21",
															"nodeType": "YulBlock",
															"src": "2603:117:21",
															"statements": [
																{
																	"nativeSrc": "2618:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2632:1:21",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2622:6:21",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:63:21",
																	"nodeType": "YulAssignment",
																	"src": "2647:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2682:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2693:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:21"
																				},
																				"nativeSrc": "2678:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2657:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:21"
																		},
																		"nativeSrc": "2657:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2647:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2730:118:21",
															"nodeType": "YulBlock",
															"src": "2730:118:21",
															"statements": [
																{
																	"nativeSrc": "2745:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2759:2:21",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2749:6:21",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:21",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:21"
																				},
																				"nativeSrc": "2806:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2785:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:21"
																		},
																		"nativeSrc": "2785:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2775:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2381:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2426:9:21",
														"nodeType": "YulTypedName",
														"src": "2426:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2437:7:21",
														"nodeType": "YulTypedName",
														"src": "2437:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2449:6:21",
														"nodeType": "YulTypedName",
														"src": "2449:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2457:6:21",
														"nodeType": "YulTypedName",
														"src": "2457:6:21",
														"type": ""
													}
												],
												"src": "2381:474:21"
											},
											{
												"body": {
													"nativeSrc": "2920:40:21",
													"nodeType": "YulBlock",
													"src": "2920:40:21",
													"statements": [
														{
															"nativeSrc": "2931:22:21",
															"nodeType": "YulAssignment",
															"src": "2931:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2947:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2947:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2941:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "2941:5:21"
																},
																"nativeSrc": "2941:12:21",
																"nodeType": "YulFunctionCall",
																"src": "2941:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2931:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2861:99:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2903:5:21",
														"nodeType": "YulTypedName",
														"src": "2903:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2913:6:21",
														"nodeType": "YulTypedName",
														"src": "2913:6:21",
														"type": ""
													}
												],
												"src": "2861:99:21"
											},
											{
												"body": {
													"nativeSrc": "3062:73:21",
													"nodeType": "YulBlock",
													"src": "3062:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3079:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3084:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:21"
																},
																"nativeSrc": "3072:19:21",
																"nodeType": "YulFunctionCall",
																"src": "3072:19:21"
															},
															"nativeSrc": "3072:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "3072:19:21"
														},
														{
															"nativeSrc": "3100:29:21",
															"nodeType": "YulAssignment",
															"src": "3100:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3119:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3124:4:21",
																		"nodeType": "YulLiteral",
																		"src": "3124:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:21"
																},
																"nativeSrc": "3115:14:21",
																"nodeType": "YulFunctionCall",
																"src": "3115:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3100:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "3100:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2966:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3034:3:21",
														"nodeType": "YulTypedName",
														"src": "3034:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3039:6:21",
														"nodeType": "YulTypedName",
														"src": "3039:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3050:11:21",
														"nodeType": "YulTypedName",
														"src": "3050:11:21",
														"type": ""
													}
												],
												"src": "2966:169:21"
											},
											{
												"body": {
													"nativeSrc": "3203:77:21",
													"nodeType": "YulBlock",
													"src": "3203:77:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3220:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:21"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3225:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3225:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3230:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:21"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3214:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "3214:5:21"
																},
																"nativeSrc": "3214:23:21",
																"nodeType": "YulFunctionCall",
																"src": "3214:23:21"
															},
															"nativeSrc": "3214:23:21",
															"nodeType": "YulExpressionStatement",
															"src": "3214:23:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3257:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3262:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3262:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3253:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:21"
																		},
																		"nativeSrc": "3253:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3253:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3271:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3246:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:21"
																},
																"nativeSrc": "3246:27:21",
																"nodeType": "YulFunctionCall",
																"src": "3246:27:21"
															},
															"nativeSrc": "3246:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "3246:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3141:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3185:3:21",
														"nodeType": "YulTypedName",
														"src": "3185:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3190:3:21",
														"nodeType": "YulTypedName",
														"src": "3190:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3195:6:21",
														"nodeType": "YulTypedName",
														"src": "3195:6:21",
														"type": ""
													}
												],
												"src": "3141:139:21"
											},
											{
												"body": {
													"nativeSrc": "3334:54:21",
													"nodeType": "YulBlock",
													"src": "3334:54:21",
													"statements": [
														{
															"nativeSrc": "3344:38:21",
															"nodeType": "YulAssignment",
															"src": "3344:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3362:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "3362:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3369:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3369:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:21"
																		},
																		"nativeSrc": "3358:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3378:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3374:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:21"
																		},
																		"nativeSrc": "3374:7:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3354:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:21"
																},
																"nativeSrc": "3354:28:21",
																"nodeType": "YulFunctionCall",
																"src": "3354:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3344:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3286:102:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3317:5:21",
														"nodeType": "YulTypedName",
														"src": "3317:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3327:6:21",
														"nodeType": "YulTypedName",
														"src": "3327:6:21",
														"type": ""
													}
												],
												"src": "3286:102:21"
											},
											{
												"body": {
													"nativeSrc": "3486:285:21",
													"nodeType": "YulBlock",
													"src": "3486:285:21",
													"statements": [
														{
															"nativeSrc": "3496:53:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3496:53:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3543:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "3543:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3510:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "3510:32:21"
																},
																"nativeSrc": "3510:39:21",
																"nodeType": "YulFunctionCall",
																"src": "3510:39:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3500:6:21",
																	"nodeType": "YulTypedName",
																	"src": "3500:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3558:78:21",
															"nodeType": "YulAssignment",
															"src": "3558:78:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3624:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3624:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3629:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3565:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "3565:58:21"
																},
																"nativeSrc": "3565:71:21",
																"nodeType": "YulFunctionCall",
																"src": "3565:71:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3558:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3684:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "3684:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3691:4:21",
																				"nodeType": "YulLiteral",
																				"src": "3691:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3680:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3680:3:21"
																		},
																		"nativeSrc": "3680:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:16:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3698:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3703:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3645:34:21",
																	"nodeType": "YulIdentifier",
																	"src": "3645:34:21"
																},
																"nativeSrc": "3645:65:21",
																"nodeType": "YulFunctionCall",
																"src": "3645:65:21"
															},
															"nativeSrc": "3645:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "3645:65:21"
														},
														{
															"nativeSrc": "3719:46:21",
															"nodeType": "YulAssignment",
															"src": "3719:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3730:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "3730:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3757:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3735:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "3735:21:21"
																		},
																		"nativeSrc": "3735:29:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:21"
																},
																"nativeSrc": "3726:39:21",
																"nodeType": "YulFunctionCall",
																"src": "3726:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3719:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3394:377:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3467:5:21",
														"nodeType": "YulTypedName",
														"src": "3467:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3474:3:21",
														"nodeType": "YulTypedName",
														"src": "3474:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3482:3:21",
														"nodeType": "YulTypedName",
														"src": "3482:3:21",
														"type": ""
													}
												],
												"src": "3394:377:21"
											},
											{
												"body": {
													"nativeSrc": "3895:195:21",
													"nodeType": "YulBlock",
													"src": "3895:195:21",
													"statements": [
														{
															"nativeSrc": "3905:26:21",
															"nodeType": "YulAssignment",
															"src": "3905:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3917:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "3917:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3928:2:21",
																		"nodeType": "YulLiteral",
																		"src": "3928:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3913:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:21"
																},
																"nativeSrc": "3913:18:21",
																"nodeType": "YulFunctionCall",
																"src": "3913:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3905:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3905:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3952:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3952:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3963:1:21",
																				"nodeType": "YulLiteral",
																				"src": "3963:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3948:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3948:3:21"
																		},
																		"nativeSrc": "3948:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3948:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3971:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "3971:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3967:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3967:3:21"
																		},
																		"nativeSrc": "3967:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3967:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3941:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:21"
																},
																"nativeSrc": "3941:47:21",
																"nodeType": "YulFunctionCall",
																"src": "3941:47:21"
															},
															"nativeSrc": "3941:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "3941:47:21"
														},
														{
															"nativeSrc": "3997:86:21",
															"nodeType": "YulAssignment",
															"src": "3997:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4069:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4069:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4078:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "4078:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4005:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "4005:63:21"
																},
																"nativeSrc": "4005:78:21",
																"nodeType": "YulFunctionCall",
																"src": "4005:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3997:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3997:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3777:313:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3867:9:21",
														"nodeType": "YulTypedName",
														"src": "3867:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3879:6:21",
														"nodeType": "YulTypedName",
														"src": "3879:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3890:4:21",
														"nodeType": "YulTypedName",
														"src": "3890:4:21",
														"type": ""
													}
												],
												"src": "3777:313:21"
											},
											{
												"body": {
													"nativeSrc": "4161:53:21",
													"nodeType": "YulBlock",
													"src": "4161:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:21"
																		},
																		"nativeSrc": "4183:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:21"
																},
																"nativeSrc": "4171:37:21",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:21"
															},
															"nativeSrc": "4171:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:21",
														"nodeType": "YulTypedName",
														"src": "4149:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:21",
														"nodeType": "YulTypedName",
														"src": "4156:3:21",
														"type": ""
													}
												],
												"src": "4096:118:21"
											},
											{
												"body": {
													"nativeSrc": "4318:124:21",
													"nodeType": "YulBlock",
													"src": "4318:124:21",
													"statements": [
														{
															"nativeSrc": "4328:26:21",
															"nodeType": "YulAssignment",
															"src": "4328:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:21"
																},
																"nativeSrc": "4336:18:21",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:21",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:21"
																		},
																		"nativeSrc": "4417:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:21"
																},
																"nativeSrc": "4364:71:21",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:21"
															},
															"nativeSrc": "4364:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:21",
														"nodeType": "YulTypedName",
														"src": "4290:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:21",
														"nodeType": "YulTypedName",
														"src": "4302:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:21",
														"nodeType": "YulTypedName",
														"src": "4313:4:21",
														"type": ""
													}
												],
												"src": "4220:222:21"
											},
											{
												"body": {
													"nativeSrc": "4548:519:21",
													"nodeType": "YulBlock",
													"src": "4548:519:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:21",
																"nodeType": "YulBlock",
																"src": "4594:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:21"
																			},
																			"nativeSrc": "4596:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:21"
																		},
																		"nativeSrc": "4596:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:21"
																		},
																		"nativeSrc": "4565:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:21"
																},
																"nativeSrc": "4561:32:21",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:21"
															},
															"nativeSrc": "4558:119:21",
															"nodeType": "YulIf",
															"src": "4558:119:21"
														},
														{
															"nativeSrc": "4687:117:21",
															"nodeType": "YulBlock",
															"src": "4687:117:21",
															"statements": [
																{
																	"nativeSrc": "4702:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:21",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:21"
																				},
																				"nativeSrc": "4762:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:21"
																		},
																		"nativeSrc": "4741:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:21",
															"nodeType": "YulBlock",
															"src": "4814:118:21",
															"statements": [
																{
																	"nativeSrc": "4829:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:21"
																				},
																				"nativeSrc": "4890:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:21"
																		},
																		"nativeSrc": "4869:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:21",
															"nodeType": "YulBlock",
															"src": "4942:118:21",
															"statements": [
																{
																	"nativeSrc": "4957:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:21",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:21",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:21"
																				},
																				"nativeSrc": "5018:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:21"
																		},
																		"nativeSrc": "4997:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:21",
														"nodeType": "YulTypedName",
														"src": "4502:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:21",
														"nodeType": "YulTypedName",
														"src": "4513:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:21",
														"nodeType": "YulTypedName",
														"src": "4525:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:21",
														"nodeType": "YulTypedName",
														"src": "4533:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:21",
														"nodeType": "YulTypedName",
														"src": "4541:6:21",
														"type": ""
													}
												],
												"src": "4448:619:21"
											},
											{
												"body": {
													"nativeSrc": "5118:32:21",
													"nodeType": "YulBlock",
													"src": "5118:32:21",
													"statements": [
														{
															"nativeSrc": "5128:16:21",
															"nodeType": "YulAssignment",
															"src": "5128:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:21",
																"nodeType": "YulIdentifier",
																"src": "5139:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:21",
														"nodeType": "YulTypedName",
														"src": "5100:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:21",
														"nodeType": "YulTypedName",
														"src": "5110:7:21",
														"type": ""
													}
												],
												"src": "5073:77:21"
											},
											{
												"body": {
													"nativeSrc": "5199:79:21",
													"nodeType": "YulBlock",
													"src": "5199:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:21",
																"nodeType": "YulBlock",
																"src": "5256:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:21",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:21"
																			},
																			"nativeSrc": "5258:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:21"
																		},
																		"nativeSrc": "5258:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:21"
																				},
																				"nativeSrc": "5229:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:21"
																		},
																		"nativeSrc": "5219:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:21"
																},
																"nativeSrc": "5212:43:21",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:21"
															},
															"nativeSrc": "5209:63:21",
															"nodeType": "YulIf",
															"src": "5209:63:21"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:21",
														"nodeType": "YulTypedName",
														"src": "5192:5:21",
														"type": ""
													}
												],
												"src": "5156:122:21"
											},
											{
												"body": {
													"nativeSrc": "5336:87:21",
													"nodeType": "YulBlock",
													"src": "5336:87:21",
													"statements": [
														{
															"nativeSrc": "5346:29:21",
															"nodeType": "YulAssignment",
															"src": "5346:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:21"
																},
																"nativeSrc": "5355:20:21",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:21"
																},
																"nativeSrc": "5384:33:21",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:21"
															},
															"nativeSrc": "5384:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:21"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:21",
														"nodeType": "YulTypedName",
														"src": "5314:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:21",
														"nodeType": "YulTypedName",
														"src": "5322:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:21",
														"nodeType": "YulTypedName",
														"src": "5330:5:21",
														"type": ""
													}
												],
												"src": "5284:139:21"
											},
											{
												"body": {
													"nativeSrc": "5495:263:21",
													"nodeType": "YulBlock",
													"src": "5495:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:21",
																"nodeType": "YulBlock",
																"src": "5541:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:21"
																			},
																			"nativeSrc": "5543:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:21"
																		},
																		"nativeSrc": "5543:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:21"
																		},
																		"nativeSrc": "5512:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:21"
																},
																"nativeSrc": "5508:32:21",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:21"
															},
															"nativeSrc": "5505:119:21",
															"nodeType": "YulIf",
															"src": "5505:119:21"
														},
														{
															"nativeSrc": "5634:117:21",
															"nodeType": "YulBlock",
															"src": "5634:117:21",
															"statements": [
																{
																	"nativeSrc": "5649:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:21",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:21",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:21",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:21"
																				},
																				"nativeSrc": "5709:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:21"
																		},
																		"nativeSrc": "5688:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:21",
														"nodeType": "YulTypedName",
														"src": "5465:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:21",
														"nodeType": "YulTypedName",
														"src": "5476:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:21",
														"nodeType": "YulTypedName",
														"src": "5488:6:21",
														"type": ""
													}
												],
												"src": "5429:329:21"
											},
											{
												"body": {
													"nativeSrc": "5829:53:21",
													"nodeType": "YulBlock",
													"src": "5829:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:21"
																		},
																		"nativeSrc": "5851:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:21"
																},
																"nativeSrc": "5839:37:21",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:21"
															},
															"nativeSrc": "5839:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:21"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:21",
														"nodeType": "YulTypedName",
														"src": "5817:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:21",
														"nodeType": "YulTypedName",
														"src": "5824:3:21",
														"type": ""
													}
												],
												"src": "5764:118:21"
											},
											{
												"body": {
													"nativeSrc": "5986:124:21",
													"nodeType": "YulBlock",
													"src": "5986:124:21",
													"statements": [
														{
															"nativeSrc": "5996:26:21",
															"nodeType": "YulAssignment",
															"src": "5996:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:21"
																},
																"nativeSrc": "6004:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:21",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:21"
																		},
																		"nativeSrc": "6085:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:21"
																},
																"nativeSrc": "6032:71:21",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:21"
															},
															"nativeSrc": "6032:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:21",
														"nodeType": "YulTypedName",
														"src": "5958:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:21",
														"nodeType": "YulTypedName",
														"src": "5970:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:21",
														"nodeType": "YulTypedName",
														"src": "5981:4:21",
														"type": ""
													}
												],
												"src": "5888:222:21"
											},
											{
												"body": {
													"nativeSrc": "6199:391:21",
													"nodeType": "YulBlock",
													"src": "6199:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:21",
																"nodeType": "YulBlock",
																"src": "6245:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:21"
																			},
																			"nativeSrc": "6247:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:21"
																		},
																		"nativeSrc": "6247:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:21"
																		},
																		"nativeSrc": "6216:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:21"
																},
																"nativeSrc": "6212:32:21",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:21"
															},
															"nativeSrc": "6209:119:21",
															"nodeType": "YulIf",
															"src": "6209:119:21"
														},
														{
															"nativeSrc": "6338:117:21",
															"nodeType": "YulBlock",
															"src": "6338:117:21",
															"statements": [
																{
																	"nativeSrc": "6353:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:21",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:21",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:21",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:21"
																				},
																				"nativeSrc": "6413:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:21"
																		},
																		"nativeSrc": "6392:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:21",
															"nodeType": "YulBlock",
															"src": "6465:118:21",
															"statements": [
																{
																	"nativeSrc": "6480:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:21",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:21",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:21"
																				},
																				"nativeSrc": "6541:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:21"
																		},
																		"nativeSrc": "6520:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:21",
														"nodeType": "YulTypedName",
														"src": "6161:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:21",
														"nodeType": "YulTypedName",
														"src": "6172:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:21",
														"nodeType": "YulTypedName",
														"src": "6184:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:21",
														"nodeType": "YulTypedName",
														"src": "6192:6:21",
														"type": ""
													}
												],
												"src": "6116:474:21"
											},
											{
												"body": {
													"nativeSrc": "6639:43:21",
													"nodeType": "YulBlock",
													"src": "6639:43:21",
													"statements": [
														{
															"nativeSrc": "6649:27:21",
															"nodeType": "YulAssignment",
															"src": "6649:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:21",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:21",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:21"
																},
																"nativeSrc": "6660:16:21",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:21",
														"nodeType": "YulTypedName",
														"src": "6621:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:21",
														"nodeType": "YulTypedName",
														"src": "6631:7:21",
														"type": ""
													}
												],
												"src": "6596:86:21"
											},
											{
												"body": {
													"nativeSrc": "6749:51:21",
													"nodeType": "YulBlock",
													"src": "6749:51:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:21",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:21"
																		},
																		"nativeSrc": "6771:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:21"
																},
																"nativeSrc": "6759:35:21",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:21"
															},
															"nativeSrc": "6759:35:21",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:21"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:21",
														"nodeType": "YulTypedName",
														"src": "6737:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:21",
														"nodeType": "YulTypedName",
														"src": "6744:3:21",
														"type": ""
													}
												],
												"src": "6688:112:21"
											},
											{
												"body": {
													"nativeSrc": "6900:120:21",
													"nodeType": "YulBlock",
													"src": "6900:120:21",
													"statements": [
														{
															"nativeSrc": "6910:26:21",
															"nodeType": "YulAssignment",
															"src": "6910:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:21"
																},
																"nativeSrc": "6918:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:21",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:21"
																		},
																		"nativeSrc": "6995:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:21",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:21"
																},
																"nativeSrc": "6946:67:21",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:21"
															},
															"nativeSrc": "6946:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:21",
														"nodeType": "YulTypedName",
														"src": "6872:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:21",
														"nodeType": "YulTypedName",
														"src": "6884:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:21",
														"nodeType": "YulTypedName",
														"src": "6895:4:21",
														"type": ""
													}
												],
												"src": "6806:214:21"
											},
											{
												"body": {
													"nativeSrc": "7058:28:21",
													"nodeType": "YulBlock",
													"src": "7058:28:21",
													"statements": [
														{
															"nativeSrc": "7068:12:21",
															"nodeType": "YulAssignment",
															"src": "7068:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "7075:5:21",
																"nodeType": "YulIdentifier",
																"src": "7075:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7068:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7068:3:21"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7026:60:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7044:5:21",
														"nodeType": "YulTypedName",
														"src": "7044:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7054:3:21",
														"nodeType": "YulTypedName",
														"src": "7054:3:21",
														"type": ""
													}
												],
												"src": "7026:60:21"
											},
											{
												"body": {
													"nativeSrc": "7152:82:21",
													"nodeType": "YulBlock",
													"src": "7152:82:21",
													"statements": [
														{
															"nativeSrc": "7162:66:21",
															"nodeType": "YulAssignment",
															"src": "7162:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7220:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "7220:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7202:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "7202:17:21"
																				},
																				"nativeSrc": "7202:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7202:24:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7193:8:21",
																			"nodeType": "YulIdentifier",
																			"src": "7193:8:21"
																		},
																		"nativeSrc": "7193:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:34:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7175:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "7175:17:21"
																},
																"nativeSrc": "7175:53:21",
																"nodeType": "YulFunctionCall",
																"src": "7175:53:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7162:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "7162:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7092:142:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7132:5:21",
														"nodeType": "YulTypedName",
														"src": "7132:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7142:9:21",
														"nodeType": "YulTypedName",
														"src": "7142:9:21",
														"type": ""
													}
												],
												"src": "7092:142:21"
											},
											{
												"body": {
													"nativeSrc": "7300:66:21",
													"nodeType": "YulBlock",
													"src": "7300:66:21",
													"statements": [
														{
															"nativeSrc": "7310:50:21",
															"nodeType": "YulAssignment",
															"src": "7310:50:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7354:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7354:5:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7323:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "7323:30:21"
																},
																"nativeSrc": "7323:37:21",
																"nodeType": "YulFunctionCall",
																"src": "7323:37:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7310:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "7310:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7240:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7280:5:21",
														"nodeType": "YulTypedName",
														"src": "7280:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7290:9:21",
														"nodeType": "YulTypedName",
														"src": "7290:9:21",
														"type": ""
													}
												],
												"src": "7240:126:21"
											},
											{
												"body": {
													"nativeSrc": "7455:66:21",
													"nodeType": "YulBlock",
													"src": "7455:66:21",
													"statements": [
														{
															"nativeSrc": "7465:50:21",
															"nodeType": "YulAssignment",
															"src": "7465:50:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7509:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "7509:5:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7478:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "7478:30:21"
																},
																"nativeSrc": "7478:37:21",
																"nodeType": "YulFunctionCall",
																"src": "7478:37:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7465:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "7465:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAKSStablecoin_$2772_to_t_address",
												"nativeSrc": "7372:149:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7435:5:21",
														"nodeType": "YulTypedName",
														"src": "7435:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7445:9:21",
														"nodeType": "YulTypedName",
														"src": "7445:9:21",
														"type": ""
													}
												],
												"src": "7372:149:21"
											},
											{
												"body": {
													"nativeSrc": "7615:89:21",
													"nodeType": "YulBlock",
													"src": "7615:89:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7632:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7632:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7691:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "7691:5:21"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAKSStablecoin_$2772_to_t_address",
																			"nativeSrc": "7637:53:21",
																			"nodeType": "YulIdentifier",
																			"src": "7637:53:21"
																		},
																		"nativeSrc": "7637:60:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:60:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7625:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7625:6:21"
																},
																"nativeSrc": "7625:73:21",
																"nodeType": "YulFunctionCall",
																"src": "7625:73:21"
															},
															"nativeSrc": "7625:73:21",
															"nodeType": "YulExpressionStatement",
															"src": "7625:73:21"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAKSStablecoin_$2772_to_t_address_fromStack",
												"nativeSrc": "7527:177:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7603:5:21",
														"nodeType": "YulTypedName",
														"src": "7603:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7610:3:21",
														"nodeType": "YulTypedName",
														"src": "7610:3:21",
														"type": ""
													}
												],
												"src": "7527:177:21"
											},
											{
												"body": {
													"nativeSrc": "7831:147:21",
													"nodeType": "YulBlock",
													"src": "7831:147:21",
													"statements": [
														{
															"nativeSrc": "7841:26:21",
															"nodeType": "YulAssignment",
															"src": "7841:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7853:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "7853:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7864:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7864:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7849:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:21"
																},
																"nativeSrc": "7849:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7849:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7841:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7841:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7944:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "7944:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7957:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "7957:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:1:21",
																				"nodeType": "YulLiteral",
																				"src": "7968:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7953:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:21"
																		},
																		"nativeSrc": "7953:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAKSStablecoin_$2772_to_t_address_fromStack",
																	"nativeSrc": "7877:66:21",
																	"nodeType": "YulIdentifier",
																	"src": "7877:66:21"
																},
																"nativeSrc": "7877:94:21",
																"nodeType": "YulFunctionCall",
																"src": "7877:94:21"
															},
															"nativeSrc": "7877:94:21",
															"nodeType": "YulExpressionStatement",
															"src": "7877:94:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAKSStablecoin_$2772__to_t_address__fromStack_reversed",
												"nativeSrc": "7710:268:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7803:9:21",
														"nodeType": "YulTypedName",
														"src": "7803:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7815:6:21",
														"nodeType": "YulTypedName",
														"src": "7815:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7826:4:21",
														"nodeType": "YulTypedName",
														"src": "7826:4:21",
														"type": ""
													}
												],
												"src": "7710:268:21"
											},
											{
												"body": {
													"nativeSrc": "8050:263:21",
													"nodeType": "YulBlock",
													"src": "8050:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "8096:83:21",
																"nodeType": "YulBlock",
																"src": "8096:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8098:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "8098:77:21"
																			},
																			"nativeSrc": "8098:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "8098:79:21"
																		},
																		"nativeSrc": "8098:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "8098:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8071:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "8071:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8080:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "8080:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8067:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8067:3:21"
																		},
																		"nativeSrc": "8067:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8067:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8092:2:21",
																		"nodeType": "YulLiteral",
																		"src": "8092:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8063:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8063:3:21"
																},
																"nativeSrc": "8063:32:21",
																"nodeType": "YulFunctionCall",
																"src": "8063:32:21"
															},
															"nativeSrc": "8060:119:21",
															"nodeType": "YulIf",
															"src": "8060:119:21"
														},
														{
															"nativeSrc": "8189:117:21",
															"nodeType": "YulBlock",
															"src": "8189:117:21",
															"statements": [
																{
																	"nativeSrc": "8204:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8204:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8218:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8218:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8208:6:21",
																			"nodeType": "YulTypedName",
																			"src": "8208:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8233:63:21",
																	"nodeType": "YulAssignment",
																	"src": "8233:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8268:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "8268:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8279:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "8279:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8264:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "8264:3:21"
																				},
																				"nativeSrc": "8264:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "8264:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8288:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "8288:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8243:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "8243:20:21"
																		},
																		"nativeSrc": "8243:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8243:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8233:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "8233:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7984:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8020:9:21",
														"nodeType": "YulTypedName",
														"src": "8020:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8031:7:21",
														"nodeType": "YulTypedName",
														"src": "8031:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8043:6:21",
														"nodeType": "YulTypedName",
														"src": "8043:6:21",
														"type": ""
													}
												],
												"src": "7984:329:21"
											},
											{
												"body": {
													"nativeSrc": "8408:28:21",
													"nodeType": "YulBlock",
													"src": "8408:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8425:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8425:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8428:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8428:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8418:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:21"
																},
																"nativeSrc": "8418:12:21",
																"nodeType": "YulFunctionCall",
																"src": "8418:12:21"
															},
															"nativeSrc": "8418:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "8418:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8319:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "8319:117:21"
											},
											{
												"body": {
													"nativeSrc": "8531:28:21",
													"nodeType": "YulBlock",
													"src": "8531:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8548:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8548:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8551:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8551:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8541:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8541:6:21"
																},
																"nativeSrc": "8541:12:21",
																"nodeType": "YulFunctionCall",
																"src": "8541:12:21"
															},
															"nativeSrc": "8541:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "8541:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8442:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "8442:117:21"
											},
											{
												"body": {
													"nativeSrc": "8593:152:21",
													"nodeType": "YulBlock",
													"src": "8593:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8610:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8610:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:77:21",
																		"nodeType": "YulLiteral",
																		"src": "8613:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8603:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:21"
																},
																"nativeSrc": "8603:88:21",
																"nodeType": "YulFunctionCall",
																"src": "8603:88:21"
															},
															"nativeSrc": "8603:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "8603:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8707:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8710:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8710:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8700:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:21"
																},
																"nativeSrc": "8700:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8700:15:21"
															},
															"nativeSrc": "8700:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8700:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8731:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8731:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8734:4:21",
																		"nodeType": "YulLiteral",
																		"src": "8734:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8724:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:21"
																},
																"nativeSrc": "8724:15:21",
																"nodeType": "YulFunctionCall",
																"src": "8724:15:21"
															},
															"nativeSrc": "8724:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "8724:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8565:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "8565:180:21"
											},
											{
												"body": {
													"nativeSrc": "8794:238:21",
													"nodeType": "YulBlock",
													"src": "8794:238:21",
													"statements": [
														{
															"nativeSrc": "8804:58:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8804:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8826:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "8826:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8856:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "8856:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8834:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "8834:21:21"
																		},
																		"nativeSrc": "8834:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8834:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8822:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:21"
																},
																"nativeSrc": "8822:40:21",
																"nodeType": "YulFunctionCall",
																"src": "8822:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8808:10:21",
																	"nodeType": "YulTypedName",
																	"src": "8808:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8973:22:21",
																"nodeType": "YulBlock",
																"src": "8973:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8975:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "8975:16:21"
																			},
																			"nativeSrc": "8975:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "8975:18:21"
																		},
																		"nativeSrc": "8975:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "8975:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8916:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "8916:10:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8928:18:21",
																				"nodeType": "YulLiteral",
																				"src": "8928:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8913:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "8913:2:21"
																		},
																		"nativeSrc": "8913:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8952:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "8952:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8964:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "8964:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8949:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "8949:2:21"
																		},
																		"nativeSrc": "8949:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8949:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8910:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "8910:2:21"
																},
																"nativeSrc": "8910:62:21",
																"nodeType": "YulFunctionCall",
																"src": "8910:62:21"
															},
															"nativeSrc": "8907:88:21",
															"nodeType": "YulIf",
															"src": "8907:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9011:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9015:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "9015:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9004:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:21"
																},
																"nativeSrc": "9004:22:21",
																"nodeType": "YulFunctionCall",
																"src": "9004:22:21"
															},
															"nativeSrc": "9004:22:21",
															"nodeType": "YulExpressionStatement",
															"src": "9004:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8751:281:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8780:6:21",
														"nodeType": "YulTypedName",
														"src": "8780:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8788:4:21",
														"nodeType": "YulTypedName",
														"src": "8788:4:21",
														"type": ""
													}
												],
												"src": "8751:281:21"
											},
											{
												"body": {
													"nativeSrc": "9079:88:21",
													"nodeType": "YulBlock",
													"src": "9079:88:21",
													"statements": [
														{
															"nativeSrc": "9089:30:21",
															"nodeType": "YulAssignment",
															"src": "9089:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "9099:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "9099:18:21"
																},
																"nativeSrc": "9099:20:21",
																"nodeType": "YulFunctionCall",
																"src": "9099:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9089:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9148:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9148:6:21"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "9156:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "9156:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "9128:19:21",
																	"nodeType": "YulIdentifier",
																	"src": "9128:19:21"
																},
																"nativeSrc": "9128:33:21",
																"nodeType": "YulFunctionCall",
																"src": "9128:33:21"
															},
															"nativeSrc": "9128:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "9128:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9038:129:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "9063:4:21",
														"nodeType": "YulTypedName",
														"src": "9063:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9072:6:21",
														"nodeType": "YulTypedName",
														"src": "9072:6:21",
														"type": ""
													}
												],
												"src": "9038:129:21"
											},
											{
												"body": {
													"nativeSrc": "9239:241:21",
													"nodeType": "YulBlock",
													"src": "9239:241:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "9344:22:21",
																"nodeType": "YulBlock",
																"src": "9344:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9346:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "9346:16:21"
																			},
																			"nativeSrc": "9346:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9346:18:21"
																		},
																		"nativeSrc": "9346:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "9346:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9316:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9316:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9324:18:21",
																		"nodeType": "YulLiteral",
																		"src": "9324:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9313:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9313:2:21"
																},
																"nativeSrc": "9313:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9313:30:21"
															},
															"nativeSrc": "9310:56:21",
															"nodeType": "YulIf",
															"src": "9310:56:21"
														},
														{
															"nativeSrc": "9376:37:21",
															"nodeType": "YulAssignment",
															"src": "9376:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9406:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9406:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9384:21:21",
																	"nodeType": "YulIdentifier",
																	"src": "9384:21:21"
																},
																"nativeSrc": "9384:29:21",
																"nodeType": "YulFunctionCall",
																"src": "9384:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9376:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9376:4:21"
																}
															]
														},
														{
															"nativeSrc": "9450:23:21",
															"nodeType": "YulAssignment",
															"src": "9450:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9462:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "9462:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9468:4:21",
																		"nodeType": "YulLiteral",
																		"src": "9468:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9458:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9458:3:21"
																},
																"nativeSrc": "9458:15:21",
																"nodeType": "YulFunctionCall",
																"src": "9458:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9450:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "9450:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9173:307:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9223:6:21",
														"nodeType": "YulTypedName",
														"src": "9223:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9234:4:21",
														"nodeType": "YulTypedName",
														"src": "9234:4:21",
														"type": ""
													}
												],
												"src": "9173:307:21"
											},
											{
												"body": {
													"nativeSrc": "9550:84:21",
													"nodeType": "YulBlock",
													"src": "9550:84:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9574:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9574:3:21"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9579:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9579:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9584:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9584:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9561:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "9561:12:21"
																},
																"nativeSrc": "9561:30:21",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:21"
															},
															"nativeSrc": "9561:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "9561:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9611:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9611:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9616:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9616:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:21"
																		},
																		"nativeSrc": "9607:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9625:1:21",
																		"nodeType": "YulLiteral",
																		"src": "9625:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:21"
																},
																"nativeSrc": "9600:27:21",
																"nodeType": "YulFunctionCall",
																"src": "9600:27:21"
															},
															"nativeSrc": "9600:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "9600:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9486:148:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9532:3:21",
														"nodeType": "YulTypedName",
														"src": "9532:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9537:3:21",
														"nodeType": "YulTypedName",
														"src": "9537:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9542:6:21",
														"nodeType": "YulTypedName",
														"src": "9542:6:21",
														"type": ""
													}
												],
												"src": "9486:148:21"
											},
											{
												"body": {
													"nativeSrc": "9723:340:21",
													"nodeType": "YulBlock",
													"src": "9723:340:21",
													"statements": [
														{
															"nativeSrc": "9733:74:21",
															"nodeType": "YulAssignment",
															"src": "9733:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9799:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9799:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9758:40:21",
																			"nodeType": "YulIdentifier",
																			"src": "9758:40:21"
																		},
																		"nativeSrc": "9758:48:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9758:48:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9742:15:21",
																	"nodeType": "YulIdentifier",
																	"src": "9742:15:21"
																},
																"nativeSrc": "9742:65:21",
																"nodeType": "YulFunctionCall",
																"src": "9742:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9733:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "9733:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9823:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "9823:5:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9830:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9830:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9816:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:21"
																},
																"nativeSrc": "9816:21:21",
																"nodeType": "YulFunctionCall",
																"src": "9816:21:21"
															},
															"nativeSrc": "9816:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "9816:21:21"
														},
														{
															"nativeSrc": "9846:27:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9846:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9861:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "9861:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9868:4:21",
																		"nodeType": "YulLiteral",
																		"src": "9868:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9857:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9857:3:21"
																},
																"nativeSrc": "9857:16:21",
																"nodeType": "YulFunctionCall",
																"src": "9857:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9850:3:21",
																	"nodeType": "YulTypedName",
																	"src": "9850:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9911:83:21",
																"nodeType": "YulBlock",
																"src": "9911:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9913:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "9913:77:21"
																			},
																			"nativeSrc": "9913:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9913:79:21"
																		},
																		"nativeSrc": "9913:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "9913:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9892:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9892:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9897:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "9897:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9888:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:21"
																		},
																		"nativeSrc": "9888:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "9888:16:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9906:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9906:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9885:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9885:2:21"
																},
																"nativeSrc": "9885:25:21",
																"nodeType": "YulFunctionCall",
																"src": "9885:25:21"
															},
															"nativeSrc": "9882:112:21",
															"nodeType": "YulIf",
															"src": "9882:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10040:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "10040:3:21"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10045:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "10045:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10050:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10050:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10003:36:21",
																	"nodeType": "YulIdentifier",
																	"src": "10003:36:21"
																},
																"nativeSrc": "10003:54:21",
																"nodeType": "YulFunctionCall",
																"src": "10003:54:21"
															},
															"nativeSrc": "10003:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "10003:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9640:423:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9696:3:21",
														"nodeType": "YulTypedName",
														"src": "9696:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9701:6:21",
														"nodeType": "YulTypedName",
														"src": "9701:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9709:3:21",
														"nodeType": "YulTypedName",
														"src": "9709:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9717:5:21",
														"nodeType": "YulTypedName",
														"src": "9717:5:21",
														"type": ""
													}
												],
												"src": "9640:423:21"
											},
											{
												"body": {
													"nativeSrc": "10143:277:21",
													"nodeType": "YulBlock",
													"src": "10143:277:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "10192:83:21",
																"nodeType": "YulBlock",
																"src": "10192:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10194:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "10194:77:21"
																			},
																			"nativeSrc": "10194:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "10194:79:21"
																		},
																		"nativeSrc": "10194:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "10194:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10171:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "10171:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10179:4:21",
																						"nodeType": "YulLiteral",
																						"src": "10179:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10167:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "10167:3:21"
																				},
																				"nativeSrc": "10167:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "10167:17:21"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10186:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "10186:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10163:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:21"
																		},
																		"nativeSrc": "10163:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10163:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10156:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:21"
																},
																"nativeSrc": "10156:35:21",
																"nodeType": "YulFunctionCall",
																"src": "10156:35:21"
															},
															"nativeSrc": "10153:122:21",
															"nodeType": "YulIf",
															"src": "10153:122:21"
														},
														{
															"nativeSrc": "10284:34:21",
															"nodeType": "YulVariableDeclaration",
															"src": "10284:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10311:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10311:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10298:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "10298:12:21"
																},
																"nativeSrc": "10298:20:21",
																"nodeType": "YulFunctionCall",
																"src": "10298:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10288:6:21",
																	"nodeType": "YulTypedName",
																	"src": "10288:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10327:87:21",
															"nodeType": "YulAssignment",
															"src": "10327:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10387:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "10387:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10395:4:21",
																				"nodeType": "YulLiteral",
																				"src": "10395:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10383:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:21"
																		},
																		"nativeSrc": "10383:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10383:17:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10402:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10402:6:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10410:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "10410:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10336:46:21",
																	"nodeType": "YulIdentifier",
																	"src": "10336:46:21"
																},
																"nativeSrc": "10336:78:21",
																"nodeType": "YulFunctionCall",
																"src": "10336:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10327:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "10327:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10082:338:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10121:6:21",
														"nodeType": "YulTypedName",
														"src": "10121:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10129:3:21",
														"nodeType": "YulTypedName",
														"src": "10129:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10137:5:21",
														"nodeType": "YulTypedName",
														"src": "10137:5:21",
														"type": ""
													}
												],
												"src": "10082:338:21"
											},
											{
												"body": {
													"nativeSrc": "10518:560:21",
													"nodeType": "YulBlock",
													"src": "10518:560:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "10564:83:21",
																"nodeType": "YulBlock",
																"src": "10564:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10566:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "10566:77:21"
																			},
																			"nativeSrc": "10566:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "10566:79:21"
																		},
																		"nativeSrc": "10566:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "10566:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10539:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "10539:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10548:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "10548:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10535:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:21"
																		},
																		"nativeSrc": "10535:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10535:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10560:2:21",
																		"nodeType": "YulLiteral",
																		"src": "10560:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10531:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10531:3:21"
																},
																"nativeSrc": "10531:32:21",
																"nodeType": "YulFunctionCall",
																"src": "10531:32:21"
															},
															"nativeSrc": "10528:119:21",
															"nodeType": "YulIf",
															"src": "10528:119:21"
														},
														{
															"nativeSrc": "10657:117:21",
															"nodeType": "YulBlock",
															"src": "10657:117:21",
															"statements": [
																{
																	"nativeSrc": "10672:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10672:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10686:1:21",
																		"nodeType": "YulLiteral",
																		"src": "10686:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10676:6:21",
																			"nodeType": "YulTypedName",
																			"src": "10676:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10701:63:21",
																	"nodeType": "YulAssignment",
																	"src": "10701:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10736:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "10736:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10747:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "10747:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10732:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "10732:3:21"
																				},
																				"nativeSrc": "10732:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "10732:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10756:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "10756:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10711:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "10711:20:21"
																		},
																		"nativeSrc": "10711:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10711:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10701:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "10701:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10784:287:21",
															"nodeType": "YulBlock",
															"src": "10784:287:21",
															"statements": [
																{
																	"nativeSrc": "10799:46:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10799:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10830:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "10830:9:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10841:2:21",
																						"nodeType": "YulLiteral",
																						"src": "10841:2:21",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10826:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "10826:3:21"
																				},
																				"nativeSrc": "10826:18:21",
																				"nodeType": "YulFunctionCall",
																				"src": "10826:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10813:12:21",
																			"nodeType": "YulIdentifier",
																			"src": "10813:12:21"
																		},
																		"nativeSrc": "10813:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10813:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10803:6:21",
																			"nodeType": "YulTypedName",
																			"src": "10803:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10892:83:21",
																		"nodeType": "YulBlock",
																		"src": "10892:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10894:77:21",
																						"nodeType": "YulIdentifier",
																						"src": "10894:77:21"
																					},
																					"nativeSrc": "10894:79:21",
																					"nodeType": "YulFunctionCall",
																					"src": "10894:79:21"
																				},
																				"nativeSrc": "10894:79:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "10894:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10864:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "10864:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10872:18:21",
																				"nodeType": "YulLiteral",
																				"src": "10872:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10861:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "10861:2:21"
																		},
																		"nativeSrc": "10861:30:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10861:30:21"
																	},
																	"nativeSrc": "10858:117:21",
																	"nodeType": "YulIf",
																	"src": "10858:117:21"
																},
																{
																	"nativeSrc": "10989:72:21",
																	"nodeType": "YulAssignment",
																	"src": "10989:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11033:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "11033:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11044:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11044:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11029:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "11029:3:21"
																				},
																				"nativeSrc": "11029:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "11029:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11053:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11053:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10999:29:21",
																			"nodeType": "YulIdentifier",
																			"src": "10999:29:21"
																		},
																		"nativeSrc": "10999:62:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10999:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10989:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "10989:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "10426:652:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10480:9:21",
														"nodeType": "YulTypedName",
														"src": "10480:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10491:7:21",
														"nodeType": "YulTypedName",
														"src": "10491:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10503:6:21",
														"nodeType": "YulTypedName",
														"src": "10503:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10511:6:21",
														"nodeType": "YulTypedName",
														"src": "10511:6:21",
														"type": ""
													}
												],
												"src": "10426:652:21"
											},
											{
												"body": {
													"nativeSrc": "11150:263:21",
													"nodeType": "YulBlock",
													"src": "11150:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "11196:83:21",
																"nodeType": "YulBlock",
																"src": "11196:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11198:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "11198:77:21"
																			},
																			"nativeSrc": "11198:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "11198:79:21"
																		},
																		"nativeSrc": "11198:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "11198:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11171:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11171:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11180:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11180:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11167:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11167:3:21"
																		},
																		"nativeSrc": "11167:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11167:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11192:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11163:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:21"
																},
																"nativeSrc": "11163:32:21",
																"nodeType": "YulFunctionCall",
																"src": "11163:32:21"
															},
															"nativeSrc": "11160:119:21",
															"nodeType": "YulIf",
															"src": "11160:119:21"
														},
														{
															"nativeSrc": "11289:117:21",
															"nodeType": "YulBlock",
															"src": "11289:117:21",
															"statements": [
																{
																	"nativeSrc": "11304:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11304:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11318:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11318:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11308:6:21",
																			"nodeType": "YulTypedName",
																			"src": "11308:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11333:63:21",
																	"nodeType": "YulAssignment",
																	"src": "11333:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11368:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "11368:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11379:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11379:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11364:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "11364:3:21"
																				},
																				"nativeSrc": "11364:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "11364:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11388:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "11388:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11343:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "11343:20:21"
																		},
																		"nativeSrc": "11343:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11343:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11333:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "11333:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11084:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11120:9:21",
														"nodeType": "YulTypedName",
														"src": "11120:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11131:7:21",
														"nodeType": "YulTypedName",
														"src": "11131:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11143:6:21",
														"nodeType": "YulTypedName",
														"src": "11143:6:21",
														"type": ""
													}
												],
												"src": "11084:329:21"
											},
											{
												"body": {
													"nativeSrc": "11501:66:21",
													"nodeType": "YulBlock",
													"src": "11501:66:21",
													"statements": [
														{
															"nativeSrc": "11511:50:21",
															"nodeType": "YulAssignment",
															"src": "11511:50:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11555:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "11555:5:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11524:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "11524:30:21"
																},
																"nativeSrc": "11524:37:21",
																"nodeType": "YulFunctionCall",
																"src": "11524:37:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11511:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "11511:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ITokensBridge_$2815_to_t_address",
												"nativeSrc": "11419:148:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11481:5:21",
														"nodeType": "YulTypedName",
														"src": "11481:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11491:9:21",
														"nodeType": "YulTypedName",
														"src": "11491:9:21",
														"type": ""
													}
												],
												"src": "11419:148:21"
											},
											{
												"body": {
													"nativeSrc": "11660:88:21",
													"nodeType": "YulBlock",
													"src": "11660:88:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11677:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "11677:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11735:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "11735:5:21"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ITokensBridge_$2815_to_t_address",
																			"nativeSrc": "11682:52:21",
																			"nodeType": "YulIdentifier",
																			"src": "11682:52:21"
																		},
																		"nativeSrc": "11682:59:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11682:59:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11670:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:21"
																},
																"nativeSrc": "11670:72:21",
																"nodeType": "YulFunctionCall",
																"src": "11670:72:21"
															},
															"nativeSrc": "11670:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "11670:72:21"
														}
													]
												},
												"name": "abi_encode_t_contract$_ITokensBridge_$2815_to_t_address_fromStack",
												"nativeSrc": "11573:175:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11648:5:21",
														"nodeType": "YulTypedName",
														"src": "11648:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11655:3:21",
														"nodeType": "YulTypedName",
														"src": "11655:3:21",
														"type": ""
													}
												],
												"src": "11573:175:21"
											},
											{
												"body": {
													"nativeSrc": "11874:146:21",
													"nodeType": "YulBlock",
													"src": "11874:146:21",
													"statements": [
														{
															"nativeSrc": "11884:26:21",
															"nodeType": "YulAssignment",
															"src": "11884:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11896:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "11896:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11907:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11907:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11892:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "11892:3:21"
																},
																"nativeSrc": "11892:18:21",
																"nodeType": "YulFunctionCall",
																"src": "11892:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11884:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "11884:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11986:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "11986:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11999:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "11999:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12010:1:21",
																				"nodeType": "YulLiteral",
																				"src": "12010:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11995:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:21"
																		},
																		"nativeSrc": "11995:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "11995:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ITokensBridge_$2815_to_t_address_fromStack",
																	"nativeSrc": "11920:65:21",
																	"nodeType": "YulIdentifier",
																	"src": "11920:65:21"
																},
																"nativeSrc": "11920:93:21",
																"nodeType": "YulFunctionCall",
																"src": "11920:93:21"
															},
															"nativeSrc": "11920:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "11920:93:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokensBridge_$2815__to_t_address__fromStack_reversed",
												"nativeSrc": "11754:266:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11846:9:21",
														"nodeType": "YulTypedName",
														"src": "11846:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11858:6:21",
														"nodeType": "YulTypedName",
														"src": "11858:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11869:4:21",
														"nodeType": "YulTypedName",
														"src": "11869:4:21",
														"type": ""
													}
												],
												"src": "11754:266:21"
											},
											{
												"body": {
													"nativeSrc": "12066:76:21",
													"nodeType": "YulBlock",
													"src": "12066:76:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "12120:16:21",
																"nodeType": "YulBlock",
																"src": "12120:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12129:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12129:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12132:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12132:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12122:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12122:6:21"
																			},
																			"nativeSrc": "12122:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12122:12:21"
																		},
																		"nativeSrc": "12122:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12122:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12089:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "12089:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12111:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "12111:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12096:14:21",
																					"nodeType": "YulIdentifier",
																					"src": "12096:14:21"
																				},
																				"nativeSrc": "12096:21:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12096:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12086:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "12086:2:21"
																		},
																		"nativeSrc": "12086:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12086:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12079:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12079:6:21"
																},
																"nativeSrc": "12079:40:21",
																"nodeType": "YulFunctionCall",
																"src": "12079:40:21"
															},
															"nativeSrc": "12076:60:21",
															"nodeType": "YulIf",
															"src": "12076:60:21"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12026:116:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12059:5:21",
														"nodeType": "YulTypedName",
														"src": "12059:5:21",
														"type": ""
													}
												],
												"src": "12026:116:21"
											},
											{
												"body": {
													"nativeSrc": "12197:84:21",
													"nodeType": "YulBlock",
													"src": "12197:84:21",
													"statements": [
														{
															"nativeSrc": "12207:29:21",
															"nodeType": "YulAssignment",
															"src": "12207:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12229:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "12229:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12216:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "12216:12:21"
																},
																"nativeSrc": "12216:20:21",
																"nodeType": "YulFunctionCall",
																"src": "12216:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12207:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "12207:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12269:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "12269:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12245:23:21",
																	"nodeType": "YulIdentifier",
																	"src": "12245:23:21"
																},
																"nativeSrc": "12245:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12245:30:21"
															},
															"nativeSrc": "12245:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "12245:30:21"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "12148:133:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12175:6:21",
														"nodeType": "YulTypedName",
														"src": "12175:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12183:3:21",
														"nodeType": "YulTypedName",
														"src": "12183:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12191:5:21",
														"nodeType": "YulTypedName",
														"src": "12191:5:21",
														"type": ""
													}
												],
												"src": "12148:133:21"
											},
											{
												"body": {
													"nativeSrc": "12367:388:21",
													"nodeType": "YulBlock",
													"src": "12367:388:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "12413:83:21",
																"nodeType": "YulBlock",
																"src": "12413:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12415:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "12415:77:21"
																			},
																			"nativeSrc": "12415:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12415:79:21"
																		},
																		"nativeSrc": "12415:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12415:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12388:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "12388:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12397:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12397:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12384:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12384:3:21"
																		},
																		"nativeSrc": "12384:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12384:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12409:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12409:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12380:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:21"
																},
																"nativeSrc": "12380:32:21",
																"nodeType": "YulFunctionCall",
																"src": "12380:32:21"
															},
															"nativeSrc": "12377:119:21",
															"nodeType": "YulIf",
															"src": "12377:119:21"
														},
														{
															"nativeSrc": "12506:117:21",
															"nodeType": "YulBlock",
															"src": "12506:117:21",
															"statements": [
																{
																	"nativeSrc": "12521:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12521:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12535:1:21",
																		"nodeType": "YulLiteral",
																		"src": "12535:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12525:6:21",
																			"nodeType": "YulTypedName",
																			"src": "12525:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12550:63:21",
																	"nodeType": "YulAssignment",
																	"src": "12550:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12585:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "12585:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12596:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "12596:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12581:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "12581:3:21"
																				},
																				"nativeSrc": "12581:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12581:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12605:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "12605:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12560:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "12560:20:21"
																		},
																		"nativeSrc": "12560:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12560:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12550:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "12550:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12633:115:21",
															"nodeType": "YulBlock",
															"src": "12633:115:21",
															"statements": [
																{
																	"nativeSrc": "12648:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12648:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12662:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12662:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12652:6:21",
																			"nodeType": "YulTypedName",
																			"src": "12652:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12678:60:21",
																	"nodeType": "YulAssignment",
																	"src": "12678:60:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12710:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "12710:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12721:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "12721:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12706:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "12706:3:21"
																				},
																				"nativeSrc": "12706:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12706:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12730:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "12730:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "12688:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "12688:17:21"
																		},
																		"nativeSrc": "12688:50:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12688:50:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12678:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "12678:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "12287:468:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12329:9:21",
														"nodeType": "YulTypedName",
														"src": "12329:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12340:7:21",
														"nodeType": "YulTypedName",
														"src": "12340:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12352:6:21",
														"nodeType": "YulTypedName",
														"src": "12352:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12360:6:21",
														"nodeType": "YulTypedName",
														"src": "12360:6:21",
														"type": ""
													}
												],
												"src": "12287:468:21"
											},
											{
												"body": {
													"nativeSrc": "12805:57:21",
													"nodeType": "YulBlock",
													"src": "12805:57:21",
													"statements": [
														{
															"nativeSrc": "12815:41:21",
															"nodeType": "YulAssignment",
															"src": "12815:41:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12830:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "12830:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12837:18:21",
																		"nodeType": "YulLiteral",
																		"src": "12837:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12826:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12826:3:21"
																},
																"nativeSrc": "12826:30:21",
																"nodeType": "YulFunctionCall",
																"src": "12826:30:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12815:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "12815:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "12761:101:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12787:5:21",
														"nodeType": "YulTypedName",
														"src": "12787:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12797:7:21",
														"nodeType": "YulTypedName",
														"src": "12797:7:21",
														"type": ""
													}
												],
												"src": "12761:101:21"
											},
											{
												"body": {
													"nativeSrc": "12910:78:21",
													"nodeType": "YulBlock",
													"src": "12910:78:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "12966:16:21",
																"nodeType": "YulBlock",
																"src": "12966:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12975:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12975:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12978:1:21",
																					"nodeType": "YulLiteral",
																					"src": "12978:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12968:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12968:6:21"
																			},
																			"nativeSrc": "12968:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "12968:12:21"
																		},
																		"nativeSrc": "12968:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "12968:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12933:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "12933:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12957:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "12957:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "12940:16:21",
																					"nodeType": "YulIdentifier",
																					"src": "12940:16:21"
																				},
																				"nativeSrc": "12940:23:21",
																				"nodeType": "YulFunctionCall",
																				"src": "12940:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12930:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "12930:2:21"
																		},
																		"nativeSrc": "12930:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12930:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12923:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12923:6:21"
																},
																"nativeSrc": "12923:42:21",
																"nodeType": "YulFunctionCall",
																"src": "12923:42:21"
															},
															"nativeSrc": "12920:62:21",
															"nodeType": "YulIf",
															"src": "12920:62:21"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "12868:120:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12903:5:21",
														"nodeType": "YulTypedName",
														"src": "12903:5:21",
														"type": ""
													}
												],
												"src": "12868:120:21"
											},
											{
												"body": {
													"nativeSrc": "13045:86:21",
													"nodeType": "YulBlock",
													"src": "13045:86:21",
													"statements": [
														{
															"nativeSrc": "13055:29:21",
															"nodeType": "YulAssignment",
															"src": "13055:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13077:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "13077:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13064:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "13064:12:21"
																},
																"nativeSrc": "13064:20:21",
																"nodeType": "YulFunctionCall",
																"src": "13064:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13055:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "13055:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13119:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "13119:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "13093:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "13093:25:21"
																},
																"nativeSrc": "13093:32:21",
																"nodeType": "YulFunctionCall",
																"src": "13093:32:21"
															},
															"nativeSrc": "13093:32:21",
															"nodeType": "YulExpressionStatement",
															"src": "13093:32:21"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "12994:137:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13023:6:21",
														"nodeType": "YulTypedName",
														"src": "13023:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13031:3:21",
														"nodeType": "YulTypedName",
														"src": "13031:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13039:5:21",
														"nodeType": "YulTypedName",
														"src": "13039:5:21",
														"type": ""
													}
												],
												"src": "12994:137:21"
											},
											{
												"body": {
													"nativeSrc": "13236:518:21",
													"nodeType": "YulBlock",
													"src": "13236:518:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "13282:83:21",
																"nodeType": "YulBlock",
																"src": "13282:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13284:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "13284:77:21"
																			},
																			"nativeSrc": "13284:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "13284:79:21"
																		},
																		"nativeSrc": "13284:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "13284:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13257:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "13257:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13266:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13266:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13253:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13253:3:21"
																		},
																		"nativeSrc": "13253:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13253:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13278:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13278:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13249:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:21"
																},
																"nativeSrc": "13249:32:21",
																"nodeType": "YulFunctionCall",
																"src": "13249:32:21"
															},
															"nativeSrc": "13246:119:21",
															"nodeType": "YulIf",
															"src": "13246:119:21"
														},
														{
															"nativeSrc": "13375:116:21",
															"nodeType": "YulBlock",
															"src": "13375:116:21",
															"statements": [
																{
																	"nativeSrc": "13390:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13390:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13404:1:21",
																		"nodeType": "YulLiteral",
																		"src": "13404:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13394:6:21",
																			"nodeType": "YulTypedName",
																			"src": "13394:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13419:62:21",
																	"nodeType": "YulAssignment",
																	"src": "13419:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13453:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "13453:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13464:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "13464:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13449:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "13449:3:21"
																				},
																				"nativeSrc": "13449:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "13449:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13473:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "13473:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "13429:19:21",
																			"nodeType": "YulIdentifier",
																			"src": "13429:19:21"
																		},
																		"nativeSrc": "13429:52:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13429:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13419:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "13419:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13501:118:21",
															"nodeType": "YulBlock",
															"src": "13501:118:21",
															"statements": [
																{
																	"nativeSrc": "13516:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13516:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13530:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13530:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13520:6:21",
																			"nodeType": "YulTypedName",
																			"src": "13520:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13546:63:21",
																	"nodeType": "YulAssignment",
																	"src": "13546:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13581:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "13581:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13592:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "13592:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13577:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "13577:3:21"
																				},
																				"nativeSrc": "13577:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "13577:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13601:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "13601:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13556:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "13556:20:21"
																		},
																		"nativeSrc": "13556:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13556:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13546:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "13546:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13629:118:21",
															"nodeType": "YulBlock",
															"src": "13629:118:21",
															"statements": [
																{
																	"nativeSrc": "13644:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13644:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13658:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13658:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13648:6:21",
																			"nodeType": "YulTypedName",
																			"src": "13648:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13674:63:21",
																	"nodeType": "YulAssignment",
																	"src": "13674:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13709:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "13709:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13720:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "13720:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13705:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "13705:3:21"
																				},
																				"nativeSrc": "13705:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "13705:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13729:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "13729:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13684:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "13684:20:21"
																		},
																		"nativeSrc": "13684:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13684:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13674:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "13674:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_addresst_uint256",
												"nativeSrc": "13137:617:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13190:9:21",
														"nodeType": "YulTypedName",
														"src": "13190:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13201:7:21",
														"nodeType": "YulTypedName",
														"src": "13201:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13213:6:21",
														"nodeType": "YulTypedName",
														"src": "13213:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13221:6:21",
														"nodeType": "YulTypedName",
														"src": "13221:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13229:6:21",
														"nodeType": "YulTypedName",
														"src": "13229:6:21",
														"type": ""
													}
												],
												"src": "13137:617:21"
											},
											{
												"body": {
													"nativeSrc": "13843:391:21",
													"nodeType": "YulBlock",
													"src": "13843:391:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "13889:83:21",
																"nodeType": "YulBlock",
																"src": "13889:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13891:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "13891:77:21"
																			},
																			"nativeSrc": "13891:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "13891:79:21"
																		},
																		"nativeSrc": "13891:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "13891:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13864:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "13864:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13860:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:21"
																		},
																		"nativeSrc": "13860:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13885:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13885:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13856:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:21"
																},
																"nativeSrc": "13856:32:21",
																"nodeType": "YulFunctionCall",
																"src": "13856:32:21"
															},
															"nativeSrc": "13853:119:21",
															"nodeType": "YulIf",
															"src": "13853:119:21"
														},
														{
															"nativeSrc": "13982:117:21",
															"nodeType": "YulBlock",
															"src": "13982:117:21",
															"statements": [
																{
																	"nativeSrc": "13997:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13997:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14011:1:21",
																		"nodeType": "YulLiteral",
																		"src": "14011:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14001:6:21",
																			"nodeType": "YulTypedName",
																			"src": "14001:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14026:63:21",
																	"nodeType": "YulAssignment",
																	"src": "14026:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14061:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "14061:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14072:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "14072:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14057:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "14057:3:21"
																				},
																				"nativeSrc": "14057:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "14057:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14081:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "14081:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14036:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "14036:20:21"
																		},
																		"nativeSrc": "14036:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14026:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "14026:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14109:118:21",
															"nodeType": "YulBlock",
															"src": "14109:118:21",
															"statements": [
																{
																	"nativeSrc": "14124:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14124:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14138:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14138:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14128:6:21",
																			"nodeType": "YulTypedName",
																			"src": "14128:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14154:63:21",
																	"nodeType": "YulAssignment",
																	"src": "14154:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14189:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "14189:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14200:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "14200:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14185:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "14185:3:21"
																				},
																				"nativeSrc": "14185:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "14185:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14209:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "14209:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14164:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "14164:20:21"
																		},
																		"nativeSrc": "14164:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14164:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14154:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "14154:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13760:474:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13805:9:21",
														"nodeType": "YulTypedName",
														"src": "13805:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13816:7:21",
														"nodeType": "YulTypedName",
														"src": "13816:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13828:6:21",
														"nodeType": "YulTypedName",
														"src": "13828:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13836:6:21",
														"nodeType": "YulTypedName",
														"src": "13836:6:21",
														"type": ""
													}
												],
												"src": "13760:474:21"
											},
											{
												"body": {
													"nativeSrc": "14307:241:21",
													"nodeType": "YulBlock",
													"src": "14307:241:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "14412:22:21",
																"nodeType": "YulBlock",
																"src": "14412:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14414:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "14414:16:21"
																			},
																			"nativeSrc": "14414:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "14414:18:21"
																		},
																		"nativeSrc": "14414:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "14414:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14384:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14384:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14392:18:21",
																		"nodeType": "YulLiteral",
																		"src": "14392:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14381:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "14381:2:21"
																},
																"nativeSrc": "14381:30:21",
																"nodeType": "YulFunctionCall",
																"src": "14381:30:21"
															},
															"nativeSrc": "14378:56:21",
															"nodeType": "YulIf",
															"src": "14378:56:21"
														},
														{
															"nativeSrc": "14444:37:21",
															"nodeType": "YulAssignment",
															"src": "14444:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14474:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14474:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "14452:21:21",
																	"nodeType": "YulIdentifier",
																	"src": "14452:21:21"
																},
																"nativeSrc": "14452:29:21",
																"nodeType": "YulFunctionCall",
																"src": "14452:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14444:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14444:4:21"
																}
															]
														},
														{
															"nativeSrc": "14518:23:21",
															"nodeType": "YulAssignment",
															"src": "14518:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "14530:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "14530:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14536:4:21",
																		"nodeType": "YulLiteral",
																		"src": "14536:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14526:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14526:3:21"
																},
																"nativeSrc": "14526:15:21",
																"nodeType": "YulFunctionCall",
																"src": "14526:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "14518:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14518:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "14240:308:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "14291:6:21",
														"nodeType": "YulTypedName",
														"src": "14291:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "14302:4:21",
														"nodeType": "YulTypedName",
														"src": "14302:4:21",
														"type": ""
													}
												],
												"src": "14240:308:21"
											},
											{
												"body": {
													"nativeSrc": "14638:341:21",
													"nodeType": "YulBlock",
													"src": "14638:341:21",
													"statements": [
														{
															"nativeSrc": "14648:75:21",
															"nodeType": "YulAssignment",
															"src": "14648:75:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14715:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "14715:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "14673:41:21",
																			"nodeType": "YulIdentifier",
																			"src": "14673:41:21"
																		},
																		"nativeSrc": "14673:49:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14673:49:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "14657:15:21",
																	"nodeType": "YulIdentifier",
																	"src": "14657:15:21"
																},
																"nativeSrc": "14657:66:21",
																"nodeType": "YulFunctionCall",
																"src": "14657:66:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "14648:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "14648:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14739:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "14739:5:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14746:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14746:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14732:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14732:6:21"
																},
																"nativeSrc": "14732:21:21",
																"nodeType": "YulFunctionCall",
																"src": "14732:21:21"
															},
															"nativeSrc": "14732:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "14732:21:21"
														},
														{
															"nativeSrc": "14762:27:21",
															"nodeType": "YulVariableDeclaration",
															"src": "14762:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14777:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "14777:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14784:4:21",
																		"nodeType": "YulLiteral",
																		"src": "14784:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14773:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14773:3:21"
																},
																"nativeSrc": "14773:16:21",
																"nodeType": "YulFunctionCall",
																"src": "14773:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "14766:3:21",
																	"nodeType": "YulTypedName",
																	"src": "14766:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14827:83:21",
																"nodeType": "YulBlock",
																"src": "14827:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "14829:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "14829:77:21"
																			},
																			"nativeSrc": "14829:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "14829:79:21"
																		},
																		"nativeSrc": "14829:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "14829:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "14808:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "14808:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14813:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "14813:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14804:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14804:3:21"
																		},
																		"nativeSrc": "14804:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14804:16:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14822:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "14822:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14801:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "14801:2:21"
																},
																"nativeSrc": "14801:25:21",
																"nodeType": "YulFunctionCall",
																"src": "14801:25:21"
															},
															"nativeSrc": "14798:112:21",
															"nodeType": "YulIf",
															"src": "14798:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14956:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "14956:3:21"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "14961:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "14961:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14966:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "14966:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "14919:36:21",
																	"nodeType": "YulIdentifier",
																	"src": "14919:36:21"
																},
																"nativeSrc": "14919:54:21",
																"nodeType": "YulFunctionCall",
																"src": "14919:54:21"
															},
															"nativeSrc": "14919:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "14919:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "14554:425:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14611:3:21",
														"nodeType": "YulTypedName",
														"src": "14611:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14616:6:21",
														"nodeType": "YulTypedName",
														"src": "14616:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14624:3:21",
														"nodeType": "YulTypedName",
														"src": "14624:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "14632:5:21",
														"nodeType": "YulTypedName",
														"src": "14632:5:21",
														"type": ""
													}
												],
												"src": "14554:425:21"
											},
											{
												"body": {
													"nativeSrc": "15061:278:21",
													"nodeType": "YulBlock",
													"src": "15061:278:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "15110:83:21",
																"nodeType": "YulBlock",
																"src": "15110:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15112:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "15112:77:21"
																			},
																			"nativeSrc": "15112:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15112:79:21"
																		},
																		"nativeSrc": "15112:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "15112:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15089:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "15089:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15097:4:21",
																						"nodeType": "YulLiteral",
																						"src": "15097:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15085:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "15085:3:21"
																				},
																				"nativeSrc": "15085:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "15085:17:21"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15104:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "15104:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15081:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "15081:3:21"
																		},
																		"nativeSrc": "15081:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15081:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15074:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "15074:6:21"
																},
																"nativeSrc": "15074:35:21",
																"nodeType": "YulFunctionCall",
																"src": "15074:35:21"
															},
															"nativeSrc": "15071:122:21",
															"nodeType": "YulIf",
															"src": "15071:122:21"
														},
														{
															"nativeSrc": "15202:34:21",
															"nodeType": "YulVariableDeclaration",
															"src": "15202:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15229:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "15229:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15216:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "15216:12:21"
																},
																"nativeSrc": "15216:20:21",
																"nodeType": "YulFunctionCall",
																"src": "15216:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15206:6:21",
																	"nodeType": "YulTypedName",
																	"src": "15206:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15245:88:21",
															"nodeType": "YulAssignment",
															"src": "15245:88:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15306:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "15306:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15314:4:21",
																				"nodeType": "YulLiteral",
																				"src": "15314:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15302:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "15302:3:21"
																		},
																		"nativeSrc": "15302:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15302:17:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15321:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "15321:6:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15329:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "15329:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "15254:47:21",
																	"nodeType": "YulIdentifier",
																	"src": "15254:47:21"
																},
																"nativeSrc": "15254:79:21",
																"nodeType": "YulFunctionCall",
																"src": "15254:79:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15245:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "15245:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "14999:340:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15039:6:21",
														"nodeType": "YulTypedName",
														"src": "15039:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15047:3:21",
														"nodeType": "YulTypedName",
														"src": "15047:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15055:5:21",
														"nodeType": "YulTypedName",
														"src": "15055:5:21",
														"type": ""
													}
												],
												"src": "14999:340:21"
											},
											{
												"body": {
													"nativeSrc": "15533:1375:21",
													"nodeType": "YulBlock",
													"src": "15533:1375:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "15580:83:21",
																"nodeType": "YulBlock",
																"src": "15580:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15582:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "15582:77:21"
																			},
																			"nativeSrc": "15582:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "15582:79:21"
																		},
																		"nativeSrc": "15582:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "15582:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15554:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "15554:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15563:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "15563:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15550:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "15550:3:21"
																		},
																		"nativeSrc": "15550:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15550:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:3:21",
																		"nodeType": "YulLiteral",
																		"src": "15575:3:21",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15546:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "15546:3:21"
																},
																"nativeSrc": "15546:33:21",
																"nodeType": "YulFunctionCall",
																"src": "15546:33:21"
															},
															"nativeSrc": "15543:120:21",
															"nodeType": "YulIf",
															"src": "15543:120:21"
														},
														{
															"nativeSrc": "15673:287:21",
															"nodeType": "YulBlock",
															"src": "15673:287:21",
															"statements": [
																{
																	"nativeSrc": "15688:45:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15688:45:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15719:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "15719:9:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15730:1:21",
																						"nodeType": "YulLiteral",
																						"src": "15730:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15715:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "15715:3:21"
																				},
																				"nativeSrc": "15715:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "15715:17:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15702:12:21",
																			"nodeType": "YulIdentifier",
																			"src": "15702:12:21"
																		},
																		"nativeSrc": "15702:31:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15702:31:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15692:6:21",
																			"nodeType": "YulTypedName",
																			"src": "15692:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "15780:83:21",
																		"nodeType": "YulBlock",
																		"src": "15780:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "15782:77:21",
																						"nodeType": "YulIdentifier",
																						"src": "15782:77:21"
																					},
																					"nativeSrc": "15782:79:21",
																					"nodeType": "YulFunctionCall",
																					"src": "15782:79:21"
																				},
																				"nativeSrc": "15782:79:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "15782:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15752:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "15752:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15760:18:21",
																				"nodeType": "YulLiteral",
																				"src": "15760:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "15749:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "15749:2:21"
																		},
																		"nativeSrc": "15749:30:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15749:30:21"
																	},
																	"nativeSrc": "15746:117:21",
																	"nodeType": "YulIf",
																	"src": "15746:117:21"
																},
																{
																	"nativeSrc": "15877:73:21",
																	"nodeType": "YulAssignment",
																	"src": "15877:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15922:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "15922:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15933:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "15933:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15918:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "15918:3:21"
																				},
																				"nativeSrc": "15918:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "15918:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15942:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "15942:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "15887:30:21",
																			"nodeType": "YulIdentifier",
																			"src": "15887:30:21"
																		},
																		"nativeSrc": "15887:63:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15887:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15877:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "15877:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15970:288:21",
															"nodeType": "YulBlock",
															"src": "15970:288:21",
															"statements": [
																{
																	"nativeSrc": "15985:46:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15985:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16016:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16016:9:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16027:2:21",
																						"nodeType": "YulLiteral",
																						"src": "16027:2:21",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16012:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16012:3:21"
																				},
																				"nativeSrc": "16012:18:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16012:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15999:12:21",
																			"nodeType": "YulIdentifier",
																			"src": "15999:12:21"
																		},
																		"nativeSrc": "15999:32:21",
																		"nodeType": "YulFunctionCall",
																		"src": "15999:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15989:6:21",
																			"nodeType": "YulTypedName",
																			"src": "15989:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16078:83:21",
																		"nodeType": "YulBlock",
																		"src": "16078:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16080:77:21",
																						"nodeType": "YulIdentifier",
																						"src": "16080:77:21"
																					},
																					"nativeSrc": "16080:79:21",
																					"nodeType": "YulFunctionCall",
																					"src": "16080:79:21"
																				},
																				"nativeSrc": "16080:79:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "16080:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16050:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "16050:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16058:18:21",
																				"nodeType": "YulLiteral",
																				"src": "16058:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16047:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "16047:2:21"
																		},
																		"nativeSrc": "16047:30:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16047:30:21"
																	},
																	"nativeSrc": "16044:117:21",
																	"nodeType": "YulIf",
																	"src": "16044:117:21"
																},
																{
																	"nativeSrc": "16175:73:21",
																	"nodeType": "YulAssignment",
																	"src": "16175:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16220:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16220:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16231:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16231:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16216:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16216:3:21"
																				},
																				"nativeSrc": "16216:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16216:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16240:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16240:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "16185:30:21",
																			"nodeType": "YulIdentifier",
																			"src": "16185:30:21"
																		},
																		"nativeSrc": "16185:63:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16185:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16175:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16175:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16268:118:21",
															"nodeType": "YulBlock",
															"src": "16268:118:21",
															"statements": [
																{
																	"nativeSrc": "16283:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16283:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16297:2:21",
																		"nodeType": "YulLiteral",
																		"src": "16297:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16287:6:21",
																			"nodeType": "YulTypedName",
																			"src": "16287:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16313:63:21",
																	"nodeType": "YulAssignment",
																	"src": "16313:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16348:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16348:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16359:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16359:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16344:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16344:3:21"
																				},
																				"nativeSrc": "16344:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16344:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16368:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16368:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16323:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "16323:20:21"
																		},
																		"nativeSrc": "16323:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16323:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16313:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16313:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16396:118:21",
															"nodeType": "YulBlock",
															"src": "16396:118:21",
															"statements": [
																{
																	"nativeSrc": "16411:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16411:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16425:2:21",
																		"nodeType": "YulLiteral",
																		"src": "16425:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16415:6:21",
																			"nodeType": "YulTypedName",
																			"src": "16415:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16441:63:21",
																	"nodeType": "YulAssignment",
																	"src": "16441:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16476:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16476:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16487:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16487:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16472:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16472:3:21"
																				},
																				"nativeSrc": "16472:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16472:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16496:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16496:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16451:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "16451:20:21"
																		},
																		"nativeSrc": "16451:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16451:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16441:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16441:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16524:119:21",
															"nodeType": "YulBlock",
															"src": "16524:119:21",
															"statements": [
																{
																	"nativeSrc": "16539:17:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16539:17:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16553:3:21",
																		"nodeType": "YulLiteral",
																		"src": "16553:3:21",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16543:6:21",
																			"nodeType": "YulTypedName",
																			"src": "16543:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16570:63:21",
																	"nodeType": "YulAssignment",
																	"src": "16570:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16605:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16605:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16616:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16616:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16601:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16601:3:21"
																				},
																				"nativeSrc": "16601:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16601:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16625:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16625:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16580:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "16580:20:21"
																		},
																		"nativeSrc": "16580:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16580:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16570:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16570:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16653:119:21",
															"nodeType": "YulBlock",
															"src": "16653:119:21",
															"statements": [
																{
																	"nativeSrc": "16668:17:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16668:17:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16682:3:21",
																		"nodeType": "YulLiteral",
																		"src": "16682:3:21",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16672:6:21",
																			"nodeType": "YulTypedName",
																			"src": "16672:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16699:63:21",
																	"nodeType": "YulAssignment",
																	"src": "16699:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16734:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16745:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16730:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:21"
																				},
																				"nativeSrc": "16730:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16754:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16709:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "16709:20:21"
																		},
																		"nativeSrc": "16709:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16709:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "16699:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16699:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16782:119:21",
															"nodeType": "YulBlock",
															"src": "16782:119:21",
															"statements": [
																{
																	"nativeSrc": "16797:17:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16797:17:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16811:3:21",
																		"nodeType": "YulLiteral",
																		"src": "16811:3:21",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16801:6:21",
																			"nodeType": "YulTypedName",
																			"src": "16801:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16828:63:21",
																	"nodeType": "YulAssignment",
																	"src": "16828:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16863:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "16863:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16874:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "16874:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16859:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "16859:3:21"
																				},
																				"nativeSrc": "16859:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "16859:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16883:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "16883:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16838:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "16838:20:21"
																		},
																		"nativeSrc": "16838:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "16838:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "16828:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "16828:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_address",
												"nativeSrc": "15345:1563:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15455:9:21",
														"nodeType": "YulTypedName",
														"src": "15455:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15466:7:21",
														"nodeType": "YulTypedName",
														"src": "15466:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15478:6:21",
														"nodeType": "YulTypedName",
														"src": "15478:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15486:6:21",
														"nodeType": "YulTypedName",
														"src": "15486:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15494:6:21",
														"nodeType": "YulTypedName",
														"src": "15494:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15502:6:21",
														"nodeType": "YulTypedName",
														"src": "15502:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15510:6:21",
														"nodeType": "YulTypedName",
														"src": "15510:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15518:6:21",
														"nodeType": "YulTypedName",
														"src": "15518:6:21",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "15526:6:21",
														"nodeType": "YulTypedName",
														"src": "15526:6:21",
														"type": ""
													}
												],
												"src": "15345:1563:21"
											},
											{
												"body": {
													"nativeSrc": "16942:152:21",
													"nodeType": "YulBlock",
													"src": "16942:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16959:1:21",
																		"nodeType": "YulLiteral",
																		"src": "16959:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16962:77:21",
																		"nodeType": "YulLiteral",
																		"src": "16962:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16952:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "16952:6:21"
																},
																"nativeSrc": "16952:88:21",
																"nodeType": "YulFunctionCall",
																"src": "16952:88:21"
															},
															"nativeSrc": "16952:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "16952:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17056:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17056:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17059:4:21",
																		"nodeType": "YulLiteral",
																		"src": "17059:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17049:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17049:6:21"
																},
																"nativeSrc": "17049:15:21",
																"nodeType": "YulFunctionCall",
																"src": "17049:15:21"
															},
															"nativeSrc": "17049:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "17049:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17080:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17080:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17083:4:21",
																		"nodeType": "YulLiteral",
																		"src": "17083:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17073:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17073:6:21"
																},
																"nativeSrc": "17073:15:21",
																"nodeType": "YulFunctionCall",
																"src": "17073:15:21"
															},
															"nativeSrc": "17073:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "17073:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16914:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "16914:180:21"
											},
											{
												"body": {
													"nativeSrc": "17144:147:21",
													"nodeType": "YulBlock",
													"src": "17144:147:21",
													"statements": [
														{
															"nativeSrc": "17154:25:21",
															"nodeType": "YulAssignment",
															"src": "17154:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17177:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "17177:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17159:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "17159:17:21"
																},
																"nativeSrc": "17159:20:21",
																"nodeType": "YulFunctionCall",
																"src": "17159:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17154:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "17154:1:21"
																}
															]
														},
														{
															"nativeSrc": "17188:25:21",
															"nodeType": "YulAssignment",
															"src": "17188:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17211:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "17211:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17193:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "17193:17:21"
																},
																"nativeSrc": "17193:20:21",
																"nodeType": "YulFunctionCall",
																"src": "17193:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17188:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "17188:1:21"
																}
															]
														},
														{
															"nativeSrc": "17222:16:21",
															"nodeType": "YulAssignment",
															"src": "17222:16:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17233:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "17233:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17236:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "17236:1:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17229:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17229:3:21"
																},
																"nativeSrc": "17229:9:21",
																"nodeType": "YulFunctionCall",
																"src": "17229:9:21"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17222:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17222:3:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17262:22:21",
																"nodeType": "YulBlock",
																"src": "17262:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17264:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "17264:16:21"
																			},
																			"nativeSrc": "17264:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "17264:18:21"
																		},
																		"nativeSrc": "17264:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "17264:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17254:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "17254:1:21"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17257:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "17257:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17251:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "17251:2:21"
																},
																"nativeSrc": "17251:10:21",
																"nodeType": "YulFunctionCall",
																"src": "17251:10:21"
															},
															"nativeSrc": "17248:36:21",
															"nodeType": "YulIf",
															"src": "17248:36:21"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17100:191:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17131:1:21",
														"nodeType": "YulTypedName",
														"src": "17131:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17134:1:21",
														"nodeType": "YulTypedName",
														"src": "17134:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17140:3:21",
														"nodeType": "YulTypedName",
														"src": "17140:3:21",
														"type": ""
													}
												],
												"src": "17100:191:21"
											},
											{
												"body": {
													"nativeSrc": "17325:152:21",
													"nodeType": "YulBlock",
													"src": "17325:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17342:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17342:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17345:77:21",
																		"nodeType": "YulLiteral",
																		"src": "17345:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17335:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17335:6:21"
																},
																"nativeSrc": "17335:88:21",
																"nodeType": "YulFunctionCall",
																"src": "17335:88:21"
															},
															"nativeSrc": "17335:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "17335:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17439:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17439:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17442:4:21",
																		"nodeType": "YulLiteral",
																		"src": "17442:4:21",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17432:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17432:6:21"
																},
																"nativeSrc": "17432:15:21",
																"nodeType": "YulFunctionCall",
																"src": "17432:15:21"
															},
															"nativeSrc": "17432:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "17432:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17463:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17463:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17466:4:21",
																		"nodeType": "YulLiteral",
																		"src": "17466:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17456:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17456:6:21"
																},
																"nativeSrc": "17456:15:21",
																"nodeType": "YulFunctionCall",
																"src": "17456:15:21"
															},
															"nativeSrc": "17456:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "17456:15:21"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17297:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "17297:180:21"
											},
											{
												"body": {
													"nativeSrc": "17534:269:21",
													"nodeType": "YulBlock",
													"src": "17534:269:21",
													"statements": [
														{
															"nativeSrc": "17544:22:21",
															"nodeType": "YulAssignment",
															"src": "17544:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17558:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "17558:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17564:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17564:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17554:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17554:3:21"
																},
																"nativeSrc": "17554:12:21",
																"nodeType": "YulFunctionCall",
																"src": "17554:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17544:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17544:6:21"
																}
															]
														},
														{
															"nativeSrc": "17575:38:21",
															"nodeType": "YulVariableDeclaration",
															"src": "17575:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17605:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "17605:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17611:1:21",
																		"nodeType": "YulLiteral",
																		"src": "17611:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17601:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "17601:3:21"
																},
																"nativeSrc": "17601:12:21",
																"nodeType": "YulFunctionCall",
																"src": "17601:12:21"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "17579:18:21",
																	"nodeType": "YulTypedName",
																	"src": "17579:18:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17652:51:21",
																"nodeType": "YulBlock",
																"src": "17652:51:21",
																"statements": [
																	{
																		"nativeSrc": "17666:27:21",
																		"nodeType": "YulAssignment",
																		"src": "17666:27:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17680:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "17680:6:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17688:4:21",
																					"nodeType": "YulLiteral",
																					"src": "17688:4:21",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17676:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "17676:3:21"
																			},
																			"nativeSrc": "17676:17:21",
																			"nodeType": "YulFunctionCall",
																			"src": "17676:17:21"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17666:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "17666:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17632:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "17632:18:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17625:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17625:6:21"
																},
																"nativeSrc": "17625:26:21",
																"nodeType": "YulFunctionCall",
																"src": "17625:26:21"
															},
															"nativeSrc": "17622:81:21",
															"nodeType": "YulIf",
															"src": "17622:81:21"
														},
														{
															"body": {
																"nativeSrc": "17755:42:21",
																"nodeType": "YulBlock",
																"src": "17755:42:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "17769:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "17769:16:21"
																			},
																			"nativeSrc": "17769:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "17769:18:21"
																		},
																		"nativeSrc": "17769:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "17769:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17719:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "17719:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17742:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "17742:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17750:2:21",
																				"nodeType": "YulLiteral",
																				"src": "17750:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17739:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "17739:2:21"
																		},
																		"nativeSrc": "17739:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "17739:14:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17716:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "17716:2:21"
																},
																"nativeSrc": "17716:38:21",
																"nodeType": "YulFunctionCall",
																"src": "17716:38:21"
															},
															"nativeSrc": "17713:84:21",
															"nodeType": "YulIf",
															"src": "17713:84:21"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "17483:320:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17518:4:21",
														"nodeType": "YulTypedName",
														"src": "17518:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17527:6:21",
														"nodeType": "YulTypedName",
														"src": "17527:6:21",
														"type": ""
													}
												],
												"src": "17483:320:21"
											},
											{
												"body": {
													"nativeSrc": "17915:68:21",
													"nodeType": "YulBlock",
													"src": "17915:68:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17937:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "17937:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17945:1:21",
																				"nodeType": "YulLiteral",
																				"src": "17945:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17933:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "17933:3:21"
																		},
																		"nativeSrc": "17933:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "17933:14:21"
																	},
																	{
																		"hexValue": "5265636569766572206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "17949:26:21",
																		"nodeType": "YulLiteral",
																		"src": "17949:26:21",
																		"type": "",
																		"value": "Receiver not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17926:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "17926:6:21"
																},
																"nativeSrc": "17926:50:21",
																"nodeType": "YulFunctionCall",
																"src": "17926:50:21"
															},
															"nativeSrc": "17926:50:21",
															"nodeType": "YulExpressionStatement",
															"src": "17926:50:21"
														}
													]
												},
												"name": "store_literal_in_memory_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
												"nativeSrc": "17809:174:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17907:6:21",
														"nodeType": "YulTypedName",
														"src": "17907:6:21",
														"type": ""
													}
												],
												"src": "17809:174:21"
											},
											{
												"body": {
													"nativeSrc": "18135:220:21",
													"nodeType": "YulBlock",
													"src": "18135:220:21",
													"statements": [
														{
															"nativeSrc": "18145:74:21",
															"nodeType": "YulAssignment",
															"src": "18145:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18211:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "18211:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18216:2:21",
																		"nodeType": "YulLiteral",
																		"src": "18216:2:21",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18152:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "18152:58:21"
																},
																"nativeSrc": "18152:67:21",
																"nodeType": "YulFunctionCall",
																"src": "18152:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18145:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "18145:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18317:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "18317:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
																	"nativeSrc": "18228:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "18228:88:21"
																},
																"nativeSrc": "18228:93:21",
																"nodeType": "YulFunctionCall",
																"src": "18228:93:21"
															},
															"nativeSrc": "18228:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "18228:93:21"
														},
														{
															"nativeSrc": "18330:19:21",
															"nodeType": "YulAssignment",
															"src": "18330:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18341:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "18341:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18346:2:21",
																		"nodeType": "YulLiteral",
																		"src": "18346:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18337:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "18337:3:21"
																},
																"nativeSrc": "18337:12:21",
																"nodeType": "YulFunctionCall",
																"src": "18337:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18330:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "18330:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17989:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18123:3:21",
														"nodeType": "YulTypedName",
														"src": "18123:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18131:3:21",
														"nodeType": "YulTypedName",
														"src": "18131:3:21",
														"type": ""
													}
												],
												"src": "17989:366:21"
											},
											{
												"body": {
													"nativeSrc": "18532:248:21",
													"nodeType": "YulBlock",
													"src": "18532:248:21",
													"statements": [
														{
															"nativeSrc": "18542:26:21",
															"nodeType": "YulAssignment",
															"src": "18542:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18554:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "18554:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18565:2:21",
																		"nodeType": "YulLiteral",
																		"src": "18565:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18550:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "18550:3:21"
																},
																"nativeSrc": "18550:18:21",
																"nodeType": "YulFunctionCall",
																"src": "18550:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18542:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "18542:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18589:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "18589:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18600:1:21",
																				"nodeType": "YulLiteral",
																				"src": "18600:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18585:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "18585:3:21"
																		},
																		"nativeSrc": "18585:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "18585:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18608:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "18608:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18614:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "18614:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18604:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "18604:3:21"
																		},
																		"nativeSrc": "18604:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "18604:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18578:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "18578:6:21"
																},
																"nativeSrc": "18578:47:21",
																"nodeType": "YulFunctionCall",
																"src": "18578:47:21"
															},
															"nativeSrc": "18578:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "18578:47:21"
														},
														{
															"nativeSrc": "18634:139:21",
															"nodeType": "YulAssignment",
															"src": "18634:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18768:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "18768:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18642:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "18642:124:21"
																},
																"nativeSrc": "18642:131:21",
																"nodeType": "YulFunctionCall",
																"src": "18642:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18634:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "18634:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18361:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18512:9:21",
														"nodeType": "YulTypedName",
														"src": "18512:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18527:4:21",
														"nodeType": "YulTypedName",
														"src": "18527:4:21",
														"type": ""
													}
												],
												"src": "18361:419:21"
											},
											{
												"body": {
													"nativeSrc": "18831:149:21",
													"nodeType": "YulBlock",
													"src": "18831:149:21",
													"statements": [
														{
															"nativeSrc": "18841:25:21",
															"nodeType": "YulAssignment",
															"src": "18841:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18864:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "18864:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18846:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "18846:17:21"
																},
																"nativeSrc": "18846:20:21",
																"nodeType": "YulFunctionCall",
																"src": "18846:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18841:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "18841:1:21"
																}
															]
														},
														{
															"nativeSrc": "18875:25:21",
															"nodeType": "YulAssignment",
															"src": "18875:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18898:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "18898:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18880:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "18880:17:21"
																},
																"nativeSrc": "18880:20:21",
																"nodeType": "YulFunctionCall",
																"src": "18880:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18875:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "18875:1:21"
																}
															]
														},
														{
															"nativeSrc": "18909:17:21",
															"nodeType": "YulAssignment",
															"src": "18909:17:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18921:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "18921:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18924:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "18924:1:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18917:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "18917:3:21"
																},
																"nativeSrc": "18917:9:21",
																"nodeType": "YulFunctionCall",
																"src": "18917:9:21"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18909:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "18909:4:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18951:22:21",
																"nodeType": "YulBlock",
																"src": "18951:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18953:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "18953:16:21"
																			},
																			"nativeSrc": "18953:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "18953:18:21"
																		},
																		"nativeSrc": "18953:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "18953:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18942:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "18942:4:21"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18948:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "18948:1:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18939:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "18939:2:21"
																},
																"nativeSrc": "18939:11:21",
																"nodeType": "YulFunctionCall",
																"src": "18939:11:21"
															},
															"nativeSrc": "18936:37:21",
															"nodeType": "YulIf",
															"src": "18936:37:21"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18786:194:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18817:1:21",
														"nodeType": "YulTypedName",
														"src": "18817:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18820:1:21",
														"nodeType": "YulTypedName",
														"src": "18820:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18826:4:21",
														"nodeType": "YulTypedName",
														"src": "18826:4:21",
														"type": ""
													}
												],
												"src": "18786:194:21"
											},
											{
												"body": {
													"nativeSrc": "19092:65:21",
													"nodeType": "YulBlock",
													"src": "19092:65:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19114:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "19114:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19122:1:21",
																				"nodeType": "YulLiteral",
																				"src": "19122:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19110:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "19110:3:21"
																		},
																		"nativeSrc": "19110:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "19110:14:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "19126:23:21",
																		"nodeType": "YulLiteral",
																		"src": "19126:23:21",
																		"type": "",
																		"value": "Insufficient unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19103:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "19103:6:21"
																},
																"nativeSrc": "19103:47:21",
																"nodeType": "YulFunctionCall",
																"src": "19103:47:21"
															},
															"nativeSrc": "19103:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "19103:47:21"
														}
													]
												},
												"name": "store_literal_in_memory_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
												"nativeSrc": "18986:171:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19084:6:21",
														"nodeType": "YulTypedName",
														"src": "19084:6:21",
														"type": ""
													}
												],
												"src": "18986:171:21"
											},
											{
												"body": {
													"nativeSrc": "19309:220:21",
													"nodeType": "YulBlock",
													"src": "19309:220:21",
													"statements": [
														{
															"nativeSrc": "19319:74:21",
															"nodeType": "YulAssignment",
															"src": "19319:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19385:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "19385:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19390:2:21",
																		"nodeType": "YulLiteral",
																		"src": "19390:2:21",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19326:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "19326:58:21"
																},
																"nativeSrc": "19326:67:21",
																"nodeType": "YulFunctionCall",
																"src": "19326:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19319:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "19319:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19491:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "19491:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																	"nativeSrc": "19402:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "19402:88:21"
																},
																"nativeSrc": "19402:93:21",
																"nodeType": "YulFunctionCall",
																"src": "19402:93:21"
															},
															"nativeSrc": "19402:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "19402:93:21"
														},
														{
															"nativeSrc": "19504:19:21",
															"nodeType": "YulAssignment",
															"src": "19504:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19515:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "19515:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19520:2:21",
																		"nodeType": "YulLiteral",
																		"src": "19520:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19511:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "19511:3:21"
																},
																"nativeSrc": "19511:12:21",
																"nodeType": "YulFunctionCall",
																"src": "19511:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19504:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "19504:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19163:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19297:3:21",
														"nodeType": "YulTypedName",
														"src": "19297:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19305:3:21",
														"nodeType": "YulTypedName",
														"src": "19305:3:21",
														"type": ""
													}
												],
												"src": "19163:366:21"
											},
											{
												"body": {
													"nativeSrc": "19706:248:21",
													"nodeType": "YulBlock",
													"src": "19706:248:21",
													"statements": [
														{
															"nativeSrc": "19716:26:21",
															"nodeType": "YulAssignment",
															"src": "19716:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19728:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "19728:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19739:2:21",
																		"nodeType": "YulLiteral",
																		"src": "19739:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19724:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "19724:3:21"
																},
																"nativeSrc": "19724:18:21",
																"nodeType": "YulFunctionCall",
																"src": "19724:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19716:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "19716:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19763:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "19763:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19774:1:21",
																				"nodeType": "YulLiteral",
																				"src": "19774:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19759:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "19759:3:21"
																		},
																		"nativeSrc": "19759:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "19759:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19782:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "19782:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19788:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "19788:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19778:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "19778:3:21"
																		},
																		"nativeSrc": "19778:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "19778:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19752:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "19752:6:21"
																},
																"nativeSrc": "19752:47:21",
																"nodeType": "YulFunctionCall",
																"src": "19752:47:21"
															},
															"nativeSrc": "19752:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "19752:47:21"
														},
														{
															"nativeSrc": "19808:139:21",
															"nodeType": "YulAssignment",
															"src": "19808:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19942:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "19942:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19816:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "19816:124:21"
																},
																"nativeSrc": "19816:131:21",
																"nodeType": "YulFunctionCall",
																"src": "19816:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19808:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "19808:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19535:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19686:9:21",
														"nodeType": "YulTypedName",
														"src": "19686:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19701:4:21",
														"nodeType": "YulTypedName",
														"src": "19701:4:21",
														"type": ""
													}
												],
												"src": "19535:419:21"
											},
											{
												"body": {
													"nativeSrc": "20066:117:21",
													"nodeType": "YulBlock",
													"src": "20066:117:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20088:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "20088:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20096:1:21",
																				"nodeType": "YulLiteral",
																				"src": "20096:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20084:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "20084:3:21"
																		},
																		"nativeSrc": "20084:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "20084:14:21"
																	},
																	{
																		"hexValue": "43726f73732d636861696e207265636569766572206e6f742077686974656c69",
																		"kind": "string",
																		"nativeSrc": "20100:34:21",
																		"nodeType": "YulLiteral",
																		"src": "20100:34:21",
																		"type": "",
																		"value": "Cross-chain receiver not whiteli"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20077:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "20077:6:21"
																},
																"nativeSrc": "20077:58:21",
																"nodeType": "YulFunctionCall",
																"src": "20077:58:21"
															},
															"nativeSrc": "20077:58:21",
															"nodeType": "YulExpressionStatement",
															"src": "20077:58:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20156:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "20156:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20164:2:21",
																				"nodeType": "YulLiteral",
																				"src": "20164:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20152:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "20152:3:21"
																		},
																		"nativeSrc": "20152:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "20152:15:21"
																	},
																	{
																		"hexValue": "73746564",
																		"kind": "string",
																		"nativeSrc": "20169:6:21",
																		"nodeType": "YulLiteral",
																		"src": "20169:6:21",
																		"type": "",
																		"value": "sted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20145:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "20145:6:21"
																},
																"nativeSrc": "20145:31:21",
																"nodeType": "YulFunctionCall",
																"src": "20145:31:21"
															},
															"nativeSrc": "20145:31:21",
															"nodeType": "YulExpressionStatement",
															"src": "20145:31:21"
														}
													]
												},
												"name": "store_literal_in_memory_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48",
												"nativeSrc": "19960:223:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20058:6:21",
														"nodeType": "YulTypedName",
														"src": "20058:6:21",
														"type": ""
													}
												],
												"src": "19960:223:21"
											},
											{
												"body": {
													"nativeSrc": "20335:220:21",
													"nodeType": "YulBlock",
													"src": "20335:220:21",
													"statements": [
														{
															"nativeSrc": "20345:74:21",
															"nodeType": "YulAssignment",
															"src": "20345:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20411:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "20411:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20416:2:21",
																		"nodeType": "YulLiteral",
																		"src": "20416:2:21",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20352:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "20352:58:21"
																},
																"nativeSrc": "20352:67:21",
																"nodeType": "YulFunctionCall",
																"src": "20352:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20345:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "20345:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20517:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "20517:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48",
																	"nativeSrc": "20428:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "20428:88:21"
																},
																"nativeSrc": "20428:93:21",
																"nodeType": "YulFunctionCall",
																"src": "20428:93:21"
															},
															"nativeSrc": "20428:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "20428:93:21"
														},
														{
															"nativeSrc": "20530:19:21",
															"nodeType": "YulAssignment",
															"src": "20530:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20541:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "20541:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20546:2:21",
																		"nodeType": "YulLiteral",
																		"src": "20546:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20537:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "20537:3:21"
																},
																"nativeSrc": "20537:12:21",
																"nodeType": "YulFunctionCall",
																"src": "20537:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20530:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "20530:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20189:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20323:3:21",
														"nodeType": "YulTypedName",
														"src": "20323:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20331:3:21",
														"nodeType": "YulTypedName",
														"src": "20331:3:21",
														"type": ""
													}
												],
												"src": "20189:366:21"
											},
											{
												"body": {
													"nativeSrc": "20732:248:21",
													"nodeType": "YulBlock",
													"src": "20732:248:21",
													"statements": [
														{
															"nativeSrc": "20742:26:21",
															"nodeType": "YulAssignment",
															"src": "20742:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20754:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "20754:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20765:2:21",
																		"nodeType": "YulLiteral",
																		"src": "20765:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20750:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "20750:3:21"
																},
																"nativeSrc": "20750:18:21",
																"nodeType": "YulFunctionCall",
																"src": "20750:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20742:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "20742:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20789:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "20789:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20800:1:21",
																				"nodeType": "YulLiteral",
																				"src": "20800:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20785:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "20785:3:21"
																		},
																		"nativeSrc": "20785:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "20785:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20808:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "20808:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20814:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "20814:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20804:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "20804:3:21"
																		},
																		"nativeSrc": "20804:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "20804:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20778:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "20778:6:21"
																},
																"nativeSrc": "20778:47:21",
																"nodeType": "YulFunctionCall",
																"src": "20778:47:21"
															},
															"nativeSrc": "20778:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "20778:47:21"
														},
														{
															"nativeSrc": "20834:139:21",
															"nodeType": "YulAssignment",
															"src": "20834:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20968:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "20968:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20842:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "20842:124:21"
																},
																"nativeSrc": "20842:131:21",
																"nodeType": "YulFunctionCall",
																"src": "20842:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20834:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "20834:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20561:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20712:9:21",
														"nodeType": "YulTypedName",
														"src": "20712:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20727:4:21",
														"nodeType": "YulTypedName",
														"src": "20727:4:21",
														"type": ""
													}
												],
												"src": "20561:419:21"
											},
											{
												"body": {
													"nativeSrc": "21049:52:21",
													"nodeType": "YulBlock",
													"src": "21049:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21066:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "21066:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21088:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "21088:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "21071:16:21",
																			"nodeType": "YulIdentifier",
																			"src": "21071:16:21"
																		},
																		"nativeSrc": "21071:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21071:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21059:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "21059:6:21"
																},
																"nativeSrc": "21059:36:21",
																"nodeType": "YulFunctionCall",
																"src": "21059:36:21"
															},
															"nativeSrc": "21059:36:21",
															"nodeType": "YulExpressionStatement",
															"src": "21059:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "20986:115:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21037:5:21",
														"nodeType": "YulTypedName",
														"src": "21037:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21044:3:21",
														"nodeType": "YulTypedName",
														"src": "21044:3:21",
														"type": ""
													}
												],
												"src": "20986:115:21"
											},
											{
												"body": {
													"nativeSrc": "21172:53:21",
													"nodeType": "YulBlock",
													"src": "21172:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21189:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "21189:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21212:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "21212:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "21194:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "21194:17:21"
																		},
																		"nativeSrc": "21194:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21194:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21182:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "21182:6:21"
																},
																"nativeSrc": "21182:37:21",
																"nodeType": "YulFunctionCall",
																"src": "21182:37:21"
															},
															"nativeSrc": "21182:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "21182:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "21107:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21160:5:21",
														"nodeType": "YulTypedName",
														"src": "21160:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21167:3:21",
														"nodeType": "YulTypedName",
														"src": "21167:3:21",
														"type": ""
													}
												],
												"src": "21107:118:21"
											},
											{
												"body": {
													"nativeSrc": "21383:286:21",
													"nodeType": "YulBlock",
													"src": "21383:286:21",
													"statements": [
														{
															"nativeSrc": "21393:26:21",
															"nodeType": "YulAssignment",
															"src": "21393:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21405:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "21405:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21416:2:21",
																		"nodeType": "YulLiteral",
																		"src": "21416:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21401:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "21401:3:21"
																},
																"nativeSrc": "21401:18:21",
																"nodeType": "YulFunctionCall",
																"src": "21401:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21393:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "21393:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21471:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "21471:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21484:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "21484:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21495:1:21",
																				"nodeType": "YulLiteral",
																				"src": "21495:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21480:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "21480:3:21"
																		},
																		"nativeSrc": "21480:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21480:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "21429:41:21",
																	"nodeType": "YulIdentifier",
																	"src": "21429:41:21"
																},
																"nativeSrc": "21429:69:21",
																"nodeType": "YulFunctionCall",
																"src": "21429:69:21"
															},
															"nativeSrc": "21429:69:21",
															"nodeType": "YulExpressionStatement",
															"src": "21429:69:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21552:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "21552:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21565:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "21565:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21576:2:21",
																				"nodeType": "YulLiteral",
																				"src": "21576:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21561:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "21561:3:21"
																		},
																		"nativeSrc": "21561:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21561:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21508:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "21508:43:21"
																},
																"nativeSrc": "21508:72:21",
																"nodeType": "YulFunctionCall",
																"src": "21508:72:21"
															},
															"nativeSrc": "21508:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "21508:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21634:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "21634:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21647:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "21647:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21658:2:21",
																				"nodeType": "YulLiteral",
																				"src": "21658:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21643:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "21643:3:21"
																		},
																		"nativeSrc": "21643:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21643:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21590:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "21590:43:21"
																},
																"nativeSrc": "21590:72:21",
																"nodeType": "YulFunctionCall",
																"src": "21590:72:21"
															},
															"nativeSrc": "21590:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "21590:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_address_t_uint256__to_t_uint64_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21231:438:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21339:9:21",
														"nodeType": "YulTypedName",
														"src": "21339:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21351:6:21",
														"nodeType": "YulTypedName",
														"src": "21351:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21359:6:21",
														"nodeType": "YulTypedName",
														"src": "21359:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21367:6:21",
														"nodeType": "YulTypedName",
														"src": "21367:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21378:4:21",
														"nodeType": "YulTypedName",
														"src": "21378:4:21",
														"type": ""
													}
												],
												"src": "21231:438:21"
											},
											{
												"body": {
													"nativeSrc": "21723:362:21",
													"nodeType": "YulBlock",
													"src": "21723:362:21",
													"statements": [
														{
															"nativeSrc": "21733:25:21",
															"nodeType": "YulAssignment",
															"src": "21733:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21756:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "21756:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21738:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "21738:17:21"
																},
																"nativeSrc": "21738:20:21",
																"nodeType": "YulFunctionCall",
																"src": "21738:20:21"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21733:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "21733:1:21"
																}
															]
														},
														{
															"nativeSrc": "21767:25:21",
															"nodeType": "YulAssignment",
															"src": "21767:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21790:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "21790:1:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21772:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "21772:17:21"
																},
																"nativeSrc": "21772:20:21",
																"nodeType": "YulFunctionCall",
																"src": "21772:20:21"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21767:1:21",
																	"nodeType": "YulIdentifier",
																	"src": "21767:1:21"
																}
															]
														},
														{
															"nativeSrc": "21801:28:21",
															"nodeType": "YulVariableDeclaration",
															"src": "21801:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21824:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "21824:1:21"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21827:1:21",
																		"nodeType": "YulIdentifier",
																		"src": "21827:1:21"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21820:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "21820:3:21"
																},
																"nativeSrc": "21820:9:21",
																"nodeType": "YulFunctionCall",
																"src": "21820:9:21"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "21805:11:21",
																	"nodeType": "YulTypedName",
																	"src": "21805:11:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21838:41:21",
															"nodeType": "YulAssignment",
															"src": "21838:41:21",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "21867:11:21",
																		"nodeType": "YulIdentifier",
																		"src": "21867:11:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21849:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "21849:17:21"
																},
																"nativeSrc": "21849:30:21",
																"nodeType": "YulFunctionCall",
																"src": "21849:30:21"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "21838:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "21838:7:21"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22056:22:21",
																"nodeType": "YulBlock",
																"src": "22056:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22058:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "22058:16:21"
																			},
																			"nativeSrc": "22058:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "22058:18:21"
																		},
																		"nativeSrc": "22058:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "22058:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "21989:1:21",
																						"nodeType": "YulIdentifier",
																						"src": "21989:1:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "21982:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "21982:6:21"
																				},
																				"nativeSrc": "21982:9:21",
																				"nodeType": "YulFunctionCall",
																				"src": "21982:9:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "22012:1:21",
																						"nodeType": "YulIdentifier",
																						"src": "22012:1:21"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "22019:7:21",
																								"nodeType": "YulIdentifier",
																								"src": "22019:7:21"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "22028:1:21",
																								"nodeType": "YulIdentifier",
																								"src": "22028:1:21"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "22015:3:21",
																							"nodeType": "YulIdentifier",
																							"src": "22015:3:21"
																						},
																						"nativeSrc": "22015:15:21",
																						"nodeType": "YulFunctionCall",
																						"src": "22015:15:21"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "22009:2:21",
																					"nodeType": "YulIdentifier",
																					"src": "22009:2:21"
																				},
																				"nativeSrc": "22009:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "22009:22:21"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "21962:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "21962:2:21"
																		},
																		"nativeSrc": "21962:83:21",
																		"nodeType": "YulFunctionCall",
																		"src": "21962:83:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21942:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "21942:6:21"
																},
																"nativeSrc": "21942:113:21",
																"nodeType": "YulFunctionCall",
																"src": "21942:113:21"
															},
															"nativeSrc": "21939:139:21",
															"nodeType": "YulIf",
															"src": "21939:139:21"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "21675:410:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21706:1:21",
														"nodeType": "YulTypedName",
														"src": "21706:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21709:1:21",
														"nodeType": "YulTypedName",
														"src": "21709:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "21715:7:21",
														"nodeType": "YulTypedName",
														"src": "21715:7:21",
														"type": ""
													}
												],
												"src": "21675:410:21"
											},
											{
												"body": {
													"nativeSrc": "22197:119:21",
													"nodeType": "YulBlock",
													"src": "22197:119:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22219:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "22219:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22227:1:21",
																				"nodeType": "YulLiteral",
																				"src": "22227:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22215:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "22215:3:21"
																		},
																		"nativeSrc": "22215:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "22215:14:21"
																	},
																	{
																		"hexValue": "546f74616c20736861726573206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "22231:34:21",
																		"nodeType": "YulLiteral",
																		"src": "22231:34:21",
																		"type": "",
																		"value": "Total shares must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22208:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "22208:6:21"
																},
																"nativeSrc": "22208:58:21",
																"nodeType": "YulFunctionCall",
																"src": "22208:58:21"
															},
															"nativeSrc": "22208:58:21",
															"nodeType": "YulExpressionStatement",
															"src": "22208:58:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22287:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "22287:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22295:2:21",
																				"nodeType": "YulLiteral",
																				"src": "22295:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22283:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "22283:3:21"
																		},
																		"nativeSrc": "22283:15:21",
																		"nodeType": "YulFunctionCall",
																		"src": "22283:15:21"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "22300:8:21",
																		"nodeType": "YulLiteral",
																		"src": "22300:8:21",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22276:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "22276:6:21"
																},
																"nativeSrc": "22276:33:21",
																"nodeType": "YulFunctionCall",
																"src": "22276:33:21"
															},
															"nativeSrc": "22276:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "22276:33:21"
														}
													]
												},
												"name": "store_literal_in_memory_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5",
												"nativeSrc": "22091:225:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22189:6:21",
														"nodeType": "YulTypedName",
														"src": "22189:6:21",
														"type": ""
													}
												],
												"src": "22091:225:21"
											},
											{
												"body": {
													"nativeSrc": "22468:220:21",
													"nodeType": "YulBlock",
													"src": "22468:220:21",
													"statements": [
														{
															"nativeSrc": "22478:74:21",
															"nodeType": "YulAssignment",
															"src": "22478:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22544:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "22544:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22549:2:21",
																		"nodeType": "YulLiteral",
																		"src": "22549:2:21",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22485:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "22485:58:21"
																},
																"nativeSrc": "22485:67:21",
																"nodeType": "YulFunctionCall",
																"src": "22485:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22478:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "22478:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22650:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "22650:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5",
																	"nativeSrc": "22561:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "22561:88:21"
																},
																"nativeSrc": "22561:93:21",
																"nodeType": "YulFunctionCall",
																"src": "22561:93:21"
															},
															"nativeSrc": "22561:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "22561:93:21"
														},
														{
															"nativeSrc": "22663:19:21",
															"nodeType": "YulAssignment",
															"src": "22663:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22674:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "22674:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22679:2:21",
																		"nodeType": "YulLiteral",
																		"src": "22679:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22670:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "22670:3:21"
																},
																"nativeSrc": "22670:12:21",
																"nodeType": "YulFunctionCall",
																"src": "22670:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22663:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "22663:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22322:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22456:3:21",
														"nodeType": "YulTypedName",
														"src": "22456:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22464:3:21",
														"nodeType": "YulTypedName",
														"src": "22464:3:21",
														"type": ""
													}
												],
												"src": "22322:366:21"
											},
											{
												"body": {
													"nativeSrc": "22865:248:21",
													"nodeType": "YulBlock",
													"src": "22865:248:21",
													"statements": [
														{
															"nativeSrc": "22875:26:21",
															"nodeType": "YulAssignment",
															"src": "22875:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22887:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "22887:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22898:2:21",
																		"nodeType": "YulLiteral",
																		"src": "22898:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22883:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "22883:3:21"
																},
																"nativeSrc": "22883:18:21",
																"nodeType": "YulFunctionCall",
																"src": "22883:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22875:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "22875:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22922:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "22922:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22933:1:21",
																				"nodeType": "YulLiteral",
																				"src": "22933:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22918:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "22918:3:21"
																		},
																		"nativeSrc": "22918:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "22918:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22941:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "22941:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22947:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "22947:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22937:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "22937:3:21"
																		},
																		"nativeSrc": "22937:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "22937:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22911:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "22911:6:21"
																},
																"nativeSrc": "22911:47:21",
																"nodeType": "YulFunctionCall",
																"src": "22911:47:21"
															},
															"nativeSrc": "22911:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "22911:47:21"
														},
														{
															"nativeSrc": "22967:139:21",
															"nodeType": "YulAssignment",
															"src": "22967:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23101:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "23101:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22975:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "22975:124:21"
																},
																"nativeSrc": "22975:131:21",
																"nodeType": "YulFunctionCall",
																"src": "22975:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22967:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "22967:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22694:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22845:9:21",
														"nodeType": "YulTypedName",
														"src": "22845:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22860:4:21",
														"nodeType": "YulTypedName",
														"src": "22860:4:21",
														"type": ""
													}
												],
												"src": "22694:419:21"
											},
											{
												"body": {
													"nativeSrc": "23172:32:21",
													"nodeType": "YulBlock",
													"src": "23172:32:21",
													"statements": [
														{
															"nativeSrc": "23182:16:21",
															"nodeType": "YulAssignment",
															"src": "23182:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "23193:5:21",
																"nodeType": "YulIdentifier",
																"src": "23193:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23182:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "23182:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "23119:85:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23154:5:21",
														"nodeType": "YulTypedName",
														"src": "23154:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23164:7:21",
														"nodeType": "YulTypedName",
														"src": "23164:7:21",
														"type": ""
													}
												],
												"src": "23119:85:21"
											},
											{
												"body": {
													"nativeSrc": "23277:89:21",
													"nodeType": "YulBlock",
													"src": "23277:89:21",
													"statements": [
														{
															"nativeSrc": "23287:73:21",
															"nodeType": "YulAssignment",
															"src": "23287:73:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23352:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "23352:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "23326:25:21",
																					"nodeType": "YulIdentifier",
																					"src": "23326:25:21"
																				},
																				"nativeSrc": "23326:32:21",
																				"nodeType": "YulFunctionCall",
																				"src": "23326:32:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23317:8:21",
																			"nodeType": "YulIdentifier",
																			"src": "23317:8:21"
																		},
																		"nativeSrc": "23317:42:21",
																		"nodeType": "YulFunctionCall",
																		"src": "23317:42:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "23300:16:21",
																	"nodeType": "YulIdentifier",
																	"src": "23300:16:21"
																},
																"nativeSrc": "23300:60:21",
																"nodeType": "YulFunctionCall",
																"src": "23300:60:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23287:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "23287:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "23210:156:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23257:5:21",
														"nodeType": "YulTypedName",
														"src": "23257:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23267:9:21",
														"nodeType": "YulTypedName",
														"src": "23267:9:21",
														"type": ""
													}
												],
												"src": "23210:156:21"
											},
											{
												"body": {
													"nativeSrc": "23444:73:21",
													"nodeType": "YulBlock",
													"src": "23444:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23461:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "23461:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23504:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "23504:5:21"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "23466:37:21",
																			"nodeType": "YulIdentifier",
																			"src": "23466:37:21"
																		},
																		"nativeSrc": "23466:44:21",
																		"nodeType": "YulFunctionCall",
																		"src": "23466:44:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23454:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "23454:6:21"
																},
																"nativeSrc": "23454:57:21",
																"nodeType": "YulFunctionCall",
																"src": "23454:57:21"
															},
															"nativeSrc": "23454:57:21",
															"nodeType": "YulExpressionStatement",
															"src": "23454:57:21"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "23372:145:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23432:5:21",
														"nodeType": "YulTypedName",
														"src": "23432:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23439:3:21",
														"nodeType": "YulTypedName",
														"src": "23439:3:21",
														"type": ""
													}
												],
												"src": "23372:145:21"
											},
											{
												"body": {
													"nativeSrc": "23628:131:21",
													"nodeType": "YulBlock",
													"src": "23628:131:21",
													"statements": [
														{
															"nativeSrc": "23638:26:21",
															"nodeType": "YulAssignment",
															"src": "23638:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23650:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "23650:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23661:2:21",
																		"nodeType": "YulLiteral",
																		"src": "23661:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23646:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "23646:3:21"
																},
																"nativeSrc": "23646:18:21",
																"nodeType": "YulFunctionCall",
																"src": "23646:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23638:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "23638:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23725:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "23725:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23738:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "23738:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23749:1:21",
																				"nodeType": "YulLiteral",
																				"src": "23749:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23734:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "23734:3:21"
																		},
																		"nativeSrc": "23734:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "23734:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "23674:50:21",
																	"nodeType": "YulIdentifier",
																	"src": "23674:50:21"
																},
																"nativeSrc": "23674:78:21",
																"nodeType": "YulFunctionCall",
																"src": "23674:78:21"
															},
															"nativeSrc": "23674:78:21",
															"nodeType": "YulExpressionStatement",
															"src": "23674:78:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "23523:236:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23600:9:21",
														"nodeType": "YulTypedName",
														"src": "23600:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23612:6:21",
														"nodeType": "YulTypedName",
														"src": "23612:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23623:4:21",
														"nodeType": "YulTypedName",
														"src": "23623:4:21",
														"type": ""
													}
												],
												"src": "23523:236:21"
											},
											{
												"body": {
													"nativeSrc": "23863:124:21",
													"nodeType": "YulBlock",
													"src": "23863:124:21",
													"statements": [
														{
															"nativeSrc": "23873:26:21",
															"nodeType": "YulAssignment",
															"src": "23873:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23885:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "23885:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23896:2:21",
																		"nodeType": "YulLiteral",
																		"src": "23896:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23881:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "23881:3:21"
																},
																"nativeSrc": "23881:18:21",
																"nodeType": "YulFunctionCall",
																"src": "23881:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23873:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "23873:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23953:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "23953:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23966:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "23966:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23977:1:21",
																				"nodeType": "YulLiteral",
																				"src": "23977:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23962:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "23962:3:21"
																		},
																		"nativeSrc": "23962:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "23962:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23909:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "23909:43:21"
																},
																"nativeSrc": "23909:71:21",
																"nodeType": "YulFunctionCall",
																"src": "23909:71:21"
															},
															"nativeSrc": "23909:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "23909:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "23765:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23835:9:21",
														"nodeType": "YulTypedName",
														"src": "23835:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23847:6:21",
														"nodeType": "YulTypedName",
														"src": "23847:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23858:4:21",
														"nodeType": "YulTypedName",
														"src": "23858:4:21",
														"type": ""
													}
												],
												"src": "23765:222:21"
											},
											{
												"body": {
													"nativeSrc": "24056:80:21",
													"nodeType": "YulBlock",
													"src": "24056:80:21",
													"statements": [
														{
															"nativeSrc": "24066:22:21",
															"nodeType": "YulAssignment",
															"src": "24066:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24081:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "24081:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24075:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "24075:5:21"
																},
																"nativeSrc": "24075:13:21",
																"nodeType": "YulFunctionCall",
																"src": "24075:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24066:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "24066:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24124:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "24124:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "24097:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "24097:26:21"
																},
																"nativeSrc": "24097:33:21",
																"nodeType": "YulFunctionCall",
																"src": "24097:33:21"
															},
															"nativeSrc": "24097:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "24097:33:21"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "23993:143:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24034:6:21",
														"nodeType": "YulTypedName",
														"src": "24034:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24042:3:21",
														"nodeType": "YulTypedName",
														"src": "24042:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24050:5:21",
														"nodeType": "YulTypedName",
														"src": "24050:5:21",
														"type": ""
													}
												],
												"src": "23993:143:21"
											},
											{
												"body": {
													"nativeSrc": "24219:274:21",
													"nodeType": "YulBlock",
													"src": "24219:274:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "24265:83:21",
																"nodeType": "YulBlock",
																"src": "24265:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24267:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "24267:77:21"
																			},
																			"nativeSrc": "24267:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "24267:79:21"
																		},
																		"nativeSrc": "24267:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "24267:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24240:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "24240:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24249:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "24249:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24236:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "24236:3:21"
																		},
																		"nativeSrc": "24236:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "24236:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24261:2:21",
																		"nodeType": "YulLiteral",
																		"src": "24261:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24232:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "24232:3:21"
																},
																"nativeSrc": "24232:32:21",
																"nodeType": "YulFunctionCall",
																"src": "24232:32:21"
															},
															"nativeSrc": "24229:119:21",
															"nodeType": "YulIf",
															"src": "24229:119:21"
														},
														{
															"nativeSrc": "24358:128:21",
															"nodeType": "YulBlock",
															"src": "24358:128:21",
															"statements": [
																{
																	"nativeSrc": "24373:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24373:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24387:1:21",
																		"nodeType": "YulLiteral",
																		"src": "24387:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24377:6:21",
																			"nodeType": "YulTypedName",
																			"src": "24377:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24402:74:21",
																	"nodeType": "YulAssignment",
																	"src": "24402:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24448:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "24448:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24459:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "24459:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24444:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "24444:3:21"
																				},
																				"nativeSrc": "24444:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "24444:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24468:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "24468:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "24412:31:21",
																			"nodeType": "YulIdentifier",
																			"src": "24412:31:21"
																		},
																		"nativeSrc": "24412:64:21",
																		"nodeType": "YulFunctionCall",
																		"src": "24412:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24402:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "24402:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "24142:351:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24189:9:21",
														"nodeType": "YulTypedName",
														"src": "24189:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24200:7:21",
														"nodeType": "YulTypedName",
														"src": "24200:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24212:6:21",
														"nodeType": "YulTypedName",
														"src": "24212:6:21",
														"type": ""
													}
												],
												"src": "24142:351:21"
											},
											{
												"body": {
													"nativeSrc": "24625:206:21",
													"nodeType": "YulBlock",
													"src": "24625:206:21",
													"statements": [
														{
															"nativeSrc": "24635:26:21",
															"nodeType": "YulAssignment",
															"src": "24635:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24647:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "24647:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24658:2:21",
																		"nodeType": "YulLiteral",
																		"src": "24658:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24643:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "24643:3:21"
																},
																"nativeSrc": "24643:18:21",
																"nodeType": "YulFunctionCall",
																"src": "24643:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24635:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "24635:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24715:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "24715:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24728:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "24728:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24739:1:21",
																				"nodeType": "YulLiteral",
																				"src": "24739:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24724:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "24724:3:21"
																		},
																		"nativeSrc": "24724:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "24724:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24671:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "24671:43:21"
																},
																"nativeSrc": "24671:71:21",
																"nodeType": "YulFunctionCall",
																"src": "24671:71:21"
															},
															"nativeSrc": "24671:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "24671:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24796:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "24796:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24809:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "24809:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24820:2:21",
																				"nodeType": "YulLiteral",
																				"src": "24820:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24805:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "24805:3:21"
																		},
																		"nativeSrc": "24805:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "24805:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "24752:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "24752:43:21"
																},
																"nativeSrc": "24752:72:21",
																"nodeType": "YulFunctionCall",
																"src": "24752:72:21"
															},
															"nativeSrc": "24752:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "24752:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24499:332:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24589:9:21",
														"nodeType": "YulTypedName",
														"src": "24589:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24601:6:21",
														"nodeType": "YulTypedName",
														"src": "24601:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24609:6:21",
														"nodeType": "YulTypedName",
														"src": "24609:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24620:4:21",
														"nodeType": "YulTypedName",
														"src": "24620:4:21",
														"type": ""
													}
												],
												"src": "24499:332:21"
											},
											{
												"body": {
													"nativeSrc": "24991:288:21",
													"nodeType": "YulBlock",
													"src": "24991:288:21",
													"statements": [
														{
															"nativeSrc": "25001:26:21",
															"nodeType": "YulAssignment",
															"src": "25001:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25013:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "25013:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25024:2:21",
																		"nodeType": "YulLiteral",
																		"src": "25024:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25009:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "25009:3:21"
																},
																"nativeSrc": "25009:18:21",
																"nodeType": "YulFunctionCall",
																"src": "25009:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25001:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "25001:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25081:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "25081:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25094:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "25094:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25105:1:21",
																				"nodeType": "YulLiteral",
																				"src": "25105:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25090:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "25090:3:21"
																		},
																		"nativeSrc": "25090:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "25090:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25037:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "25037:43:21"
																},
																"nativeSrc": "25037:71:21",
																"nodeType": "YulFunctionCall",
																"src": "25037:71:21"
															},
															"nativeSrc": "25037:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "25037:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25162:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "25162:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25175:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "25175:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25186:2:21",
																				"nodeType": "YulLiteral",
																				"src": "25186:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25171:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "25171:3:21"
																		},
																		"nativeSrc": "25171:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "25171:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25118:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "25118:43:21"
																},
																"nativeSrc": "25118:72:21",
																"nodeType": "YulFunctionCall",
																"src": "25118:72:21"
															},
															"nativeSrc": "25118:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "25118:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25244:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "25244:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25257:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "25257:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25268:2:21",
																				"nodeType": "YulLiteral",
																				"src": "25268:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25253:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "25253:3:21"
																		},
																		"nativeSrc": "25253:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "25253:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25200:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "25200:43:21"
																},
																"nativeSrc": "25200:72:21",
																"nodeType": "YulFunctionCall",
																"src": "25200:72:21"
															},
															"nativeSrc": "25200:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "25200:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "24837:442:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24947:9:21",
														"nodeType": "YulTypedName",
														"src": "24947:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24959:6:21",
														"nodeType": "YulTypedName",
														"src": "24959:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24967:6:21",
														"nodeType": "YulTypedName",
														"src": "24967:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24975:6:21",
														"nodeType": "YulTypedName",
														"src": "24975:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24986:4:21",
														"nodeType": "YulTypedName",
														"src": "24986:4:21",
														"type": ""
													}
												],
												"src": "24837:442:21"
											},
											{
												"body": {
													"nativeSrc": "25339:87:21",
													"nodeType": "YulBlock",
													"src": "25339:87:21",
													"statements": [
														{
															"nativeSrc": "25349:11:21",
															"nodeType": "YulAssignment",
															"src": "25349:11:21",
															"value": {
																"name": "ptr",
																"nativeSrc": "25357:3:21",
																"nodeType": "YulIdentifier",
																"src": "25357:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25349:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "25349:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25377:1:21",
																		"nodeType": "YulLiteral",
																		"src": "25377:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "25380:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "25380:3:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25370:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "25370:6:21"
																},
																"nativeSrc": "25370:14:21",
																"nodeType": "YulFunctionCall",
																"src": "25370:14:21"
															},
															"nativeSrc": "25370:14:21",
															"nodeType": "YulExpressionStatement",
															"src": "25370:14:21"
														},
														{
															"nativeSrc": "25393:26:21",
															"nodeType": "YulAssignment",
															"src": "25393:26:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25411:1:21",
																		"nodeType": "YulLiteral",
																		"src": "25411:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25414:4:21",
																		"nodeType": "YulLiteral",
																		"src": "25414:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "25401:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "25401:9:21"
																},
																"nativeSrc": "25401:18:21",
																"nodeType": "YulFunctionCall",
																"src": "25401:18:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25393:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "25393:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "25285:141:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "25326:3:21",
														"nodeType": "YulTypedName",
														"src": "25326:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "25334:4:21",
														"nodeType": "YulTypedName",
														"src": "25334:4:21",
														"type": ""
													}
												],
												"src": "25285:141:21"
											},
											{
												"body": {
													"nativeSrc": "25476:49:21",
													"nodeType": "YulBlock",
													"src": "25476:49:21",
													"statements": [
														{
															"nativeSrc": "25486:33:21",
															"nodeType": "YulAssignment",
															"src": "25486:33:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25504:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "25504:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25511:2:21",
																				"nodeType": "YulLiteral",
																				"src": "25511:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25500:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "25500:3:21"
																		},
																		"nativeSrc": "25500:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "25500:14:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25516:2:21",
																		"nodeType": "YulLiteral",
																		"src": "25516:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "25496:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "25496:3:21"
																},
																"nativeSrc": "25496:23:21",
																"nodeType": "YulFunctionCall",
																"src": "25496:23:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25486:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "25486:6:21"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "25432:93:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25459:5:21",
														"nodeType": "YulTypedName",
														"src": "25459:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25469:6:21",
														"nodeType": "YulTypedName",
														"src": "25469:6:21",
														"type": ""
													}
												],
												"src": "25432:93:21"
											},
											{
												"body": {
													"nativeSrc": "25584:54:21",
													"nodeType": "YulBlock",
													"src": "25584:54:21",
													"statements": [
														{
															"nativeSrc": "25594:37:21",
															"nodeType": "YulAssignment",
															"src": "25594:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25619:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "25619:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25625:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "25625:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "25615:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "25615:3:21"
																},
																"nativeSrc": "25615:16:21",
																"nodeType": "YulFunctionCall",
																"src": "25615:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25594:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "25594:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "25531:107:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25559:4:21",
														"nodeType": "YulTypedName",
														"src": "25559:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25565:5:21",
														"nodeType": "YulTypedName",
														"src": "25565:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25575:8:21",
														"nodeType": "YulTypedName",
														"src": "25575:8:21",
														"type": ""
													}
												],
												"src": "25531:107:21"
											},
											{
												"body": {
													"nativeSrc": "25720:317:21",
													"nodeType": "YulBlock",
													"src": "25720:317:21",
													"statements": [
														{
															"nativeSrc": "25730:35:21",
															"nodeType": "YulVariableDeclaration",
															"src": "25730:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "25751:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "25751:10:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25763:1:21",
																		"nodeType": "YulLiteral",
																		"src": "25763:1:21",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25747:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "25747:3:21"
																},
																"nativeSrc": "25747:18:21",
																"nodeType": "YulFunctionCall",
																"src": "25747:18:21"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "25734:9:21",
																	"nodeType": "YulTypedName",
																	"src": "25734:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25774:109:21",
															"nodeType": "YulVariableDeclaration",
															"src": "25774:109:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25805:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "25805:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25816:66:21",
																		"nodeType": "YulLiteral",
																		"src": "25816:66:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "25786:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "25786:18:21"
																},
																"nativeSrc": "25786:97:21",
																"nodeType": "YulFunctionCall",
																"src": "25786:97:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25778:4:21",
																	"nodeType": "YulTypedName",
																	"src": "25778:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25892:51:21",
															"nodeType": "YulAssignment",
															"src": "25892:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25923:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "25923:9:21"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "25934:8:21",
																		"nodeType": "YulIdentifier",
																		"src": "25934:8:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "25904:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "25904:18:21"
																},
																"nativeSrc": "25904:39:21",
																"nodeType": "YulFunctionCall",
																"src": "25904:39:21"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "25892:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "25892:8:21"
																}
															]
														},
														{
															"nativeSrc": "25952:30:21",
															"nodeType": "YulAssignment",
															"src": "25952:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25965:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "25965:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "25976:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "25976:4:21"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "25972:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "25972:3:21"
																		},
																		"nativeSrc": "25972:9:21",
																		"nodeType": "YulFunctionCall",
																		"src": "25972:9:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25961:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "25961:3:21"
																},
																"nativeSrc": "25961:21:21",
																"nodeType": "YulFunctionCall",
																"src": "25961:21:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25952:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "25952:5:21"
																}
															]
														},
														{
															"nativeSrc": "25991:40:21",
															"nodeType": "YulAssignment",
															"src": "25991:40:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26004:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "26004:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "26015:8:21",
																				"nodeType": "YulIdentifier",
																				"src": "26015:8:21"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "26025:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "26025:4:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "26011:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "26011:3:21"
																		},
																		"nativeSrc": "26011:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "26011:19:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "26001:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "26001:2:21"
																},
																"nativeSrc": "26001:30:21",
																"nodeType": "YulFunctionCall",
																"src": "26001:30:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25991:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "25991:6:21"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "25644:393:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25681:5:21",
														"nodeType": "YulTypedName",
														"src": "25681:5:21",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "25688:10:21",
														"nodeType": "YulTypedName",
														"src": "25688:10:21",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "25700:8:21",
														"nodeType": "YulTypedName",
														"src": "25700:8:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25713:6:21",
														"nodeType": "YulTypedName",
														"src": "25713:6:21",
														"type": ""
													}
												],
												"src": "25644:393:21"
											},
											{
												"body": {
													"nativeSrc": "26103:82:21",
													"nodeType": "YulBlock",
													"src": "26103:82:21",
													"statements": [
														{
															"nativeSrc": "26113:66:21",
															"nodeType": "YulAssignment",
															"src": "26113:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26171:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "26171:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "26153:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "26153:17:21"
																				},
																				"nativeSrc": "26153:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "26153:24:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "26144:8:21",
																			"nodeType": "YulIdentifier",
																			"src": "26144:8:21"
																		},
																		"nativeSrc": "26144:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "26144:34:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26126:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "26126:17:21"
																},
																"nativeSrc": "26126:53:21",
																"nodeType": "YulFunctionCall",
																"src": "26126:53:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "26113:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "26113:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "26043:142:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26083:5:21",
														"nodeType": "YulTypedName",
														"src": "26083:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "26093:9:21",
														"nodeType": "YulTypedName",
														"src": "26093:9:21",
														"type": ""
													}
												],
												"src": "26043:142:21"
											},
											{
												"body": {
													"nativeSrc": "26238:28:21",
													"nodeType": "YulBlock",
													"src": "26238:28:21",
													"statements": [
														{
															"nativeSrc": "26248:12:21",
															"nodeType": "YulAssignment",
															"src": "26248:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "26255:5:21",
																"nodeType": "YulIdentifier",
																"src": "26255:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "26248:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "26248:3:21"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "26191:75:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26224:5:21",
														"nodeType": "YulTypedName",
														"src": "26224:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "26234:3:21",
														"nodeType": "YulTypedName",
														"src": "26234:3:21",
														"type": ""
													}
												],
												"src": "26191:75:21"
											},
											{
												"body": {
													"nativeSrc": "26348:193:21",
													"nodeType": "YulBlock",
													"src": "26348:193:21",
													"statements": [
														{
															"nativeSrc": "26358:63:21",
															"nodeType": "YulVariableDeclaration",
															"src": "26358:63:21",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "26413:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "26413:7:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "26382:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "26382:30:21"
																},
																"nativeSrc": "26382:39:21",
																"nodeType": "YulFunctionCall",
																"src": "26382:39:21"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "26362:16:21",
																	"nodeType": "YulTypedName",
																	"src": "26362:16:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26437:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "26437:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "26477:4:21",
																						"nodeType": "YulIdentifier",
																						"src": "26477:4:21"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "26471:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "26471:5:21"
																				},
																				"nativeSrc": "26471:11:21",
																				"nodeType": "YulFunctionCall",
																				"src": "26471:11:21"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "26484:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "26484:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "26516:16:21",
																						"nodeType": "YulIdentifier",
																						"src": "26516:16:21"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "26492:23:21",
																					"nodeType": "YulIdentifier",
																					"src": "26492:23:21"
																				},
																				"nativeSrc": "26492:41:21",
																				"nodeType": "YulFunctionCall",
																				"src": "26492:41:21"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "26443:27:21",
																			"nodeType": "YulIdentifier",
																			"src": "26443:27:21"
																		},
																		"nativeSrc": "26443:91:21",
																		"nodeType": "YulFunctionCall",
																		"src": "26443:91:21"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "26430:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "26430:6:21"
																},
																"nativeSrc": "26430:105:21",
																"nodeType": "YulFunctionCall",
																"src": "26430:105:21"
															},
															"nativeSrc": "26430:105:21",
															"nodeType": "YulExpressionStatement",
															"src": "26430:105:21"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "26272:269:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26325:4:21",
														"nodeType": "YulTypedName",
														"src": "26325:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "26331:6:21",
														"nodeType": "YulTypedName",
														"src": "26331:6:21",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "26339:7:21",
														"nodeType": "YulTypedName",
														"src": "26339:7:21",
														"type": ""
													}
												],
												"src": "26272:269:21"
											},
											{
												"body": {
													"nativeSrc": "26596:24:21",
													"nodeType": "YulBlock",
													"src": "26596:24:21",
													"statements": [
														{
															"nativeSrc": "26606:8:21",
															"nodeType": "YulAssignment",
															"src": "26606:8:21",
															"value": {
																"kind": "number",
																"nativeSrc": "26613:1:21",
																"nodeType": "YulLiteral",
																"src": "26613:1:21",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "26606:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "26606:3:21"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "26547:73:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "26592:3:21",
														"nodeType": "YulTypedName",
														"src": "26592:3:21",
														"type": ""
													}
												],
												"src": "26547:73:21"
											},
											{
												"body": {
													"nativeSrc": "26679:136:21",
													"nodeType": "YulBlock",
													"src": "26679:136:21",
													"statements": [
														{
															"nativeSrc": "26689:46:21",
															"nodeType": "YulVariableDeclaration",
															"src": "26689:46:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "26703:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "26703:30:21"
																},
																"nativeSrc": "26703:32:21",
																"nodeType": "YulFunctionCall",
																"src": "26703:32:21"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "26693:6:21",
																	"nodeType": "YulTypedName",
																	"src": "26693:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26788:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "26788:4:21"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "26794:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "26794:6:21"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "26802:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "26802:6:21"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "26744:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "26744:43:21"
																},
																"nativeSrc": "26744:65:21",
																"nodeType": "YulFunctionCall",
																"src": "26744:65:21"
															},
															"nativeSrc": "26744:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "26744:65:21"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "26626:189:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26665:4:21",
														"nodeType": "YulTypedName",
														"src": "26665:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "26671:6:21",
														"nodeType": "YulTypedName",
														"src": "26671:6:21",
														"type": ""
													}
												],
												"src": "26626:189:21"
											},
											{
												"body": {
													"nativeSrc": "26871:136:21",
													"nodeType": "YulBlock",
													"src": "26871:136:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "26938:63:21",
																"nodeType": "YulBlock",
																"src": "26938:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26982:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "26982:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26989:1:21",
																					"nodeType": "YulLiteral",
																					"src": "26989:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "26952:29:21",
																				"nodeType": "YulIdentifier",
																				"src": "26952:29:21"
																			},
																			"nativeSrc": "26952:39:21",
																			"nodeType": "YulFunctionCall",
																			"src": "26952:39:21"
																		},
																		"nativeSrc": "26952:39:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "26952:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "26891:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "26891:5:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "26898:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "26898:3:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "26888:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "26888:2:21"
																},
																"nativeSrc": "26888:14:21",
																"nodeType": "YulFunctionCall",
																"src": "26888:14:21"
															},
															"nativeSrc": "26881:120:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "26903:26:21",
																"nodeType": "YulBlock",
																"src": "26903:26:21",
																"statements": [
																	{
																		"nativeSrc": "26905:22:21",
																		"nodeType": "YulAssignment",
																		"src": "26905:22:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26918:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "26918:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26925:1:21",
																					"nodeType": "YulLiteral",
																					"src": "26925:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26914:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "26914:3:21"
																			},
																			"nativeSrc": "26914:13:21",
																			"nodeType": "YulFunctionCall",
																			"src": "26914:13:21"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "26905:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "26905:5:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "26885:2:21",
																"nodeType": "YulBlock",
																"src": "26885:2:21",
																"statements": []
															},
															"src": "26881:120:21"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "26821:186:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "26859:5:21",
														"nodeType": "YulTypedName",
														"src": "26859:5:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26866:3:21",
														"nodeType": "YulTypedName",
														"src": "26866:3:21",
														"type": ""
													}
												],
												"src": "26821:186:21"
											},
											{
												"body": {
													"nativeSrc": "27092:464:21",
													"nodeType": "YulBlock",
													"src": "27092:464:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "27118:431:21",
																"nodeType": "YulBlock",
																"src": "27118:431:21",
																"statements": [
																	{
																		"nativeSrc": "27132:54:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "27132:54:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "27180:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "27180:5:21"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "27148:31:21",
																				"nodeType": "YulIdentifier",
																				"src": "27148:31:21"
																			},
																			"nativeSrc": "27148:38:21",
																			"nodeType": "YulFunctionCall",
																			"src": "27148:38:21"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "27136:8:21",
																				"nodeType": "YulTypedName",
																				"src": "27136:8:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "27199:63:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "27199:63:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "27222:8:21",
																					"nodeType": "YulIdentifier",
																					"src": "27222:8:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "27250:10:21",
																							"nodeType": "YulIdentifier",
																							"src": "27250:10:21"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "27232:17:21",
																						"nodeType": "YulIdentifier",
																						"src": "27232:17:21"
																					},
																					"nativeSrc": "27232:29:21",
																					"nodeType": "YulFunctionCall",
																					"src": "27232:29:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "27218:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "27218:3:21"
																			},
																			"nativeSrc": "27218:44:21",
																			"nodeType": "YulFunctionCall",
																			"src": "27218:44:21"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "27203:11:21",
																				"nodeType": "YulTypedName",
																				"src": "27203:11:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "27419:27:21",
																			"nodeType": "YulBlock",
																			"src": "27419:27:21",
																			"statements": [
																				{
																					"nativeSrc": "27421:23:21",
																					"nodeType": "YulAssignment",
																					"src": "27421:23:21",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "27436:8:21",
																						"nodeType": "YulIdentifier",
																						"src": "27436:8:21"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "27421:11:21",
																							"nodeType": "YulIdentifier",
																							"src": "27421:11:21"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "27403:10:21",
																					"nodeType": "YulIdentifier",
																					"src": "27403:10:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27415:2:21",
																					"nodeType": "YulLiteral",
																					"src": "27415:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "27400:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "27400:2:21"
																			},
																			"nativeSrc": "27400:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "27400:18:21"
																		},
																		"nativeSrc": "27397:49:21",
																		"nodeType": "YulIf",
																		"src": "27397:49:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "27488:11:21",
																					"nodeType": "YulIdentifier",
																					"src": "27488:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "27505:8:21",
																							"nodeType": "YulIdentifier",
																							"src": "27505:8:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "27533:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "27533:3:21"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "27515:17:21",
																								"nodeType": "YulIdentifier",
																								"src": "27515:17:21"
																							},
																							"nativeSrc": "27515:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "27515:22:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "27501:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "27501:3:21"
																					},
																					"nativeSrc": "27501:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "27501:37:21"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "27459:28:21",
																				"nodeType": "YulIdentifier",
																				"src": "27459:28:21"
																			},
																			"nativeSrc": "27459:80:21",
																			"nodeType": "YulFunctionCall",
																			"src": "27459:80:21"
																		},
																		"nativeSrc": "27459:80:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "27459:80:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "27109:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "27109:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27114:2:21",
																		"nodeType": "YulLiteral",
																		"src": "27114:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27106:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "27106:2:21"
																},
																"nativeSrc": "27106:11:21",
																"nodeType": "YulFunctionCall",
																"src": "27106:11:21"
															},
															"nativeSrc": "27103:446:21",
															"nodeType": "YulIf",
															"src": "27103:446:21"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "27013:543:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "27068:5:21",
														"nodeType": "YulTypedName",
														"src": "27068:5:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "27075:3:21",
														"nodeType": "YulTypedName",
														"src": "27075:3:21",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "27080:10:21",
														"nodeType": "YulTypedName",
														"src": "27080:10:21",
														"type": ""
													}
												],
												"src": "27013:543:21"
											},
											{
												"body": {
													"nativeSrc": "27625:54:21",
													"nodeType": "YulBlock",
													"src": "27625:54:21",
													"statements": [
														{
															"nativeSrc": "27635:37:21",
															"nodeType": "YulAssignment",
															"src": "27635:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "27660:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "27660:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "27666:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "27666:5:21"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "27656:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "27656:3:21"
																},
																"nativeSrc": "27656:16:21",
																"nodeType": "YulFunctionCall",
																"src": "27656:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "27635:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "27635:8:21"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "27562:117:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "27600:4:21",
														"nodeType": "YulTypedName",
														"src": "27600:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "27606:5:21",
														"nodeType": "YulTypedName",
														"src": "27606:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "27616:8:21",
														"nodeType": "YulTypedName",
														"src": "27616:8:21",
														"type": ""
													}
												],
												"src": "27562:117:21"
											},
											{
												"body": {
													"nativeSrc": "27736:118:21",
													"nodeType": "YulBlock",
													"src": "27736:118:21",
													"statements": [
														{
															"nativeSrc": "27746:68:21",
															"nodeType": "YulVariableDeclaration",
															"src": "27746:68:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27795:1:21",
																						"nodeType": "YulLiteral",
																						"src": "27795:1:21",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "27798:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "27798:5:21"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "27791:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "27791:3:21"
																				},
																				"nativeSrc": "27791:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "27791:13:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27810:1:21",
																						"nodeType": "YulLiteral",
																						"src": "27810:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "27806:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "27806:3:21"
																				},
																				"nativeSrc": "27806:6:21",
																				"nodeType": "YulFunctionCall",
																				"src": "27806:6:21"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "27762:28:21",
																			"nodeType": "YulIdentifier",
																			"src": "27762:28:21"
																		},
																		"nativeSrc": "27762:51:21",
																		"nodeType": "YulFunctionCall",
																		"src": "27762:51:21"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "27758:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "27758:3:21"
																},
																"nativeSrc": "27758:56:21",
																"nodeType": "YulFunctionCall",
																"src": "27758:56:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "27750:4:21",
																	"nodeType": "YulTypedName",
																	"src": "27750:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27823:25:21",
															"nodeType": "YulAssignment",
															"src": "27823:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27837:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "27837:4:21"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "27843:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "27843:4:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "27833:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "27833:3:21"
																},
																"nativeSrc": "27833:15:21",
																"nodeType": "YulFunctionCall",
																"src": "27833:15:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "27823:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "27823:6:21"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "27685:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27713:4:21",
														"nodeType": "YulTypedName",
														"src": "27713:4:21",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "27719:5:21",
														"nodeType": "YulTypedName",
														"src": "27719:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "27729:6:21",
														"nodeType": "YulTypedName",
														"src": "27729:6:21",
														"type": ""
													}
												],
												"src": "27685:169:21"
											},
											{
												"body": {
													"nativeSrc": "27940:214:21",
													"nodeType": "YulBlock",
													"src": "27940:214:21",
													"statements": [
														{
															"nativeSrc": "28073:37:21",
															"nodeType": "YulAssignment",
															"src": "28073:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "28100:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "28100:4:21"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "28106:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "28106:3:21"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "28081:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "28081:18:21"
																},
																"nativeSrc": "28081:29:21",
																"nodeType": "YulFunctionCall",
																"src": "28081:29:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "28073:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "28073:4:21"
																}
															]
														},
														{
															"nativeSrc": "28119:29:21",
															"nodeType": "YulAssignment",
															"src": "28119:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "28130:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "28130:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "28140:1:21",
																				"nodeType": "YulLiteral",
																				"src": "28140:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "28143:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "28143:3:21"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "28136:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "28136:3:21"
																		},
																		"nativeSrc": "28136:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "28136:11:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28127:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "28127:2:21"
																},
																"nativeSrc": "28127:21:21",
																"nodeType": "YulFunctionCall",
																"src": "28127:21:21"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "28119:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "28119:4:21"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "27859:295:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27921:4:21",
														"nodeType": "YulTypedName",
														"src": "27921:4:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "27927:3:21",
														"nodeType": "YulTypedName",
														"src": "27927:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "27935:4:21",
														"nodeType": "YulTypedName",
														"src": "27935:4:21",
														"type": ""
													}
												],
												"src": "27859:295:21"
											},
											{
												"body": {
													"nativeSrc": "28251:1303:21",
													"nodeType": "YulBlock",
													"src": "28251:1303:21",
													"statements": [
														{
															"nativeSrc": "28262:51:21",
															"nodeType": "YulVariableDeclaration",
															"src": "28262:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "28309:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "28309:3:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "28276:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "28276:32:21"
																},
																"nativeSrc": "28276:37:21",
																"nodeType": "YulFunctionCall",
																"src": "28276:37:21"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "28266:6:21",
																	"nodeType": "YulTypedName",
																	"src": "28266:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28398:22:21",
																"nodeType": "YulBlock",
																"src": "28398:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "28400:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "28400:16:21"
																			},
																			"nativeSrc": "28400:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "28400:18:21"
																		},
																		"nativeSrc": "28400:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "28400:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "28370:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "28370:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28378:18:21",
																		"nodeType": "YulLiteral",
																		"src": "28378:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28367:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "28367:2:21"
																},
																"nativeSrc": "28367:30:21",
																"nodeType": "YulFunctionCall",
																"src": "28367:30:21"
															},
															"nativeSrc": "28364:56:21",
															"nodeType": "YulIf",
															"src": "28364:56:21"
														},
														{
															"nativeSrc": "28430:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "28430:52:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "28476:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "28476:4:21"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "28470:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "28470:5:21"
																		},
																		"nativeSrc": "28470:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "28470:11:21"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "28444:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "28444:25:21"
																},
																"nativeSrc": "28444:38:21",
																"nodeType": "YulFunctionCall",
																"src": "28444:38:21"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "28434:6:21",
																	"nodeType": "YulTypedName",
																	"src": "28434:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "28575:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "28575:4:21"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "28581:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "28581:6:21"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "28589:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "28589:6:21"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "28529:45:21",
																	"nodeType": "YulIdentifier",
																	"src": "28529:45:21"
																},
																"nativeSrc": "28529:67:21",
																"nodeType": "YulFunctionCall",
																"src": "28529:67:21"
															},
															"nativeSrc": "28529:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "28529:67:21"
														},
														{
															"nativeSrc": "28606:18:21",
															"nodeType": "YulVariableDeclaration",
															"src": "28606:18:21",
															"value": {
																"kind": "number",
																"nativeSrc": "28623:1:21",
																"nodeType": "YulLiteral",
																"src": "28623:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "28610:9:21",
																	"nodeType": "YulTypedName",
																	"src": "28610:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28634:17:21",
															"nodeType": "YulAssignment",
															"src": "28634:17:21",
															"value": {
																"kind": "number",
																"nativeSrc": "28647:4:21",
																"nodeType": "YulLiteral",
																"src": "28647:4:21",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "28634:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "28634:9:21"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "28698:611:21",
																		"nodeType": "YulBlock",
																		"src": "28698:611:21",
																		"statements": [
																			{
																				"nativeSrc": "28712:37:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28712:37:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "28731:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "28731:6:21"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "28743:4:21",
																									"nodeType": "YulLiteral",
																									"src": "28743:4:21",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "28739:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "28739:3:21"
																							},
																							"nativeSrc": "28739:9:21",
																							"nodeType": "YulFunctionCall",
																							"src": "28739:9:21"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "28727:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "28727:3:21"
																					},
																					"nativeSrc": "28727:22:21",
																					"nodeType": "YulFunctionCall",
																					"src": "28727:22:21"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "28716:7:21",
																						"nodeType": "YulTypedName",
																						"src": "28716:7:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28763:51:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28763:51:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28809:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "28809:4:21"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "28777:31:21",
																						"nodeType": "YulIdentifier",
																						"src": "28777:31:21"
																					},
																					"nativeSrc": "28777:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "28777:37:21"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "28767:6:21",
																						"nodeType": "YulTypedName",
																						"src": "28767:6:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28827:10:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28827:10:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28836:1:21",
																					"nodeType": "YulLiteral",
																					"src": "28836:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "28831:1:21",
																						"nodeType": "YulTypedName",
																						"src": "28831:1:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28895:163:21",
																					"nodeType": "YulBlock",
																					"src": "28895:163:21",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28920:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "28920:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "28938:3:21",
																														"nodeType": "YulIdentifier",
																														"src": "28938:3:21"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "28943:9:21",
																														"nodeType": "YulIdentifier",
																														"src": "28943:9:21"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "28934:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "28934:3:21"
																												},
																												"nativeSrc": "28934:19:21",
																												"nodeType": "YulFunctionCall",
																												"src": "28934:19:21"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "28928:5:21",
																											"nodeType": "YulIdentifier",
																											"src": "28928:5:21"
																										},
																										"nativeSrc": "28928:26:21",
																										"nodeType": "YulFunctionCall",
																										"src": "28928:26:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28913:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "28913:6:21"
																								},
																								"nativeSrc": "28913:42:21",
																								"nodeType": "YulFunctionCall",
																								"src": "28913:42:21"
																							},
																							"nativeSrc": "28913:42:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "28913:42:21"
																						},
																						{
																							"nativeSrc": "28972:24:21",
																							"nodeType": "YulAssignment",
																							"src": "28972:24:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28986:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "28986:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28994:1:21",
																										"nodeType": "YulLiteral",
																										"src": "28994:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28982:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "28982:3:21"
																								},
																								"nativeSrc": "28982:14:21",
																								"nodeType": "YulFunctionCall",
																								"src": "28982:14:21"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "28972:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "28972:6:21"
																								}
																							]
																						},
																						{
																							"nativeSrc": "29013:31:21",
																							"nodeType": "YulAssignment",
																							"src": "29013:31:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "29030:9:21",
																										"nodeType": "YulIdentifier",
																										"src": "29030:9:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "29041:2:21",
																										"nodeType": "YulLiteral",
																										"src": "29041:2:21",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "29026:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "29026:3:21"
																								},
																								"nativeSrc": "29026:18:21",
																								"nodeType": "YulFunctionCall",
																								"src": "29026:18:21"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "29013:9:21",
																									"nodeType": "YulIdentifier",
																									"src": "29013:9:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "28861:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "28861:1:21"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28864:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "28864:7:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28858:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "28858:2:21"
																					},
																					"nativeSrc": "28858:14:21",
																					"nodeType": "YulFunctionCall",
																					"src": "28858:14:21"
																				},
																				"nativeSrc": "28850:208:21",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "28873:21:21",
																					"nodeType": "YulBlock",
																					"src": "28873:21:21",
																					"statements": [
																						{
																							"nativeSrc": "28875:17:21",
																							"nodeType": "YulAssignment",
																							"src": "28875:17:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "28884:1:21",
																										"nodeType": "YulIdentifier",
																										"src": "28884:1:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28887:4:21",
																										"nodeType": "YulLiteral",
																										"src": "28887:4:21",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28880:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "28880:3:21"
																								},
																								"nativeSrc": "28880:12:21",
																								"nodeType": "YulFunctionCall",
																								"src": "28880:12:21"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "28875:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "28875:1:21"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "28854:3:21",
																					"nodeType": "YulBlock",
																					"src": "28854:3:21",
																					"statements": []
																				},
																				"src": "28850:208:21"
																			},
																			{
																				"body": {
																					"nativeSrc": "29094:156:21",
																					"nodeType": "YulBlock",
																					"src": "29094:156:21",
																					"statements": [
																						{
																							"nativeSrc": "29112:43:21",
																							"nodeType": "YulVariableDeclaration",
																							"src": "29112:43:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "29139:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "29139:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "29144:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "29144:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "29135:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "29135:3:21"
																										},
																										"nativeSrc": "29135:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "29135:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "29129:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "29129:5:21"
																								},
																								"nativeSrc": "29129:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "29129:26:21"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "29116:9:21",
																									"nodeType": "YulTypedName",
																									"src": "29116:9:21",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "29179:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "29179:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "29206:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "29206:9:21"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "29221:6:21",
																														"nodeType": "YulIdentifier",
																														"src": "29221:6:21"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "29229:4:21",
																														"nodeType": "YulLiteral",
																														"src": "29229:4:21",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "29217:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "29217:3:21"
																												},
																												"nativeSrc": "29217:17:21",
																												"nodeType": "YulFunctionCall",
																												"src": "29217:17:21"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "29187:18:21",
																											"nodeType": "YulIdentifier",
																											"src": "29187:18:21"
																										},
																										"nativeSrc": "29187:48:21",
																										"nodeType": "YulFunctionCall",
																										"src": "29187:48:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "29172:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "29172:6:21"
																								},
																								"nativeSrc": "29172:64:21",
																								"nodeType": "YulFunctionCall",
																								"src": "29172:64:21"
																							},
																							"nativeSrc": "29172:64:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "29172:64:21"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "29077:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "29077:7:21"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "29086:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "29086:6:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "29074:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "29074:2:21"
																					},
																					"nativeSrc": "29074:19:21",
																					"nodeType": "YulFunctionCall",
																					"src": "29074:19:21"
																				},
																				"nativeSrc": "29071:179:21",
																				"nodeType": "YulIf",
																				"src": "29071:179:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "29270:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "29270:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "29284:6:21",
																											"nodeType": "YulIdentifier",
																											"src": "29284:6:21"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "29292:1:21",
																											"nodeType": "YulLiteral",
																											"src": "29292:1:21",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "29280:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "29280:3:21"
																									},
																									"nativeSrc": "29280:14:21",
																									"nodeType": "YulFunctionCall",
																									"src": "29280:14:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "29296:1:21",
																									"nodeType": "YulLiteral",
																									"src": "29296:1:21",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29276:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "29276:3:21"
																							},
																							"nativeSrc": "29276:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "29276:22:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "29263:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "29263:6:21"
																					},
																					"nativeSrc": "29263:36:21",
																					"nodeType": "YulFunctionCall",
																					"src": "29263:36:21"
																				},
																				"nativeSrc": "29263:36:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "29263:36:21"
																			}
																		]
																	},
																	"nativeSrc": "28691:618:21",
																	"nodeType": "YulCase",
																	"src": "28691:618:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28696:1:21",
																		"nodeType": "YulLiteral",
																		"src": "28696:1:21",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "29326:222:21",
																		"nodeType": "YulBlock",
																		"src": "29326:222:21",
																		"statements": [
																			{
																				"nativeSrc": "29340:14:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "29340:14:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "29353:1:21",
																					"nodeType": "YulLiteral",
																					"src": "29353:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "29344:5:21",
																						"nodeType": "YulTypedName",
																						"src": "29344:5:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "29377:67:21",
																					"nodeType": "YulBlock",
																					"src": "29377:67:21",
																					"statements": [
																						{
																							"nativeSrc": "29395:35:21",
																							"nodeType": "YulAssignment",
																							"src": "29395:35:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "29414:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "29414:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "29419:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "29419:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "29410:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "29410:3:21"
																										},
																										"nativeSrc": "29410:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "29410:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "29404:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "29404:5:21"
																								},
																								"nativeSrc": "29404:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "29404:26:21"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "29395:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "29395:5:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "29370:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "29370:6:21"
																				},
																				"nativeSrc": "29367:77:21",
																				"nodeType": "YulIf",
																				"src": "29367:77:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "29464:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "29464:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "29523:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "29523:5:21"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "29530:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "29530:6:21"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "29470:52:21",
																								"nodeType": "YulIdentifier",
																								"src": "29470:52:21"
																							},
																							"nativeSrc": "29470:67:21",
																							"nodeType": "YulFunctionCall",
																							"src": "29470:67:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "29457:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "29457:6:21"
																					},
																					"nativeSrc": "29457:81:21",
																					"nodeType": "YulFunctionCall",
																					"src": "29457:81:21"
																				},
																				"nativeSrc": "29457:81:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "29457:81:21"
																			}
																		]
																	},
																	"nativeSrc": "29318:230:21",
																	"nodeType": "YulCase",
																	"src": "29318:230:21",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "28671:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "28671:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28679:2:21",
																		"nodeType": "YulLiteral",
																		"src": "28679:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28668:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "28668:2:21"
																},
																"nativeSrc": "28668:14:21",
																"nodeType": "YulFunctionCall",
																"src": "28668:14:21"
															},
															"nativeSrc": "28661:887:21",
															"nodeType": "YulSwitch",
															"src": "28661:887:21"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "28159:1395:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "28240:4:21",
														"nodeType": "YulTypedName",
														"src": "28240:4:21",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "28246:3:21",
														"nodeType": "YulTypedName",
														"src": "28246:3:21",
														"type": ""
													}
												],
												"src": "28159:1395:21"
											},
											{
												"body": {
													"nativeSrc": "29618:40:21",
													"nodeType": "YulBlock",
													"src": "29618:40:21",
													"statements": [
														{
															"nativeSrc": "29629:22:21",
															"nodeType": "YulAssignment",
															"src": "29629:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29645:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "29645:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29639:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "29639:5:21"
																},
																"nativeSrc": "29639:12:21",
																"nodeType": "YulFunctionCall",
																"src": "29639:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "29629:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "29629:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "29560:98:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29601:5:21",
														"nodeType": "YulTypedName",
														"src": "29601:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "29611:6:21",
														"nodeType": "YulTypedName",
														"src": "29611:6:21",
														"type": ""
													}
												],
												"src": "29560:98:21"
											},
											{
												"body": {
													"nativeSrc": "29777:34:21",
													"nodeType": "YulBlock",
													"src": "29777:34:21",
													"statements": [
														{
															"nativeSrc": "29787:18:21",
															"nodeType": "YulAssignment",
															"src": "29787:18:21",
															"value": {
																"name": "pos",
																"nativeSrc": "29802:3:21",
																"nodeType": "YulIdentifier",
																"src": "29802:3:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "29787:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "29787:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "29664:147:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29749:3:21",
														"nodeType": "YulTypedName",
														"src": "29749:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29754:6:21",
														"nodeType": "YulTypedName",
														"src": "29754:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "29765:11:21",
														"nodeType": "YulTypedName",
														"src": "29765:11:21",
														"type": ""
													}
												],
												"src": "29664:147:21"
											},
											{
												"body": {
													"nativeSrc": "29925:278:21",
													"nodeType": "YulBlock",
													"src": "29925:278:21",
													"statements": [
														{
															"nativeSrc": "29935:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "29935:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29981:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "29981:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "29949:31:21",
																	"nodeType": "YulIdentifier",
																	"src": "29949:31:21"
																},
																"nativeSrc": "29949:38:21",
																"nodeType": "YulFunctionCall",
																"src": "29949:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "29939:6:21",
																	"nodeType": "YulTypedName",
																	"src": "29939:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29996:95:21",
															"nodeType": "YulAssignment",
															"src": "29996:95:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30079:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "30079:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30084:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "30084:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "30003:75:21",
																	"nodeType": "YulIdentifier",
																	"src": "30003:75:21"
																},
																"nativeSrc": "30003:88:21",
																"nodeType": "YulFunctionCall",
																"src": "30003:88:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29996:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "29996:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30139:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "30139:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30146:4:21",
																				"nodeType": "YulLiteral",
																				"src": "30146:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30135:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "30135:3:21"
																		},
																		"nativeSrc": "30135:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "30135:16:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30153:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "30153:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30158:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "30158:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "30100:34:21",
																	"nodeType": "YulIdentifier",
																	"src": "30100:34:21"
																},
																"nativeSrc": "30100:65:21",
																"nodeType": "YulFunctionCall",
																"src": "30100:65:21"
															},
															"nativeSrc": "30100:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "30100:65:21"
														},
														{
															"nativeSrc": "30174:23:21",
															"nodeType": "YulAssignment",
															"src": "30174:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30185:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "30185:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "30190:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "30190:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30181:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "30181:3:21"
																},
																"nativeSrc": "30181:16:21",
																"nodeType": "YulFunctionCall",
																"src": "30181:16:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30174:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "30174:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "29817:386:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29906:5:21",
														"nodeType": "YulTypedName",
														"src": "29906:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29913:3:21",
														"nodeType": "YulTypedName",
														"src": "29913:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29921:3:21",
														"nodeType": "YulTypedName",
														"src": "29921:3:21",
														"type": ""
													}
												],
												"src": "29817:386:21"
											},
											{
												"body": {
													"nativeSrc": "30343:137:21",
													"nodeType": "YulBlock",
													"src": "30343:137:21",
													"statements": [
														{
															"nativeSrc": "30354:100:21",
															"nodeType": "YulAssignment",
															"src": "30354:100:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30441:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "30441:6:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30450:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "30450:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "30361:79:21",
																	"nodeType": "YulIdentifier",
																	"src": "30361:79:21"
																},
																"nativeSrc": "30361:93:21",
																"nodeType": "YulFunctionCall",
																"src": "30361:93:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30354:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "30354:3:21"
																}
															]
														},
														{
															"nativeSrc": "30464:10:21",
															"nodeType": "YulAssignment",
															"src": "30464:10:21",
															"value": {
																"name": "pos",
																"nativeSrc": "30471:3:21",
																"nodeType": "YulIdentifier",
																"src": "30471:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30464:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "30464:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "30209:271:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30322:3:21",
														"nodeType": "YulTypedName",
														"src": "30322:3:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30328:6:21",
														"nodeType": "YulTypedName",
														"src": "30328:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30339:3:21",
														"nodeType": "YulTypedName",
														"src": "30339:3:21",
														"type": ""
													}
												],
												"src": "30209:271:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAKSStablecoin_$2772_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAKSStablecoin_$2772_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAKSStablecoin_$2772_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAKSStablecoin_$2772__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAKSStablecoin_$2772_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_ITokensBridge_$2815_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITokensBridge_$2815_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITokensBridge_$2815_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITokensBridge_$2815__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITokensBridge_$2815_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514(memPtr) {\n\n        mstore(add(memPtr, 0), \"Receiver not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient unlocked\")\n\n    }\n\n    function abi_encode_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cross-chain receiver not whiteli\")\n\n        mstore(add(memPtr, 32), \"sted\")\n\n    }\n\n    function abi_encode_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_address_t_uint256__to_t_uint64_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total shares must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"650": [
									{
										"length": 32,
										"start": 7080
									},
									{
										"length": 32,
										"start": 7165
									},
									{
										"length": 32,
										"start": 7642
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061020e575f3560e01c806391d1485411610117578063d547741f1161009f578063e2d6f6341161006e578063e2d6f634146107ac578063e336ac44146107d4578063e48bf15b14610810578063f7154b3c1461083a578063f72c0d8b146108645761020e565b8063d547741f146106e4578063d936547e1461070c578063dd62ed3e14610748578063dea7f112146107845761020e565b8063a217fddf116100e6578063a217fddf146105f0578063a9059cbb1461061a578063ad3cb1cc14610656578063c255f8c814610680578063c55d0f56146106a85761020e565b806391d14854146105465780639281aa0b1461058257806395d89b41146105aa578063a14d707c146105d45761020e565b806336568abe1161019a5780634f1ef286116101695780634f1ef2861461047257806352d1902d1461048e57806370a08231146104b85780638d898e34146104f45780639081e6441461051c5761020e565b806336568abe146103d05780633efb0be3146103f857806340c10f191461042257806342966c681461044a5761020e565b806318160ddd116101e157806318160ddd146102dc57806323b872dd14610306578063248a9ca3146103425780632f2ff15d1461037e578063313ce567146103a65761020e565b806301ffc9a71461021257806305fbf4481461024e57806306fdde0314610276578063095ea7b3146102a0575b5f5ffd5b34801561021d575f5ffd5b50610238600480360381019061023391906128eb565b61088e565b6040516102459190612930565b60405180910390f35b348015610259575f5ffd5b50610274600480360381019061026f91906129d6565b610907565b005b348015610281575f5ffd5b5061028a610989565b6040516102979190612a84565b60405180910390f35b3480156102ab575f5ffd5b506102c660048036038101906102c191906129d6565b610a27565b6040516102d39190612930565b60405180910390f35b3480156102e7575f5ffd5b506102f0610a49565b6040516102fd9190612ab3565b60405180910390f35b348015610311575f5ffd5b5061032c60048036038101906103279190612acc565b610a60565b6040516103399190612930565b60405180910390f35b34801561034d575f5ffd5b5061036860048036038101906103639190612b4f565b610b91565b6040516103759190612b89565b60405180910390f35b348015610389575f5ffd5b506103a4600480360381019061039f9190612ba2565b610bbb565b005b3480156103b1575f5ffd5b506103ba610bdd565b6040516103c79190612bfb565b60405180910390f35b3480156103db575f5ffd5b506103f660048036038101906103f19190612ba2565b610be5565b005b348015610403575f5ffd5b5061040c610c60565b6040516104199190612c6f565b60405180910390f35b34801561042d575f5ffd5b50610448600480360381019061044391906129d6565b610c84565b005b348015610455575f5ffd5b50610470600480360381019061046b9190612c88565b610cbd565b005b61048c60048036038101906104879190612ddf565b610cf5565b005b348015610499575f5ffd5b506104a2610d14565b6040516104af9190612b89565b60405180910390f35b3480156104c3575f5ffd5b506104de60048036038101906104d99190612e39565b610d45565b6040516104eb9190612ab3565b60405180910390f35b3480156104ff575f5ffd5b5061051a60048036038101906105159190612c88565b610d98565b005b348015610527575f5ffd5b50610530610dcd565b60405161053d9190612e84565b60405180910390f35b348015610551575f5ffd5b5061056c60048036038101906105679190612ba2565b610df2565b6040516105799190612930565b60405180910390f35b34801561058d575f5ffd5b506105a860048036038101906105a39190612ec7565b610e63565b005b3480156105b5575f5ffd5b506105be610ec8565b6040516105cb9190612a84565b60405180910390f35b6105ee60048036038101906105e99190612f42565b610f66565b005b3480156105fb575f5ffd5b50610604611172565b6040516106119190612b89565b60405180910390f35b348015610625575f5ffd5b50610640600480360381019061063b91906129d6565b611178565b60405161064d9190612930565b60405180910390f35b348015610661575f5ffd5b5061066a6112a7565b6040516106779190612a84565b60405180910390f35b34801561068b575f5ffd5b506106a660048036038101906106a19190612e39565b6112e0565b005b3480156106b3575f5ffd5b506106ce60048036038101906106c99190612c88565b611350565b6040516106db9190612ab3565b60405180910390f35b3480156106ef575f5ffd5b5061070a60048036038101906107059190612ba2565b611366565b005b348015610717575f5ffd5b50610732600480360381019061072d9190612e39565b611388565b60405161073f9190612930565b60405180910390f35b348015610753575f5ffd5b5061076e60048036038101906107699190612f92565b6113a5565b60405161077b9190612ab3565b60405180910390f35b34801561078f575f5ffd5b506107aa60048036038101906107a5919061306e565b611435565b005b3480156107b7575f5ffd5b506107d260048036038101906107cd91906129d6565b61170a565b005b3480156107df575f5ffd5b506107fa60048036038101906107f59190612e39565b611743565b6040516108079190612ab3565b60405180910390f35b34801561081b575f5ffd5b50610824611758565b6040516108319190612b89565b60405180910390f35b348015610845575f5ffd5b5061084e61177c565b60405161085b9190612ab3565b60405180910390f35b34801561086f575f5ffd5b50610878611782565b6040516108859190612b89565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061090057506108ff826117a6565b5b9050919050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b6109318161180f565b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461097d9190613170565b92505081905550505050565b60605f610994611823565b90508060030180546109a5906131d0565b80601f01602080910402602001604051908101604052809291908181526020018280546109d1906131d0565b8015610a1c5780601f106109f357610100808354040283529160200191610a1c565b820191905f5260205f20905b8154815290600101906020018083116109ff57829003601f168201915b505050505091505090565b5f5f610a3161184a565b9050610a3e818585611851565b600191505092915050565b5f5f610a53611823565b9050806002015491505090565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae19061324a565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b3286610d45565b610b3c9190613268565b1015610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b74906132e5565b60405180910390fd5b610b88848484611863565b90509392505050565b5f5f610b9b611891565b9050805f015f8481526020019081526020015f2060010154915050919050565b610bc482610b91565b610bcd8161180f565b610bd783836118b8565b50505050565b5f6012905090565b610bed61184a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c51576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c5b82826119b0565b505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610cae8161180f565b610cb88383611aa8565b505050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610ce78161180f565b610cf13383611b27565b5050565b610cfd611ba6565b610d0682611c8c565b610d108282611cba565b5050565b5f610d1d611dd8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f5f610d4f611823565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b610dc28161180f565b816002819055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f610dfc611891565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f5f1b610e6f8161180f565b8160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b60605f610ed3611823565b9050806004018054610ee4906131d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610f10906131d0565b8015610f5b5780601f10610f3257610100808354040283529160200191610f5b565b820191905f5260205f20905b815481529060010190602001808311610f3e57829003601f168201915b505050505091505090565b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690613373565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461103733610d45565b6110419190613268565b1015611082576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611079906132e5565b60405180910390fd5b61108d333083611e5f565b8060035f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110d99190613170565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ee5b22348585856040518563ffffffff1660e01b815260040161113f939291906133af565b5f604051808303818588803b158015611156575f5ffd5b505af1158015611168573d5f5f3e3d5ffd5b5050505050505050565b5f5f1b81565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f99061324a565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461124a33610d45565b6112549190613268565b1015611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c906132e5565b60405180910390fd5b61129f8383611f4f565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b61130a8161180f565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f6002548261135f91906133e4565b9050919050565b61136f82610b91565b6113788161180f565b61138283836119b0565b50505050565b6004602052805f5260405f205f915054906101000a900460ff1681565b5f5f6113af611823565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f61143e611f71565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156114865750825b90505f60018367ffffffffffffffff161480156114b957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156114c7575080155b156114fe576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561154b576001855f0160086101000a81548160ff0219169083151502179055505b5f8a1161158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158490613495565b60405180910390fd5b6115978c8c611f84565b61159f611f9a565b6115a7611fa4565b875f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002819055506116415f5f1b8a6118b8565b5061166c7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b876118b8565b506116977f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a6118b8565b506116a2868b611aa8565b83156116fc575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516116f391906134ec565b60405180910390a15b505050505050505050505050565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b6117348161180f565b61173e8383611b27565b505050565b6003602052805f5260405f205f915090505481565b7f77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b81565b60025481565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6118208161181b61184a565b611fae565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61185e8383836001611fff565b505050565b5f5f61186d61184a565b905061187a8582856121dc565b611885858585611e5f565b60019150509392505050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f5f6118c2611891565b90506118ce8484610df2565b6119a5576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061194161184a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506119aa565b5f9150505b92915050565b5f5f6119ba611891565b90506119c68484610df2565b15611a9d575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611a3961184a565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050611aa2565b5f9150505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b18575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b0f9190613505565b60405180910390fd5b611b235f838361226f565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b97575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b8e9190613505565b60405180910390fd5b611ba2825f8361226f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611c5357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611c3a61249e565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611c8a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3611cb68161180f565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611d2257506040513d601f19601f82011682018060405250810190611d1f9190613532565b60015b611d6357816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611d5a9190613505565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114611dc957806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611dc09190612b89565b60405180910390fd5b611dd383836124f1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611e5d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ecf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ec69190613505565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f3f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611f369190613505565b60405180910390fd5b611f4a83838361226f565b505050565b5f5f611f5961184a565b9050611f66818585611e5f565b600191505092915050565b5f5f611f7b612563565b90508091505090565b611f8c61258c565b611f9682826125cc565b5050565b611fa261258c565b565b611fac61258c565b565b611fb88282610df2565b611ffb5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611ff292919061355d565b60405180910390fd5b5050565b5f612008611823565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361207a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016120719190613505565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120ea575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016120e19190613505565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156121d5578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516121cc9190612ab3565b60405180910390a35b5050505050565b5f6121e784846113a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015612269578181101561225a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161225193929190613584565b60405180910390fd5b61226884848484035f611fff565b5b50505050565b5f612278611823565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122cc5781816002015f8282546122c09190613170565b9250508190555061239e565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015612357578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161234e93929190613584565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123e75781816002015f8282540392505081905550612433565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124909190612ab3565b60405180910390a350505050565b5f6124ca7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b612608565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6124fa82612611565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156125565761255082826126da565b5061255f565b61255e61275a565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b612594612796565b6125ca576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125d461258c565b5f6125dd611823565b9050828160030190816125f09190613750565b50818160040190816126029190613750565b50505050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361266c57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016126639190613505565b60405180910390fd5b806126987f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b612608565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516127039190613863565b5f60405180830381855af49150503d805f811461273b576040519150601f19603f3d011682016040523d82523d5f602084013e612740565b606091505b50915091506127508583836127b4565b9250505092915050565b5f341115612794576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61279f611f71565b5f0160089054906101000a900460ff16905090565b6060826127c9576127c482612841565b612839565b5f82511480156127ef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561283157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128289190613505565b60405180910390fd5b81905061283a565b5b9392505050565b5f815111156128535780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6128ca81612896565b81146128d4575f5ffd5b50565b5f813590506128e5816128c1565b92915050565b5f60208284031215612900576128ff61288e565b5b5f61290d848285016128d7565b91505092915050565b5f8115159050919050565b61292a81612916565b82525050565b5f6020820190506129435f830184612921565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61297282612949565b9050919050565b61298281612968565b811461298c575f5ffd5b50565b5f8135905061299d81612979565b92915050565b5f819050919050565b6129b5816129a3565b81146129bf575f5ffd5b50565b5f813590506129d0816129ac565b92915050565b5f5f604083850312156129ec576129eb61288e565b5b5f6129f98582860161298f565b9250506020612a0a858286016129c2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612a5682612a14565b612a608185612a1e565b9350612a70818560208601612a2e565b612a7981612a3c565b840191505092915050565b5f6020820190508181035f830152612a9c8184612a4c565b905092915050565b612aad816129a3565b82525050565b5f602082019050612ac65f830184612aa4565b92915050565b5f5f5f60608486031215612ae357612ae261288e565b5b5f612af08682870161298f565b9350506020612b018682870161298f565b9250506040612b12868287016129c2565b9150509250925092565b5f819050919050565b612b2e81612b1c565b8114612b38575f5ffd5b50565b5f81359050612b4981612b25565b92915050565b5f60208284031215612b6457612b6361288e565b5b5f612b7184828501612b3b565b91505092915050565b612b8381612b1c565b82525050565b5f602082019050612b9c5f830184612b7a565b92915050565b5f5f60408385031215612bb857612bb761288e565b5b5f612bc585828601612b3b565b9250506020612bd68582860161298f565b9150509250929050565b5f60ff82169050919050565b612bf581612be0565b82525050565b5f602082019050612c0e5f830184612bec565b92915050565b5f819050919050565b5f612c37612c32612c2d84612949565b612c14565b612949565b9050919050565b5f612c4882612c1d565b9050919050565b5f612c5982612c3e565b9050919050565b612c6981612c4f565b82525050565b5f602082019050612c825f830184612c60565b92915050565b5f60208284031215612c9d57612c9c61288e565b5b5f612caa848285016129c2565b91505092915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612cf182612a3c565b810181811067ffffffffffffffff82111715612d1057612d0f612cbb565b5b80604052505050565b5f612d22612885565b9050612d2e8282612ce8565b919050565b5f67ffffffffffffffff821115612d4d57612d4c612cbb565b5b612d5682612a3c565b9050602081019050919050565b828183375f83830152505050565b5f612d83612d7e84612d33565b612d19565b905082815260208101848484011115612d9f57612d9e612cb7565b5b612daa848285612d63565b509392505050565b5f82601f830112612dc657612dc5612cb3565b5b8135612dd6848260208601612d71565b91505092915050565b5f5f60408385031215612df557612df461288e565b5b5f612e028582860161298f565b925050602083013567ffffffffffffffff811115612e2357612e22612892565b5b612e2f85828601612db2565b9150509250929050565b5f60208284031215612e4e57612e4d61288e565b5b5f612e5b8482850161298f565b91505092915050565b5f612e6e82612c3e565b9050919050565b612e7e81612e64565b82525050565b5f602082019050612e975f830184612e75565b92915050565b612ea681612916565b8114612eb0575f5ffd5b50565b5f81359050612ec181612e9d565b92915050565b5f5f60408385031215612edd57612edc61288e565b5b5f612eea8582860161298f565b9250506020612efb85828601612eb3565b9150509250929050565b5f67ffffffffffffffff82169050919050565b612f2181612f05565b8114612f2b575f5ffd5b50565b5f81359050612f3c81612f18565b92915050565b5f5f5f60608486031215612f5957612f5861288e565b5b5f612f6686828701612f2e565b9350506020612f778682870161298f565b9250506040612f88868287016129c2565b9150509250925092565b5f5f60408385031215612fa857612fa761288e565b5b5f612fb58582860161298f565b9250506020612fc68582860161298f565b9150509250929050565b5f67ffffffffffffffff821115612fea57612fe9612cbb565b5b612ff382612a3c565b9050602081019050919050565b5f61301261300d84612fd0565b612d19565b90508281526020810184848401111561302e5761302d612cb7565b5b613039848285612d63565b509392505050565b5f82601f83011261305557613054612cb3565b5b8135613065848260208601613000565b91505092915050565b5f5f5f5f5f5f5f60e0888a0312156130895761308861288e565b5b5f88013567ffffffffffffffff8111156130a6576130a5612892565b5b6130b28a828b01613041565b975050602088013567ffffffffffffffff8111156130d3576130d2612892565b5b6130df8a828b01613041565b96505060406130f08a828b016129c2565b95505060606131018a828b0161298f565b94505060806131128a828b0161298f565b93505060a06131238a828b0161298f565b92505060c06131348a828b0161298f565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61317a826129a3565b9150613185836129a3565b925082820190508082111561319d5761319c613143565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806131e757607f821691505b6020821081036131fa576131f96131a3565b5b50919050565b7f5265636569766572206e6f742077686974656c697374656400000000000000005f82015250565b5f613234601883612a1e565b915061323f82613200565b602082019050919050565b5f6020820190508181035f83015261326181613228565b9050919050565b5f613272826129a3565b915061327d836129a3565b925082820390508181111561329557613294613143565b5b92915050565b7f496e73756666696369656e7420756e6c6f636b656400000000000000000000005f82015250565b5f6132cf601583612a1e565b91506132da8261329b565b602082019050919050565b5f6020820190508181035f8301526132fc816132c3565b9050919050565b7f43726f73732d636861696e207265636569766572206e6f742077686974656c695f8201527f7374656400000000000000000000000000000000000000000000000000000000602082015250565b5f61335d602483612a1e565b915061336882613303565b604082019050919050565b5f6020820190508181035f83015261338a81613351565b9050919050565b61339a81612f05565b82525050565b6133a981612968565b82525050565b5f6060820190506133c25f830186613391565b6133cf60208301856133a0565b6133dc6040830184612aa4565b949350505050565b5f6133ee826129a3565b91506133f9836129a3565b9250828202613407816129a3565b9150828204841483151761341e5761341d613143565b5b5092915050565b7f546f74616c20736861726573206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f61347f602683612a1e565b915061348a82613425565b604082019050919050565b5f6020820190508181035f8301526134ac81613473565b9050919050565b5f819050919050565b5f6134d66134d16134cc846134b3565b612c14565b612f05565b9050919050565b6134e6816134bc565b82525050565b5f6020820190506134ff5f8301846134dd565b92915050565b5f6020820190506135185f8301846133a0565b92915050565b5f8151905061352c81612b25565b92915050565b5f602082840312156135475761354661288e565b5b5f6135548482850161351e565b91505092915050565b5f6040820190506135705f8301856133a0565b61357d6020830184612b7a565b9392505050565b5f6060820190506135975f8301866133a0565b6135a46020830185612aa4565b6135b16040830184612aa4565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026136157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826135da565b61361f86836135da565b95508019841693508086168417925050509392505050565b5f61365161364c613647846129a3565b612c14565b6129a3565b9050919050565b5f819050919050565b61366a83613637565b61367e61367682613658565b8484546135e6565b825550505050565b5f5f905090565b613695613686565b6136a0818484613661565b505050565b5b818110156136c3576136b85f8261368d565b6001810190506136a6565b5050565b601f821115613708576136d9816135b9565b6136e2846135cb565b810160208510156136f1578190505b6137056136fd856135cb565b8301826136a5565b50505b505050565b5f82821c905092915050565b5f6137285f198460080261370d565b1980831691505092915050565b5f6137408383613719565b9150826002028217905092915050565b61375982612a14565b67ffffffffffffffff81111561377257613771612cbb565b5b61377c82546131d0565b6137878282856136c7565b5f60209050601f8311600181146137b8575f84156137a6578287015190505b6137b08582613735565b865550613817565b601f1984166137c6866135b9565b5f5b828110156137ed578489015182556001820191506020850194506020810190506137c8565b8683101561380a5784890151613806601f891682613719565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f61383d8261381f565b6138478185613829565b9350613857818560208601612a2e565b80840191505092915050565b5f61386e8284613833565b91508190509291505056fea26469706673582212200975fa70692f3ebea0e374cad6627675a6d8a550b62d5ee68fbf475b5a296a6364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xE2D6F634 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE2D6F634 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xE336AC44 EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xE48BF15B EQ PUSH2 0x810 JUMPI DUP1 PUSH4 0xF7154B3C EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x864 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDEA7F112 EQ PUSH2 0x784 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xC255F8C8 EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xC55D0F56 EQ PUSH2 0x6A8 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x9281AA0B EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xA14D707C EQ PUSH2 0x5D4 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x8D898E34 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x9081E644 EQ PUSH2 0x51C JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x3EFB0BE3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x44A JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A6 JUMPI PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x5FBF448 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2B4F JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BA PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0xD98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x530 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x2E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5BE PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x66A PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x12E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x70A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x2BA2 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x732 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x76E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST PUSH2 0x1435 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH2 0x170A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x824 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x84E PUSH2 0x177C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x878 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x900 JUMPI POP PUSH2 0x8FF DUP3 PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x931 DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x994 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x9A5 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA31 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xA3E DUP2 DUP6 DUP6 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA53 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB32 DUP7 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB88 DUP5 DUP5 DUP5 PUSH2 0x1863 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB9B PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC4 DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xBCD DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xBD7 DUP4 DUP4 PUSH2 0x18B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBED PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5B DUP3 DUP3 PUSH2 0x19B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xCAE DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xCB8 DUP4 DUP4 PUSH2 0x1AA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xCE7 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0xCF1 CALLER DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0xD06 DUP3 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xD10 DUP3 DUP3 PUSH2 0x1CBA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD1D PUSH2 0x1DD8 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD4F PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0xDC2 DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xDFC PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xE6F DUP2 PUSH2 0x180F JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xED3 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xEE4 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF10 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1037 CALLER PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108D CALLER ADDRESS DUP4 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1EE5B22 CALLVALUE DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33AF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1156 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1168 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F9 SWAP1 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x124A CALLER PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1254 SWAP2 SWAP1 PUSH2 0x3268 JUMP JUMPDEST LT ISZERO PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F DUP4 DUP4 PUSH2 0x1F4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x130A DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x136F DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x1378 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x1382 DUP4 DUP4 PUSH2 0x19B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x13AF PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x143E PUSH2 0x1F71 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1486 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14B9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x14C7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x154B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 DUP11 GT PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1597 DUP13 DUP13 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x159F PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x15A7 PUSH2 0x1FA4 JUMP JUMPDEST DUP8 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1641 PUSH0 PUSH0 SHL DUP11 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x166C PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B DUP8 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x1697 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH2 0x16A2 DUP7 DUP12 PUSH2 0x1AA8 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x16FC JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B PUSH2 0x1734 DUP2 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x173E DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x181B PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x185E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x186D PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x187A DUP6 DUP3 DUP6 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x1885 DUP6 DUP6 DUP6 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x18C2 PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CE DUP5 DUP5 PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0x19A5 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1941 PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x19AA JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x19BA PUSH2 0x1891 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C6 DUP5 DUP5 PUSH2 0xDF2 JUMP JUMPDEST ISZERO PUSH2 0x1A9D JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A39 PUSH2 0x184A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1AA2 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B23 PUSH0 DUP4 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B97 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA2 DUP3 PUSH0 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C53 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C3A PUSH2 0x249E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C8A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x1CB6 DUP2 PUSH2 0x180F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D22 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1F SWAP2 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D63 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5A SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1DC9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC0 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DD3 DUP4 DUP4 PUSH2 0x24F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4A DUP4 DUP4 DUP4 PUSH2 0x226F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1F59 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x1F66 DUP2 DUP6 DUP6 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1F7B PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F8C PUSH2 0x258C JUMP JUMPDEST PUSH2 0x1F96 DUP3 DUP3 PUSH2 0x25CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1FA2 PUSH2 0x258C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FAC PUSH2 0x258C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FB8 DUP3 DUP3 PUSH2 0xDF2 JUMP JUMPDEST PUSH2 0x1FFB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF2 SWAP3 SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2008 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x207A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2071 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x21D5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x21CC SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21E7 DUP5 DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x2269 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x225A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2268 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2278 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22CC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22C0 SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x239E JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2357 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23E7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2433 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2490 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x2608 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24FA DUP3 PUSH2 0x2611 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2550 DUP3 DUP3 PUSH2 0x26DA JUMP JUMPDEST POP PUSH2 0x255F JUMP JUMPDEST PUSH2 0x255E PUSH2 0x275A JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2594 PUSH2 0x2796 JUMP JUMPDEST PUSH2 0x25CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x25D4 PUSH2 0x258C JUMP JUMPDEST PUSH0 PUSH2 0x25DD PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x25F0 SWAP2 SWAP1 PUSH2 0x3750 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2602 SWAP2 SWAP1 PUSH2 0x3750 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x266C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2663 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2698 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x2608 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2703 SWAP2 SWAP1 PUSH2 0x3863 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x273B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2750 DUP6 DUP4 DUP4 PUSH2 0x27B4 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2794 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x279F PUSH2 0x1F71 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27C9 JUMPI PUSH2 0x27C4 DUP3 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x2839 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27EF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2831 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2828 SWAP2 SWAP1 PUSH2 0x3505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x283A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2853 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CA DUP2 PUSH2 0x2896 JUMP JUMPDEST DUP2 EQ PUSH2 0x28D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28E5 DUP2 PUSH2 0x28C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2900 JUMPI PUSH2 0x28FF PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290D DUP5 DUP3 DUP6 ADD PUSH2 0x28D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292A DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2943 PUSH0 DUP4 ADD DUP5 PUSH2 0x2921 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2972 DUP3 PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2982 DUP2 PUSH2 0x2968 JUMP JUMPDEST DUP2 EQ PUSH2 0x298C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299D DUP2 PUSH2 0x2979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B5 DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x29BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D0 DUP2 PUSH2 0x29AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0A DUP6 DUP3 DUP7 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A56 DUP3 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x2A60 DUP2 DUP6 PUSH2 0x2A1E JUMP JUMPDEST SWAP4 POP PUSH2 0x2A70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2A79 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 DUP5 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AAD DUP2 PUSH2 0x29A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AE3 JUMPI PUSH2 0x2AE2 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AF0 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B01 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B12 DUP7 DUP3 DUP8 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B2E DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x2B38 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B49 DUP2 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B64 JUMPI PUSH2 0x2B63 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B71 DUP5 DUP3 DUP6 ADD PUSH2 0x2B3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B83 DUP2 PUSH2 0x2B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x2B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB8 JUMPI PUSH2 0x2BB7 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BC5 DUP6 DUP3 DUP7 ADD PUSH2 0x2B3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BD6 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF5 DUP2 PUSH2 0x2BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C0E PUSH0 DUP4 ADD DUP5 PUSH2 0x2BEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C37 PUSH2 0x2C32 PUSH2 0x2C2D DUP5 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C48 DUP3 PUSH2 0x2C1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C59 DUP3 PUSH2 0x2C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C69 DUP2 PUSH2 0x2C4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C82 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9D JUMPI PUSH2 0x2C9C PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CAA DUP5 DUP3 DUP6 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2CF1 DUP3 PUSH2 0x2A3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D10 JUMPI PUSH2 0x2D0F PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D22 PUSH2 0x2885 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D2E DUP3 DUP3 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D4D JUMPI PUSH2 0x2D4C PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x2D56 DUP3 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D83 PUSH2 0x2D7E DUP5 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D9F JUMPI PUSH2 0x2D9E PUSH2 0x2CB7 JUMP JUMPDEST JUMPDEST PUSH2 0x2DAA DUP5 DUP3 DUP6 PUSH2 0x2D63 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DC6 JUMPI PUSH2 0x2DC5 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DD6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DF5 JUMPI PUSH2 0x2DF4 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E02 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x2E2F DUP6 DUP3 DUP7 ADD PUSH2 0x2DB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E4E JUMPI PUSH2 0x2E4D PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E5B DUP5 DUP3 DUP6 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E6E DUP3 PUSH2 0x2C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7E DUP2 PUSH2 0x2E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E97 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA6 DUP2 PUSH2 0x2916 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EB0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC1 DUP2 PUSH2 0x2E9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EDD JUMPI PUSH2 0x2EDC PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EEA DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2EFB DUP6 DUP3 DUP7 ADD PUSH2 0x2EB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F21 DUP2 PUSH2 0x2F05 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F2B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F3C DUP2 PUSH2 0x2F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F59 JUMPI PUSH2 0x2F58 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F66 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F77 DUP7 DUP3 DUP8 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F88 DUP7 DUP3 DUP8 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA8 JUMPI PUSH2 0x2FA7 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FB5 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FC6 DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FEA JUMPI PUSH2 0x2FE9 PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x2FF3 DUP3 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3012 PUSH2 0x300D DUP5 PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x302E JUMPI PUSH2 0x302D PUSH2 0x2CB7 JUMP JUMPDEST JUMPDEST PUSH2 0x3039 DUP5 DUP3 DUP6 PUSH2 0x2D63 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3055 JUMPI PUSH2 0x3054 PUSH2 0x2CB3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3089 JUMPI PUSH2 0x3088 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30A6 JUMPI PUSH2 0x30A5 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x30B2 DUP11 DUP3 DUP12 ADD PUSH2 0x3041 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D2 PUSH2 0x2892 JUMP JUMPDEST JUMPDEST PUSH2 0x30DF DUP11 DUP3 DUP12 ADD PUSH2 0x3041 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30F0 DUP11 DUP3 DUP12 ADD PUSH2 0x29C2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3101 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3112 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3123 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3134 DUP11 DUP3 DUP12 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x317A DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3185 DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x319D JUMPI PUSH2 0x319C PUSH2 0x3143 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x31A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636569766572206E6F742077686974656C69737465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3234 PUSH1 0x18 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x323F DUP3 PUSH2 0x3200 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3261 DUP2 PUSH2 0x3228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3272 DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x327D DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3295 JUMPI PUSH2 0x3294 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420756E6C6F636B65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32CF PUSH1 0x15 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x32DA DUP3 PUSH2 0x329B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32FC DUP2 PUSH2 0x32C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F73732D636861696E207265636569766572206E6F742077686974656C69 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x335D PUSH1 0x24 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x3368 DUP3 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x338A DUP2 PUSH2 0x3351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339A DUP2 PUSH2 0x2F05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33A9 DUP2 PUSH2 0x2968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x3391 JUMP JUMPDEST PUSH2 0x33CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x33DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33EE DUP3 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F9 DUP4 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3407 DUP2 PUSH2 0x29A3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x341E JUMPI PUSH2 0x341D PUSH2 0x3143 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20736861726573206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x347F PUSH1 0x26 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x348A DUP3 PUSH2 0x3425 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x34AC DUP2 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34D6 PUSH2 0x34D1 PUSH2 0x34CC DUP5 PUSH2 0x34B3 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E6 DUP2 PUSH2 0x34BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34FF PUSH0 DUP4 ADD DUP5 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3518 PUSH0 DUP4 ADD DUP5 PUSH2 0x33A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x352C DUP2 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3547 JUMPI PUSH2 0x3546 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x351E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3570 PUSH0 DUP4 ADD DUP6 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x357D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3597 PUSH0 DUP4 ADD DUP7 PUSH2 0x33A0 JUMP JUMPDEST PUSH2 0x35A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2AA4 JUMP JUMPDEST PUSH2 0x35B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3615 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x35DA JUMP JUMPDEST PUSH2 0x361F DUP7 DUP4 PUSH2 0x35DA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3651 PUSH2 0x364C PUSH2 0x3647 DUP5 PUSH2 0x29A3 JUMP JUMPDEST PUSH2 0x2C14 JUMP JUMPDEST PUSH2 0x29A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x366A DUP4 PUSH2 0x3637 JUMP JUMPDEST PUSH2 0x367E PUSH2 0x3676 DUP3 PUSH2 0x3658 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x35E6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3695 PUSH2 0x3686 JUMP JUMPDEST PUSH2 0x36A0 DUP2 DUP5 DUP5 PUSH2 0x3661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x36C3 JUMPI PUSH2 0x36B8 PUSH0 DUP3 PUSH2 0x368D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3708 JUMPI PUSH2 0x36D9 DUP2 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x36E2 DUP5 PUSH2 0x35CB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x36F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3705 PUSH2 0x36FD DUP6 PUSH2 0x35CB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x36A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3728 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x370D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3740 DUP4 DUP4 PUSH2 0x3719 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3759 DUP3 PUSH2 0x2A14 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3772 JUMPI PUSH2 0x3771 PUSH2 0x2CBB JUMP JUMPDEST JUMPDEST PUSH2 0x377C DUP3 SLOAD PUSH2 0x31D0 JUMP JUMPDEST PUSH2 0x3787 DUP3 DUP3 DUP6 PUSH2 0x36C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x37B8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x37A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x37B0 DUP6 DUP3 PUSH2 0x3735 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3817 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x37C6 DUP7 PUSH2 0x35B9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37ED JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x380A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3806 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3719 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x383D DUP3 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3847 DUP2 DUP6 PUSH2 0x3829 JUMP JUMPDEST SWAP4 POP PUSH2 0x3857 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x386E DUP3 DUP5 PUSH2 0x3833 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH22 0xFA70692F3EBEA0E374CAD6627675A6D8A550B62D5EE6 DUP16 0xBF SELFBALANCE JUMPDEST GAS 0x29 PUSH11 0x6364736F6C634300081E00 CALLER ",
							"sourceMap": "445:3873:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:133:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5191:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3077:311:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3735:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:30:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1944:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4087:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:131:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;727:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4034:140:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2954:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3459:538:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2774:295:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2328:113:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2588:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;872:43:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4689:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041:747:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2056:123;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;818:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;621:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;769:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;2187:133:20:-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;2306:6:20::1;2281:12;:21;2294:7;2281:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2187:133:::0;;;:::o;2697:144:3:-;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5191:186::-;5264:4;5280:13;5296:12;:10;:12::i;:::-;5280:28;;5318:31;5327:5;5334:7;5343:5;5318:8;:31::i;:::-;5366:4;5359:11;;;5191:186;;;;:::o;3877:152::-;3929:7;3948:22;3973:18;:16;:18::i;:::-;3948:43;;4008:1;:14;;;4001:21;;;3877:152;:::o;3077:311:20:-;3166:4;3191:11;:15;3203:2;3191:15;;;;;;;;;;;;;;;;;;;;;;;;;3183:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3294:6;3272:12;:18;3285:4;3272:18;;;;;;;;;;;;;;;;3254:15;3264:4;3254:9;:15::i;:::-;:36;;;;:::i;:::-;:46;;3246:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3344:36;3363:4;3369:2;3373:6;3344:18;:36::i;:::-;3337:43;;3077:311;;;;;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;3735:82:3:-;3784:5;3808:2;3801:9;;3735:82;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;690:30:20:-;;;;;;;;;;;;;:::o;1828:108::-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;1911:17:20::1;1917:2;1921:6;1911:5;:17::i;:::-;1828:108:::0;;;:::o;1944:104::-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;2015:25:20::1;2021:10;2033:6;2015:5;:25::i;:::-;1944:104:::0;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:10::1;3803:32:2;;3796:39;;3708:134:::0;:::o;4087:171:3:-;4152:7;4171:22;4196:18;:16;:18::i;:::-;4171:43;;4231:1;:11;;:20;4243:7;4231:20;;;;;;;;;;;;;;;;4224:27;;;4087:171;;;:::o;2449:131:20:-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;2560:12:20::1;2540:17;:32;;;;2449:131:::0;;:::o;727:33::-;;;;;;;;;;;;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;4034:140:20:-;2362:4:0;4106:18:20;;3191:16:0;3202:4;3191:10;:16::i;:::-;4160:6:20::1;4137:11;:20;4149:7;4137:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4034:140:::0;;;:::o;2954:148:3:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;3459:538:20:-;3624:11;:21;3636:8;3624:21;;;;;;;;;;;;;;;;;;;;;;;;;3616:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3757:6;3729:12;:24;3742:10;3729:24;;;;;;;;;;;;;;;;3705:21;3715:10;3705:9;:21::i;:::-;:48;;;;:::i;:::-;:58;;3697:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3802:44;3812:10;3832:4;3839:6;3802:9;:44::i;:::-;3888:6;3857:12;:27;3878:4;3857:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;3907:12;;;;;;;;;;;:20;;;3935:9;3946:24;3972:8;3982:6;3907:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:538;;;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;2774:295:20:-;2845:4;2870:11;:15;2882:2;2870:15;;;;;;;;;;;;;;;;;;;;;;;;;2862:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2985:6;2957:12;:24;2970:10;2957:24;;;;;;;;;;;;;;;;2933:21;2943:10;2933:9;:21::i;:::-;:48;;;;:::i;:::-;:58;;2925:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3035:26;3050:2;3054:6;3035:14;:26::i;:::-;3028:33;;2774:295;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;2328:113:20:-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;2432:1:20::1;2408:12;:21;2421:7;2408:21;;;;;;;;;;;;;;;:25;;;;2328:113:::0;;:::o;2588:125::-;2652:7;2688:17;;2679:6;:26;;;;:::i;:::-;2672:33;;2588:125;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;872:43:20:-;;;;;;;;;;;;;;;;;;;;;;:::o;4689:195:3:-;4769:7;4788:22;4813:18;:16;:18::i;:::-;4788:43;;4848:1;:13;;:20;4862:5;4848:20;;;;;;;;;;;;;;;:29;4869:7;4848:29;;;;;;;;;;;;;;;;4841:36;;;4689:195;;;;:::o;1041:747:20:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1320:1:20::1;1306:11;:15;1298:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1377:26;1390:4;1396:6;1377:12;:26::i;:::-;1414:22;:20;:22::i;:::-;1447:24;:22;:24::i;:::-;1510:9;1484:8;;:36;;;;;;;;;;;;;;;;;;1560:13;1531:12;;:43;;;;;;;;;;;;;;;;;;1605:4;1585:17;:24;;;;1622:37;2362:4:0;1633:18:20;;1653:5;1622:10;:37::i;:::-;;1670:29;658:23;1693:5;1670:10;:29::i;:::-;;1710:32;588:26;1736:5;1710:10;:32::i;:::-;;1755:25;1761:5;1768:11;1755:5;:25::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1041:747:20;;;;;;;:::o;2056:123::-;658:23;3191:16:0;3202:4;3191:10;:16::i;:::-;2149:22:20::1;2155:7;2164:6;2149:5;:22::i;:::-;2056:123:::0;;;:::o;818:47::-;;;;;;;;;;;;;;;;;:::o;621:60::-;658:23;621:60;:::o;769:32::-;;;;:::o;548:66::-;588:26;548:66;:::o;1035:146:5:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;4148:103:0:-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;1947:153:3:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;9982:128:3:-;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;:::-;9982:128;;;:::o;5969:244::-;6056:4;6072:15;6090:12;:10;:12::i;:::-;6072:30;;6112:37;6128:4;6134:7;6143:5;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;6202:4;6195:11;;;5969:244;;;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;7894:388::-;7972:4;7988:30;8021:26;:24;:26::i;:::-;7988:59;;8061:22;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:1;:8;;:14;8108:4;8099:14;;;;;;;;;;;:22;;:31;8122:7;8099:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8184:12;:10;:12::i;:::-;8157:40;;8175:7;8157:40;;8169:4;8157:40;;;;;;;;;;8218:4;8211:11;;;;;8057:219;8260:5;8253:12;;;7894:388;;;;;:::o;8714:208:3:-;8803:1;8784:21;;:7;:21;;;8780:91;;8857:1;8828:32;;;;;;;;;;;:::i;:::-;;;;;;;;8780:91;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;:::-;8714:208;;:::o;9240:206::-;9329:1;9310:21;;:7;:21;;;9306:89;;9381:1;9354:30;;;;;;;;;;;:::i;:::-;;;;;;;;9306:89;9404:35;9412:7;9429:1;9433:5;9404:7;:35::i;:::-;9240:206;;:::o;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;4217:98:20:-;588:26;3191:16:0;3202:4;3191:10;:16::i;:::-;4217:98:20;;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:10;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;6586:300:3:-;6685:1;6669:18;;:4;:18;;;6665:86;;6737:1;6710:30;;;;;;;;;;;:::i;:::-;;;;;;;;6665:86;6778:1;6764:16;;:2;:16;;;6760:86;;6832:1;6803:32;;;;;;;;;;;:::i;:::-;;;;;;;;6760:86;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;:::-;6586:300;;;:::o;4453:178::-;4522:4;4538:13;4554:12;:10;:12::i;:::-;4538:28;;4576:27;4586:5;4593:2;4597:5;4576:9;:27::i;:::-;4620:4;4613:11;;;4453:178;;;;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2263:147:3:-;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;3231:65:0:-;6929:20:1;:18;:20::i;:::-;3231:65:0:o;2970:67:2:-;6929:20:1;:18;:20::i;:::-;2970:67:2:o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;10957:487:3:-;11065:22;11090:18;:16;:18::i;:::-;11065:43;;11139:1;11122:19;;:5;:19;;;11118:89;;11193:1;11164:32;;;;;;;;;;;:::i;:::-;;;;;;;;11118:89;11239:1;11220:21;;:7;:21;;;11216:90;;11292:1;11264:31;;;;;;;;;;;:::i;:::-;;;;;;;;11216:90;11347:5;11315:1;:13;;:20;11329:5;11315:20;;;;;;;;;;;;;;;:29;11336:7;11315:29;;;;;;;;;;;;;;;:37;;;;11366:9;11362:76;;;11412:7;11396:31;;11405:5;11396:31;;;11421:5;11396:31;;;;;;:::i;:::-;;;;;;;;11362:76;11055:389;10957:487;;;;:::o;11726:476::-;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;11910:17;11891:16;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;12025:7;12034:16;12052:5;11998:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11943:130;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;:::-;11887:309;11815:387;11726:476;;;:::o;7201:1170::-;7286:22;7311:18;:16;:18::i;:::-;7286:43;;7359:1;7343:18;;:4;:18;;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7339:546;;;7533:19;7555:1;:11;;:17;7567:4;7555:17;;;;;;;;;;;;;;;;7533:39;;7604:5;7590:11;:19;7586:115;;;7661:4;7667:11;7680:5;7636:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7586:115;7855:5;7841:11;:19;7821:1;:11;;:17;7833:4;7821:17;;;;;;;;;;;;;;;:39;;;;7519:366;7339:546;7913:1;7899:16;;:2;:16;;;7895:429;;8080:5;8062:1;:14;;;:23;;;;;;;;;;;7895:429;;;8294:5;8275:1;:11;;:15;8287:2;8275:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7895:429;8354:2;8339:25;;8348:4;8339:25;;;8358:5;8339:25;;;;;;:::i;:::-;;;;;;;;7276:1095;7201:1170;;;:::o;1441:138:10:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:3:-;6929:20:1;:18;:20::i;:::-;2528:22:3::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;1899:163:16:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:10:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:14:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:10:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;4437:582:14:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:21;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:474::-;2449:6;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2381:474;;;;;:::o;2861:99::-;2913:6;2947:5;2941:12;2931:22;;2861:99;;;:::o;2966:169::-;3050:11;3084:6;3079:3;3072:19;3124:4;3119:3;3115:14;3100:29;;2966:169;;;;:::o;3141:139::-;3230:6;3225:3;3220;3214:23;3271:1;3262:6;3257:3;3253:16;3246:27;3141:139;;;:::o;3286:102::-;3327:6;3378:2;3374:7;3369:2;3362:5;3358:14;3354:28;3344:38;;3286:102;;;:::o;3394:377::-;3482:3;3510:39;3543:5;3510:39;:::i;:::-;3565:71;3629:6;3624:3;3565:71;:::i;:::-;3558:78;;3645:65;3703:6;3698:3;3691:4;3684:5;3680:16;3645:65;:::i;:::-;3735:29;3757:6;3735:29;:::i;:::-;3730:3;3726:39;3719:46;;3486:285;3394:377;;;;:::o;3777:313::-;3890:4;3928:2;3917:9;3913:18;3905:26;;3977:9;3971:4;3967:20;3963:1;3952:9;3948:17;3941:47;4005:78;4078:4;4069:6;4005:78;:::i;:::-;3997:86;;3777:313;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:60::-;7054:3;7075:5;7068:12;;7026:60;;;:::o;7092:142::-;7142:9;7175:53;7193:34;7202:24;7220:5;7202:24;:::i;:::-;7193:34;:::i;:::-;7175:53;:::i;:::-;7162:66;;7092:142;;;:::o;7240:126::-;7290:9;7323:37;7354:5;7323:37;:::i;:::-;7310:50;;7240:126;;;:::o;7372:149::-;7445:9;7478:37;7509:5;7478:37;:::i;:::-;7465:50;;7372:149;;;:::o;7527:177::-;7637:60;7691:5;7637:60;:::i;:::-;7632:3;7625:73;7527:177;;:::o;7710:268::-;7826:4;7864:2;7853:9;7849:18;7841:26;;7877:94;7968:1;7957:9;7953:17;7944:6;7877:94;:::i;:::-;7710:268;;;;:::o;7984:329::-;8043:6;8092:2;8080:9;8071:7;8067:23;8063:32;8060:119;;;8098:79;;:::i;:::-;8060:119;8218:1;8243:53;8288:7;8279:6;8268:9;8264:22;8243:53;:::i;:::-;8233:63;;8189:117;7984:329;;;;:::o;8319:117::-;8428:1;8425;8418:12;8442:117;8551:1;8548;8541:12;8565:180;8613:77;8610:1;8603:88;8710:4;8707:1;8700:15;8734:4;8731:1;8724:15;8751:281;8834:27;8856:4;8834:27;:::i;:::-;8826:6;8822:40;8964:6;8952:10;8949:22;8928:18;8916:10;8913:34;8910:62;8907:88;;;8975:18;;:::i;:::-;8907:88;9015:10;9011:2;9004:22;8794:238;8751:281;;:::o;9038:129::-;9072:6;9099:20;;:::i;:::-;9089:30;;9128:33;9156:4;9148:6;9128:33;:::i;:::-;9038:129;;;:::o;9173:307::-;9234:4;9324:18;9316:6;9313:30;9310:56;;;9346:18;;:::i;:::-;9310:56;9384:29;9406:6;9384:29;:::i;:::-;9376:37;;9468:4;9462;9458:15;9450:23;;9173:307;;;:::o;9486:148::-;9584:6;9579:3;9574;9561:30;9625:1;9616:6;9611:3;9607:16;9600:27;9486:148;;;:::o;9640:423::-;9717:5;9742:65;9758:48;9799:6;9758:48;:::i;:::-;9742:65;:::i;:::-;9733:74;;9830:6;9823:5;9816:21;9868:4;9861:5;9857:16;9906:3;9897:6;9892:3;9888:16;9885:25;9882:112;;;9913:79;;:::i;:::-;9882:112;10003:54;10050:6;10045:3;10040;10003:54;:::i;:::-;9723:340;9640:423;;;;;:::o;10082:338::-;10137:5;10186:3;10179:4;10171:6;10167:17;10163:27;10153:122;;10194:79;;:::i;:::-;10153:122;10311:6;10298:20;10336:78;10410:3;10402:6;10395:4;10387:6;10383:17;10336:78;:::i;:::-;10327:87;;10143:277;10082:338;;;;:::o;10426:652::-;10503:6;10511;10560:2;10548:9;10539:7;10535:23;10531:32;10528:119;;;10566:79;;:::i;:::-;10528:119;10686:1;10711:53;10756:7;10747:6;10736:9;10732:22;10711:53;:::i;:::-;10701:63;;10657:117;10841:2;10830:9;10826:18;10813:32;10872:18;10864:6;10861:30;10858:117;;;10894:79;;:::i;:::-;10858:117;10999:62;11053:7;11044:6;11033:9;11029:22;10999:62;:::i;:::-;10989:72;;10784:287;10426:652;;;;;:::o;11084:329::-;11143:6;11192:2;11180:9;11171:7;11167:23;11163:32;11160:119;;;11198:79;;:::i;:::-;11160:119;11318:1;11343:53;11388:7;11379:6;11368:9;11364:22;11343:53;:::i;:::-;11333:63;;11289:117;11084:329;;;;:::o;11419:148::-;11491:9;11524:37;11555:5;11524:37;:::i;:::-;11511:50;;11419:148;;;:::o;11573:175::-;11682:59;11735:5;11682:59;:::i;:::-;11677:3;11670:72;11573:175;;:::o;11754:266::-;11869:4;11907:2;11896:9;11892:18;11884:26;;11920:93;12010:1;11999:9;11995:17;11986:6;11920:93;:::i;:::-;11754:266;;;;:::o;12026:116::-;12096:21;12111:5;12096:21;:::i;:::-;12089:5;12086:32;12076:60;;12132:1;12129;12122:12;12076:60;12026:116;:::o;12148:133::-;12191:5;12229:6;12216:20;12207:29;;12245:30;12269:5;12245:30;:::i;:::-;12148:133;;;;:::o;12287:468::-;12352:6;12360;12409:2;12397:9;12388:7;12384:23;12380:32;12377:119;;;12415:79;;:::i;:::-;12377:119;12535:1;12560:53;12605:7;12596:6;12585:9;12581:22;12560:53;:::i;:::-;12550:63;;12506:117;12662:2;12688:50;12730:7;12721:6;12710:9;12706:22;12688:50;:::i;:::-;12678:60;;12633:115;12287:468;;;;;:::o;12761:101::-;12797:7;12837:18;12830:5;12826:30;12815:41;;12761:101;;;:::o;12868:120::-;12940:23;12957:5;12940:23;:::i;:::-;12933:5;12930:34;12920:62;;12978:1;12975;12968:12;12920:62;12868:120;:::o;12994:137::-;13039:5;13077:6;13064:20;13055:29;;13093:32;13119:5;13093:32;:::i;:::-;12994:137;;;;:::o;13137:617::-;13213:6;13221;13229;13278:2;13266:9;13257:7;13253:23;13249:32;13246:119;;;13284:79;;:::i;:::-;13246:119;13404:1;13429:52;13473:7;13464:6;13453:9;13449:22;13429:52;:::i;:::-;13419:62;;13375:116;13530:2;13556:53;13601:7;13592:6;13581:9;13577:22;13556:53;:::i;:::-;13546:63;;13501:118;13658:2;13684:53;13729:7;13720:6;13709:9;13705:22;13684:53;:::i;:::-;13674:63;;13629:118;13137:617;;;;;:::o;13760:474::-;13828:6;13836;13885:2;13873:9;13864:7;13860:23;13856:32;13853:119;;;13891:79;;:::i;:::-;13853:119;14011:1;14036:53;14081:7;14072:6;14061:9;14057:22;14036:53;:::i;:::-;14026:63;;13982:117;14138:2;14164:53;14209:7;14200:6;14189:9;14185:22;14164:53;:::i;:::-;14154:63;;14109:118;13760:474;;;;;:::o;14240:308::-;14302:4;14392:18;14384:6;14381:30;14378:56;;;14414:18;;:::i;:::-;14378:56;14452:29;14474:6;14452:29;:::i;:::-;14444:37;;14536:4;14530;14526:15;14518:23;;14240:308;;;:::o;14554:425::-;14632:5;14657:66;14673:49;14715:6;14673:49;:::i;:::-;14657:66;:::i;:::-;14648:75;;14746:6;14739:5;14732:21;14784:4;14777:5;14773:16;14822:3;14813:6;14808:3;14804:16;14801:25;14798:112;;;14829:79;;:::i;:::-;14798:112;14919:54;14966:6;14961:3;14956;14919:54;:::i;:::-;14638:341;14554:425;;;;;:::o;14999:340::-;15055:5;15104:3;15097:4;15089:6;15085:17;15081:27;15071:122;;15112:79;;:::i;:::-;15071:122;15229:6;15216:20;15254:79;15329:3;15321:6;15314:4;15306:6;15302:17;15254:79;:::i;:::-;15245:88;;15061:278;14999:340;;;;:::o;15345:1563::-;15478:6;15486;15494;15502;15510;15518;15526;15575:3;15563:9;15554:7;15550:23;15546:33;15543:120;;;15582:79;;:::i;:::-;15543:120;15730:1;15719:9;15715:17;15702:31;15760:18;15752:6;15749:30;15746:117;;;15782:79;;:::i;:::-;15746:117;15887:63;15942:7;15933:6;15922:9;15918:22;15887:63;:::i;:::-;15877:73;;15673:287;16027:2;16016:9;16012:18;15999:32;16058:18;16050:6;16047:30;16044:117;;;16080:79;;:::i;:::-;16044:117;16185:63;16240:7;16231:6;16220:9;16216:22;16185:63;:::i;:::-;16175:73;;15970:288;16297:2;16323:53;16368:7;16359:6;16348:9;16344:22;16323:53;:::i;:::-;16313:63;;16268:118;16425:2;16451:53;16496:7;16487:6;16476:9;16472:22;16451:53;:::i;:::-;16441:63;;16396:118;16553:3;16580:53;16625:7;16616:6;16605:9;16601:22;16580:53;:::i;:::-;16570:63;;16524:119;16682:3;16709:53;16754:7;16745:6;16734:9;16730:22;16709:53;:::i;:::-;16699:63;;16653:119;16811:3;16838:53;16883:7;16874:6;16863:9;16859:22;16838:53;:::i;:::-;16828:63;;16782:119;15345:1563;;;;;;;;;;:::o;16914:180::-;16962:77;16959:1;16952:88;17059:4;17056:1;17049:15;17083:4;17080:1;17073:15;17100:191;17140:3;17159:20;17177:1;17159:20;:::i;:::-;17154:25;;17193:20;17211:1;17193:20;:::i;:::-;17188:25;;17236:1;17233;17229:9;17222:16;;17257:3;17254:1;17251:10;17248:36;;;17264:18;;:::i;:::-;17248:36;17100:191;;;;:::o;17297:180::-;17345:77;17342:1;17335:88;17442:4;17439:1;17432:15;17466:4;17463:1;17456:15;17483:320;17527:6;17564:1;17558:4;17554:12;17544:22;;17611:1;17605:4;17601:12;17632:18;17622:81;;17688:4;17680:6;17676:17;17666:27;;17622:81;17750:2;17742:6;17739:14;17719:18;17716:38;17713:84;;17769:18;;:::i;:::-;17713:84;17534:269;17483:320;;;:::o;17809:174::-;17949:26;17945:1;17937:6;17933:14;17926:50;17809:174;:::o;17989:366::-;18131:3;18152:67;18216:2;18211:3;18152:67;:::i;:::-;18145:74;;18228:93;18317:3;18228:93;:::i;:::-;18346:2;18341:3;18337:12;18330:19;;17989:366;;;:::o;18361:419::-;18527:4;18565:2;18554:9;18550:18;18542:26;;18614:9;18608:4;18604:20;18600:1;18589:9;18585:17;18578:47;18642:131;18768:4;18642:131;:::i;:::-;18634:139;;18361:419;;;:::o;18786:194::-;18826:4;18846:20;18864:1;18846:20;:::i;:::-;18841:25;;18880:20;18898:1;18880:20;:::i;:::-;18875:25;;18924:1;18921;18917:9;18909:17;;18948:1;18942:4;18939:11;18936:37;;;18953:18;;:::i;:::-;18936:37;18786:194;;;;:::o;18986:171::-;19126:23;19122:1;19114:6;19110:14;19103:47;18986:171;:::o;19163:366::-;19305:3;19326:67;19390:2;19385:3;19326:67;:::i;:::-;19319:74;;19402:93;19491:3;19402:93;:::i;:::-;19520:2;19515:3;19511:12;19504:19;;19163:366;;;:::o;19535:419::-;19701:4;19739:2;19728:9;19724:18;19716:26;;19788:9;19782:4;19778:20;19774:1;19763:9;19759:17;19752:47;19816:131;19942:4;19816:131;:::i;:::-;19808:139;;19535:419;;;:::o;19960:223::-;20100:34;20096:1;20088:6;20084:14;20077:58;20169:6;20164:2;20156:6;20152:15;20145:31;19960:223;:::o;20189:366::-;20331:3;20352:67;20416:2;20411:3;20352:67;:::i;:::-;20345:74;;20428:93;20517:3;20428:93;:::i;:::-;20546:2;20541:3;20537:12;20530:19;;20189:366;;;:::o;20561:419::-;20727:4;20765:2;20754:9;20750:18;20742:26;;20814:9;20808:4;20804:20;20800:1;20789:9;20785:17;20778:47;20842:131;20968:4;20842:131;:::i;:::-;20834:139;;20561:419;;;:::o;20986:115::-;21071:23;21088:5;21071:23;:::i;:::-;21066:3;21059:36;20986:115;;:::o;21107:118::-;21194:24;21212:5;21194:24;:::i;:::-;21189:3;21182:37;21107:118;;:::o;21231:438::-;21378:4;21416:2;21405:9;21401:18;21393:26;;21429:69;21495:1;21484:9;21480:17;21471:6;21429:69;:::i;:::-;21508:72;21576:2;21565:9;21561:18;21552:6;21508:72;:::i;:::-;21590;21658:2;21647:9;21643:18;21634:6;21590:72;:::i;:::-;21231:438;;;;;;:::o;21675:410::-;21715:7;21738:20;21756:1;21738:20;:::i;:::-;21733:25;;21772:20;21790:1;21772:20;:::i;:::-;21767:25;;21827:1;21824;21820:9;21849:30;21867:11;21849:30;:::i;:::-;21838:41;;22028:1;22019:7;22015:15;22012:1;22009:22;21989:1;21982:9;21962:83;21939:139;;22058:18;;:::i;:::-;21939:139;21723:362;21675:410;;;;:::o;22091:225::-;22231:34;22227:1;22219:6;22215:14;22208:58;22300:8;22295:2;22287:6;22283:15;22276:33;22091:225;:::o;22322:366::-;22464:3;22485:67;22549:2;22544:3;22485:67;:::i;:::-;22478:74;;22561:93;22650:3;22561:93;:::i;:::-;22679:2;22674:3;22670:12;22663:19;;22322:366;;;:::o;22694:419::-;22860:4;22898:2;22887:9;22883:18;22875:26;;22947:9;22941:4;22937:20;22933:1;22922:9;22918:17;22911:47;22975:131;23101:4;22975:131;:::i;:::-;22967:139;;22694:419;;;:::o;23119:85::-;23164:7;23193:5;23182:16;;23119:85;;;:::o;23210:156::-;23267:9;23300:60;23317:42;23326:32;23352:5;23326:32;:::i;:::-;23317:42;:::i;:::-;23300:60;:::i;:::-;23287:73;;23210:156;;;:::o;23372:145::-;23466:44;23504:5;23466:44;:::i;:::-;23461:3;23454:57;23372:145;;:::o;23523:236::-;23623:4;23661:2;23650:9;23646:18;23638:26;;23674:78;23749:1;23738:9;23734:17;23725:6;23674:78;:::i;:::-;23523:236;;;;:::o;23765:222::-;23858:4;23896:2;23885:9;23881:18;23873:26;;23909:71;23977:1;23966:9;23962:17;23953:6;23909:71;:::i;:::-;23765:222;;;;:::o;23993:143::-;24050:5;24081:6;24075:13;24066:22;;24097:33;24124:5;24097:33;:::i;:::-;23993:143;;;;:::o;24142:351::-;24212:6;24261:2;24249:9;24240:7;24236:23;24232:32;24229:119;;;24267:79;;:::i;:::-;24229:119;24387:1;24412:64;24468:7;24459:6;24448:9;24444:22;24412:64;:::i;:::-;24402:74;;24358:128;24142:351;;;;:::o;24499:332::-;24620:4;24658:2;24647:9;24643:18;24635:26;;24671:71;24739:1;24728:9;24724:17;24715:6;24671:71;:::i;:::-;24752:72;24820:2;24809:9;24805:18;24796:6;24752:72;:::i;:::-;24499:332;;;;;:::o;24837:442::-;24986:4;25024:2;25013:9;25009:18;25001:26;;25037:71;25105:1;25094:9;25090:17;25081:6;25037:71;:::i;:::-;25118:72;25186:2;25175:9;25171:18;25162:6;25118:72;:::i;:::-;25200;25268:2;25257:9;25253:18;25244:6;25200:72;:::i;:::-;24837:442;;;;;;:::o;25285:141::-;25334:4;25357:3;25349:11;;25380:3;25377:1;25370:14;25414:4;25411:1;25401:18;25393:26;;25285:141;;;:::o;25432:93::-;25469:6;25516:2;25511;25504:5;25500:14;25496:23;25486:33;;25432:93;;;:::o;25531:107::-;25575:8;25625:5;25619:4;25615:16;25594:37;;25531:107;;;;:::o;25644:393::-;25713:6;25763:1;25751:10;25747:18;25786:97;25816:66;25805:9;25786:97;:::i;:::-;25904:39;25934:8;25923:9;25904:39;:::i;:::-;25892:51;;25976:4;25972:9;25965:5;25961:21;25952:30;;26025:4;26015:8;26011:19;26004:5;26001:30;25991:40;;25720:317;;25644:393;;;;;:::o;26043:142::-;26093:9;26126:53;26144:34;26153:24;26171:5;26153:24;:::i;:::-;26144:34;:::i;:::-;26126:53;:::i;:::-;26113:66;;26043:142;;;:::o;26191:75::-;26234:3;26255:5;26248:12;;26191:75;;;:::o;26272:269::-;26382:39;26413:7;26382:39;:::i;:::-;26443:91;26492:41;26516:16;26492:41;:::i;:::-;26484:6;26477:4;26471:11;26443:91;:::i;:::-;26437:4;26430:105;26348:193;26272:269;;;:::o;26547:73::-;26592:3;26613:1;26606:8;;26547:73;:::o;26626:189::-;26703:32;;:::i;:::-;26744:65;26802:6;26794;26788:4;26744:65;:::i;:::-;26679:136;26626:189;;:::o;26821:186::-;26881:120;26898:3;26891:5;26888:14;26881:120;;;26952:39;26989:1;26982:5;26952:39;:::i;:::-;26925:1;26918:5;26914:13;26905:22;;26881:120;;;26821:186;;:::o;27013:543::-;27114:2;27109:3;27106:11;27103:446;;;27148:38;27180:5;27148:38;:::i;:::-;27232:29;27250:10;27232:29;:::i;:::-;27222:8;27218:44;27415:2;27403:10;27400:18;27397:49;;;27436:8;27421:23;;27397:49;27459:80;27515:22;27533:3;27515:22;:::i;:::-;27505:8;27501:37;27488:11;27459:80;:::i;:::-;27118:431;;27103:446;27013:543;;;:::o;27562:117::-;27616:8;27666:5;27660:4;27656:16;27635:37;;27562:117;;;;:::o;27685:169::-;27729:6;27762:51;27810:1;27806:6;27798:5;27795:1;27791:13;27762:51;:::i;:::-;27758:56;27843:4;27837;27833:15;27823:25;;27736:118;27685:169;;;;:::o;27859:295::-;27935:4;28081:29;28106:3;28100:4;28081:29;:::i;:::-;28073:37;;28143:3;28140:1;28136:11;28130:4;28127:21;28119:29;;27859:295;;;;:::o;28159:1395::-;28276:37;28309:3;28276:37;:::i;:::-;28378:18;28370:6;28367:30;28364:56;;;28400:18;;:::i;:::-;28364:56;28444:38;28476:4;28470:11;28444:38;:::i;:::-;28529:67;28589:6;28581;28575:4;28529:67;:::i;:::-;28623:1;28647:4;28634:17;;28679:2;28671:6;28668:14;28696:1;28691:618;;;;29353:1;29370:6;29367:77;;;29419:9;29414:3;29410:19;29404:26;29395:35;;29367:77;29470:67;29530:6;29523:5;29470:67;:::i;:::-;29464:4;29457:81;29326:222;28661:887;;28691:618;28743:4;28739:9;28731:6;28727:22;28777:37;28809:4;28777:37;:::i;:::-;28836:1;28850:208;28864:7;28861:1;28858:14;28850:208;;;28943:9;28938:3;28934:19;28928:26;28920:6;28913:42;28994:1;28986:6;28982:14;28972:24;;29041:2;29030:9;29026:18;29013:31;;28887:4;28884:1;28880:12;28875:17;;28850:208;;;29086:6;29077:7;29074:19;29071:179;;;29144:9;29139:3;29135:19;29129:26;29187:48;29229:4;29221:6;29217:17;29206:9;29187:48;:::i;:::-;29179:6;29172:64;29094:156;29071:179;29296:1;29292;29284:6;29280:14;29276:22;29270:4;29263:36;28698:611;;;28661:887;;28251:1303;;;28159:1395;;:::o;29560:98::-;29611:6;29645:5;29639:12;29629:22;;29560:98;;;:::o;29664:147::-;29765:11;29802:3;29787:18;;29664:147;;;;:::o;29817:386::-;29921:3;29949:38;29981:5;29949:38;:::i;:::-;30003:88;30084:6;30079:3;30003:88;:::i;:::-;29996:95;;30100:65;30158:6;30153:3;30146:4;30139:5;30135:16;30100:65;:::i;:::-;30190:6;30185:3;30181:16;30174:23;;29925:278;29817:386;;;;:::o;30209:271::-;30339:3;30361:93;30450:3;30441:6;30361:93;:::i;:::-;30354:100;;30471:3;30464:10;;30209:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2902200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"PROXY_ROLE()": "413",
								"UPGRADER_ROLE()": "457",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"aksToken()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"basePricePerShare()": "2535",
								"burn(uint256)": "infinite",
								"decimals()": "472",
								"forceBurn(address,uint256)": "infinite",
								"getCurrentPrice(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3218",
								"initialize(string,string,uint256,address,address,address,address)": "infinite",
								"lockShares(address,uint256)": "infinite",
								"lockedShares(address)": "2868",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setWhitelisted(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokensBridge()": "infinite",
								"totalSupply()": "2530",
								"transfer(address,uint256)": "infinite",
								"transferCrossChain(uint64,address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockShares(address)": "infinite",
								"updatePricingModel(uint256)": "25146",
								"upgradeToAndCall(address,bytes)": "infinite",
								"whitelisted(address)": "2900"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 978,
									"end": 1033,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 1003,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 1003,
									"end": 1023,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1003,
									"end": 1023,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 1003,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "tag",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7824,
									"end": 7854,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7857,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7857,
									"end": 7881,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7857,
									"end": 7881,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7857,
									"end": 7881,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7857,
									"end": 7883,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7883,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7883,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7857,
									"end": 7883,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7824,
									"end": 7883,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7824,
									"end": 7883,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7899,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8001,
									"end": 8017,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7984,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8050,
									"end": 8066,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8033,
									"end": 8034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8047,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8033,
									"end": 8047,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8047,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8097,
									"end": 8113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8085,
									"end": 8114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7758,
									"end": 8131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7709,
									"end": 8131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9129,
									"end": 9159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9171,
									"end": 9183,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 9186,
									"end": 9213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9256,
									"end": 9260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9246,
									"end": 9260,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9246,
									"end": 9260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9232,
									"end": 9270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9071,
									"end": 9276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8894,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3213,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8913,
									"end": 8934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8913,
									"end": 8934,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 8906,
									"end": 8934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8906,
									"end": 8934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "tag",
									"source": 20,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "ASSIGNIMMUTABLE",
									"source": 20,
									"value": "650"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4318,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200975fa70692f3ebea0e374cad6627675a6d8a550b62d5ee68fbf475b5a296a6364736f6c634300081e0033",
									".code": [
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "E2D6F634"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "E2D6F634"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "E336AC44"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "E48BF15B"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "F7154B3C"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "F72C0D8B"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "D547741F"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "D936547E"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "DD62ED3E"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "DEA7F112"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "A217FDDF"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "A9059CBB"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "C255F8C8"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "C55D0F56"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "91D14854"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "9281AA0B"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "A14D707C"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "38"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "70A08231"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "8D898E34"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "9081E644"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "36568ABE"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "3EFB0BE3"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "40C10F19"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "42966C68"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "23B872DD"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "248A9CA3"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "2F2FF15D"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "1FFC9A7"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "5FBF448"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "6FDDE03"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "95EA7B3"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4318,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "54"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 2187,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "54"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 2187,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 3077,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 3077,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 3077,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 720,
											"name": "tag",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "99"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "tag",
											"source": 20,
											"value": "99"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 690,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "tag",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "102"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "103"
										},
										{
											"begin": 690,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "tag",
											"source": 20,
											"value": "102"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "tag",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "tag",
											"source": 20,
											"value": "104"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 1828,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "tag",
											"source": 20,
											"value": "106"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 1828,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "tag",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "tag",
											"source": 20,
											"value": "108"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 1944,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "tag",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1944,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "tag",
											"source": 20,
											"value": "109"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "tag",
											"source": 20,
											"value": "18"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "tag",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 2449,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "tag",
											"source": 20,
											"value": "129"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "130"
										},
										{
											"begin": 2449,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "tag",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "tag",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "tag",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 727,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "tag",
											"source": 20,
											"value": "132"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "134"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "135"
										},
										{
											"begin": 727,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "tag",
											"source": 20,
											"value": "134"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 4034,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 4034,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "151"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 3459,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "tag",
											"source": 20,
											"value": "151"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "153"
										},
										{
											"begin": 3459,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "tag",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "158"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 2774,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "161"
										},
										{
											"begin": 2774,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 2774,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "162"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "tag",
											"source": 20,
											"value": "27"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "tag",
											"source": 20,
											"value": "167"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 2328,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "tag",
											"source": 20,
											"value": "169"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "170"
										},
										{
											"begin": 2328,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "tag",
											"source": 20,
											"value": "168"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "171"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "173"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "111"
										},
										{
											"begin": 2588,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "173"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 2588,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "172"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 2588,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "175"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "180"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "181"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 872,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "182"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "183"
										},
										{
											"begin": 872,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "181"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 872,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "184"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "tag",
											"source": 20,
											"value": "191"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "194"
										},
										{
											"begin": 1041,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "tag",
											"source": 20,
											"value": "193"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "195"
										},
										{
											"begin": 1041,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "tag",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "tag",
											"source": 20,
											"value": "196"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "197"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "55"
										},
										{
											"begin": 2056,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "tag",
											"source": 20,
											"value": "198"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 2056,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "tag",
											"source": 20,
											"value": "197"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "124"
										},
										{
											"begin": 818,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "203"
										},
										{
											"begin": 818,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "201"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 818,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "205"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "tag",
											"source": 20,
											"value": "205"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "206"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 621,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "tag",
											"source": 20,
											"value": "206"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 621,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "tag",
											"source": 20,
											"value": "208"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "209"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "tag",
											"source": 20,
											"value": "209"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "211"
										},
										{
											"begin": 769,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "tag",
											"source": 20,
											"value": "210"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 769,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "tag",
											"source": 20,
											"value": "212"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "213"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "tag",
											"source": 20,
											"value": "213"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 548,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "tag",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 548,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "tag",
											"source": 20,
											"value": "216"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3602,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2301,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 2281,
											"end": 2312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "225"
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2281,
											"end": 2312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2187,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5296,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5296,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5327,
											"end": 5332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5341,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5318,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3973,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3973,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3202,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "244"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "245"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 3183,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "tag",
											"source": 20,
											"value": "245"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "tag",
											"source": 20,
											"value": "244"
										},
										{
											"begin": 3183,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 3264,
											"end": 3268,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 3254,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3269,
											"name": "tag",
											"source": 20,
											"value": "247"
										},
										{
											"begin": 3254,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 3254,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "tag",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3300,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 3254,
											"end": 3300,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 3246,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "tag",
											"source": 20,
											"value": "251"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "tag",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 3246,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 3344,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3344,
											"end": 3380,
											"name": "tag",
											"source": 20,
											"value": "253"
										},
										{
											"begin": 3344,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3077,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4876,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6463,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6463,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 720,
											"name": "tag",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 720,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 690,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "tag",
											"source": 20,
											"value": "107"
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 1917,
											"end": 1919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1921,
											"end": 1927,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1911,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 1911,
											"end": 1928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1911,
											"end": 1928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 1911,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1828,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "tag",
											"source": 20,
											"value": "112"
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 2021,
											"end": 2031,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2015,
											"end": 2020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 2015,
											"end": 2040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2015,
											"end": 2040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 2015,
											"end": 2040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4196,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4196,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "tag",
											"source": 20,
											"value": "130"
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2540,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 2540,
											"end": 2572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2540,
											"end": 2572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2540,
											"end": 2572,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2540,
											"end": 2572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2449,
											"end": 2580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "tag",
											"source": 20,
											"value": "133"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 727,
											"end": 760,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 727,
											"end": 760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3858,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3858,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4156,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 4137,
											"end": 4166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4034,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "tag",
											"source": 20,
											"value": "153"
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3644,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "312"
										},
										{
											"begin": 3616,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "tag",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "tag",
											"source": 20,
											"value": "310"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3752,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3729,
											"end": 3753,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "313"
										},
										{
											"begin": 3715,
											"end": 3725,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 3705,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3726,
											"name": "tag",
											"source": 20,
											"value": "313"
										},
										{
											"begin": 3705,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 3705,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "tag",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 3705,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3763,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 3705,
											"end": 3763,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 3697,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "tag",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 3697,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 3812,
											"end": 3822,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 3832,
											"end": 3836,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "318"
										},
										{
											"begin": 3802,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "tag",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 3802,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3869,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "226"
										},
										{
											"begin": 3857,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "tag",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 3857,
											"end": 3894,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3927,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3927,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3927,
											"name": "PUSH",
											"source": 20,
											"value": "1EE5B22"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 3946,
											"end": 3970,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3972,
											"end": 3980,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "321"
										},
										{
											"begin": 3907,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "tag",
											"source": 20,
											"value": "320"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "EXTCODESIZE",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "322"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "tag",
											"source": 20,
											"value": "322"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "GAS",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "tag",
											"source": 20,
											"value": "324"
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3907,
											"end": 3989,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3459,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "tag",
											"source": 20,
											"value": "161"
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2845,
											"end": 2849,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2884,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "246"
										},
										{
											"begin": 2862,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "tag",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "tag",
											"source": 20,
											"value": "326"
										},
										{
											"begin": 2862,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2980,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2957,
											"end": 2981,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 2943,
											"end": 2953,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 2933,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "tag",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 2933,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "tag",
											"source": 20,
											"value": "329"
										},
										{
											"begin": 2933,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2991,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2991,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "252"
										},
										{
											"begin": 2925,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "tag",
											"source": 20,
											"value": "331"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 2925,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3035,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3035,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 3035,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3035,
											"end": 3061,
											"name": "tag",
											"source": 20,
											"value": "332"
										},
										{
											"begin": 3035,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3028,
											"end": 3061,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3028,
											"end": 3061,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2774,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "tag",
											"source": 20,
											"value": "170"
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2428,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2429,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 2408,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2328,
											"end": 2441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "tag",
											"source": 20,
											"value": "174"
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2705,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2705,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 2679,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "tag",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 2679,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2588,
											"end": 2713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 872,
											"end": 915,
											"name": "tag",
											"source": 20,
											"value": "183"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 872,
											"end": 915,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 872,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4813,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4813,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "tag",
											"source": 20,
											"value": "195"
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 1306,
											"end": 1321,
											"modifierDepth": 1,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 1298,
											"end": 1364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 1298,
											"end": 1364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1377,
											"end": 1403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 1390,
											"end": 1394,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 20
										},
										{
											"begin": 1396,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 20
										},
										{
											"begin": 1377,
											"end": 1389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 1377,
											"end": 1403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1377,
											"end": 1403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 1377,
											"end": 1403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1414,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 1414,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 1414,
											"end": 1436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1414,
											"end": 1436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 1414,
											"end": 1436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 1447,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 1447,
											"end": 1471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 1471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 1447,
											"end": 1471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1510,
											"end": 1519,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1484,
											"end": 1520,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1560,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1531,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1574,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1605,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1585,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1585,
											"end": 1609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1585,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1585,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1585,
											"end": 1609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1622,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 1653,
											"end": 1658,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 1622,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1622,
											"end": 1659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1622,
											"end": 1659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 1622,
											"end": 1659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1622,
											"end": 1659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1670,
											"end": 1699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 658,
											"end": 681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 1693,
											"end": 1698,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1670,
											"end": 1699,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 1670,
											"end": 1699,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1670,
											"end": 1699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1710,
											"end": 1742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 588,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 1736,
											"end": 1741,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 1710,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1710,
											"end": 1742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1710,
											"end": 1742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 1710,
											"end": 1742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1710,
											"end": 1742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1755,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 1761,
											"end": 1766,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1768,
											"end": 1779,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 1755,
											"end": 1780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1755,
											"end": 1780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 1755,
											"end": 1780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1041,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "tag",
											"source": 20,
											"value": "199"
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 2155,
											"end": 2162,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2164,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2149,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 2149,
											"end": 2171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2149,
											"end": 2171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 2149,
											"end": 2171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2056,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "tag",
											"source": 20,
											"value": "203"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 818,
											"end": 865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 658,
											"end": 681,
											"name": "PUSH",
											"source": 20,
											"value": "77D72916E966418E6DC58A19999AE9934BEF3F749F1547CDE0A86E809F19C89B"
										},
										{
											"begin": 621,
											"end": 681,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 621,
											"end": 681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "tag",
											"source": 20,
											"value": "211"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 769,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"name": "tag",
											"source": 20,
											"value": "215"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 588,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 548,
											"end": 614,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 548,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4231,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 4231,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10066,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 10066,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6090,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6090,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6134,
											"end": 6141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6112,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6159,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2948,
											"name": "PUSH",
											"source": 0,
											"value": "2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800"
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 7396,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7396,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 7559,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 7559,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 8021,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 8021,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7988,
											"end": 8047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7988,
											"end": 8047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8082,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8061,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8133,
											"end": 8138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8129,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 8184,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8184,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8175,
											"end": 8182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8218,
											"end": 8222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7894,
											"end": 8282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 8828,
											"end": 8860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8909,
											"end": 8914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 8880,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 9354,
											"end": 9384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9404,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9439,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9404,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9240,
											"end": 9446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 4728,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4315,
											"name": "tag",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 4217,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 588,
											"end": 614,
											"name": "PUSH",
											"source": 20,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4315,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4217,
											"end": 4315,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4217,
											"end": 4315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 6493,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6292,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "650"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6673,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6710,
											"end": 6740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6803,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 6855,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 4554,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 4554,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 4554,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 4576,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 4514,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 11090,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 11090,
											"end": 11108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11065,
											"end": 11108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11127,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11193,
											"end": 11194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 11164,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11227,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 11264,
											"end": 11295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11334,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11343,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11412,
											"end": 11419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11405,
											"end": 11410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11421,
											"end": 11426,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 11396,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "tag",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11055,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11862,
											"end": 11867,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11869,
											"end": 11876,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11852,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11891,
											"end": 11927,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11947,
											"end": 11963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11947,
											"end": 11971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12025,
											"end": 12032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12034,
											"end": 12050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12052,
											"end": 12057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 11998,
											"end": 12058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12139,
											"end": 12155,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12139,
											"end": 12163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 12114,
											"end": 12171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "tag",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11815,
											"end": 12202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11726,
											"end": 12202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 7311,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7311,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "tag",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7479,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "tag",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7665,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7685,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 7636,
											"end": 7686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "tag",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "tag",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7855,
											"end": 7860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7837,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8080,
											"end": 8085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 3,
											"value": "490"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8354,
											"end": 8356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 8339,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "tag",
											"source": 3,
											"value": "491"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7201,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 3,
											"value": "455"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "634"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 21,
											"value": "634"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "635"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 21,
											"value": "635"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "637"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "548"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 21,
											"value": "637"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "639"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "640"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 21,
											"value": "640"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "639"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "641"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 21,
											"value": "641"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 21,
											"value": "551"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "644"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 21,
											"value": "644"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "646"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "551"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "646"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 21,
											"value": "553"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "649"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 21,
											"value": "649"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 21,
											"value": "554"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "651"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "553"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 21,
											"value": "651"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "652"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 21,
											"value": "652"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "654"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "554"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 21,
											"value": "654"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 21,
											"value": "557"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "657"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 21,
											"value": "657"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "658"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 21,
											"value": "658"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "660"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "557"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 21,
											"value": "660"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "tag",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "662"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "663"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 21,
											"value": "663"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 21,
											"value": "662"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "664"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 21,
											"value": "664"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "665"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 21,
											"value": "665"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "tag",
											"source": 21,
											"value": "559"
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2861,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "tag",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3050,
											"end": 3061,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2966,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "tag",
											"source": 21,
											"value": "561"
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3225,
											"end": 3228,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MCOPY",
											"source": 21
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3257,
											"end": 3260,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3246,
											"end": 3273,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3141,
											"end": 3280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3141,
											"end": 3280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "tag",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3358,
											"end": 3372,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3354,
											"end": 3382,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3344,
											"end": 3382,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3388,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "tag",
											"source": 21,
											"value": "563"
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 3543,
											"end": 3548,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "559"
										},
										{
											"begin": 3510,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "tag",
											"source": 21,
											"value": "671"
										},
										{
											"begin": 3510,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 3565,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "tag",
											"source": 21,
											"value": "672"
										},
										{
											"begin": 3565,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3558,
											"end": 3636,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3558,
											"end": 3636,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "673"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3680,
											"end": 3696,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "561"
										},
										{
											"begin": 3645,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "tag",
											"source": 21,
											"value": "673"
										},
										{
											"begin": 3645,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "674"
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 3735,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "tag",
											"source": 21,
											"value": "674"
										},
										{
											"begin": 3735,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3730,
											"end": 3733,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3726,
											"end": 3765,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3765,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3765,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3486,
											"end": 3771,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "tag",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3890,
											"end": 3894,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3905,
											"end": 3931,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3971,
											"end": 3975,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3948,
											"end": 3965,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3941,
											"end": 3988,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "676"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "563"
										},
										{
											"begin": 4005,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "tag",
											"source": 21,
											"value": "676"
										},
										{
											"begin": 4005,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3997,
											"end": 4083,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3997,
											"end": 4083,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "678"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 21,
											"value": "678"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "680"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 21,
											"value": "680"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "682"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "683"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 21,
											"value": "683"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 21,
											"value": "682"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "684"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 21,
											"value": "684"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "685"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 21,
											"value": "685"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "686"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 21,
											"value": "686"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 21,
											"value": "566"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "689"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 21,
											"value": "689"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "690"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 21,
											"value": "690"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "692"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "566"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 21,
											"value": "692"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "694"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "695"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 21,
											"value": "695"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 21,
											"value": "694"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "696"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 21,
											"value": "696"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "698"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 21,
											"value": "698"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "700"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 21,
											"value": "700"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "702"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "703"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 21,
											"value": "703"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 21,
											"value": "702"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "704"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 21,
											"value": "704"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "705"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 21,
											"value": "705"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 21,
											"value": "569"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "708"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "569"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 21,
											"value": "708"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "710"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 21,
											"value": "710"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "tag",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7054,
											"end": 7057,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7080,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7026,
											"end": 7086,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7026,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7092,
											"end": 7234,
											"name": "tag",
											"source": 21,
											"value": "572"
										},
										{
											"begin": 7092,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7175,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "713"
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "714"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "715"
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 7202,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "tag",
											"source": 21,
											"value": "715"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 7193,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "tag",
											"source": 21,
											"value": "714"
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7175,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 7175,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7175,
											"end": 7228,
											"name": "tag",
											"source": 21,
											"value": "713"
										},
										{
											"begin": 7175,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7162,
											"end": 7228,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7162,
											"end": 7228,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7092,
											"end": 7234,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7092,
											"end": 7234,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7092,
											"end": 7234,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7092,
											"end": 7234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7240,
											"end": 7366,
											"name": "tag",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 7240,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7290,
											"end": 7299,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "717"
										},
										{
											"begin": 7354,
											"end": 7359,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7323,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "572"
										},
										{
											"begin": 7323,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7323,
											"end": 7360,
											"name": "tag",
											"source": 21,
											"value": "717"
										},
										{
											"begin": 7323,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7310,
											"end": 7360,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7310,
											"end": 7360,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7240,
											"end": 7366,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7240,
											"end": 7366,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7240,
											"end": 7366,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7240,
											"end": 7366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7372,
											"end": 7521,
											"name": "tag",
											"source": 21,
											"value": "574"
										},
										{
											"begin": 7372,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "719"
										},
										{
											"begin": 7509,
											"end": 7514,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 7478,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "tag",
											"source": 21,
											"value": "719"
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7465,
											"end": 7515,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7465,
											"end": 7515,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7372,
											"end": 7521,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7372,
											"end": 7521,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7372,
											"end": 7521,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7372,
											"end": 7521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7527,
											"end": 7704,
											"name": "tag",
											"source": 21,
											"value": "575"
										},
										{
											"begin": 7527,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7637,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "721"
										},
										{
											"begin": 7691,
											"end": 7696,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7637,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "574"
										},
										{
											"begin": 7637,
											"end": 7697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7637,
											"end": 7697,
											"name": "tag",
											"source": 21,
											"value": "721"
										},
										{
											"begin": 7637,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7632,
											"end": 7635,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7625,
											"end": 7698,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7527,
											"end": 7704,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7527,
											"end": 7704,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7527,
											"end": 7704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "tag",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7826,
											"end": 7830,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7866,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7849,
											"end": 7867,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7841,
											"end": 7867,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7841,
											"end": 7867,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7877,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "723"
										},
										{
											"begin": 7968,
											"end": 7969,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7953,
											"end": 7970,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7944,
											"end": 7950,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7877,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "575"
										},
										{
											"begin": 7877,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7877,
											"end": 7971,
											"name": "tag",
											"source": 21,
											"value": "723"
										},
										{
											"begin": 7877,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7710,
											"end": 7978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "tag",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8094,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8089,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8071,
											"end": 8078,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8067,
											"end": 8090,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8063,
											"end": 8095,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8060,
											"end": 8179,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8060,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "725"
										},
										{
											"begin": 8060,
											"end": 8179,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "726"
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 8098,
											"end": 8177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "tag",
											"source": 21,
											"value": "726"
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8060,
											"end": 8179,
											"name": "tag",
											"source": 21,
											"value": "725"
										},
										{
											"begin": 8060,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8218,
											"end": 8219,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "727"
										},
										{
											"begin": 8288,
											"end": 8295,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8279,
											"end": 8285,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8264,
											"end": 8286,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8243,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 8243,
											"end": 8296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8243,
											"end": 8296,
											"name": "tag",
											"source": 21,
											"value": "727"
										},
										{
											"begin": 8243,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8233,
											"end": 8296,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8233,
											"end": 8296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8189,
											"end": 8306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7984,
											"end": 8313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8319,
											"end": 8436,
											"name": "tag",
											"source": 21,
											"value": "576"
										},
										{
											"begin": 8319,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8430,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8442,
											"end": 8559,
											"name": "tag",
											"source": 21,
											"value": "577"
										},
										{
											"begin": 8442,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8549,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8565,
											"end": 8745,
											"name": "tag",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 8565,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8613,
											"end": 8690,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8610,
											"end": 8611,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8691,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8710,
											"end": 8714,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8700,
											"end": 8715,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8739,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8751,
											"end": 9032,
											"name": "tag",
											"source": 21,
											"value": "579"
										},
										{
											"begin": 8751,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8834,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "732"
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8834,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 8834,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8834,
											"end": 8861,
											"name": "tag",
											"source": 21,
											"value": "732"
										},
										{
											"begin": 8834,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8822,
											"end": 8862,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8964,
											"end": 8970,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8952,
											"end": 8962,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8916,
											"end": 8926,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8913,
											"end": 8947,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 8910,
											"end": 8972,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 8907,
											"end": 8995,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8907,
											"end": 8995,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "733"
										},
										{
											"begin": 8907,
											"end": 8995,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "734"
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 8975,
											"end": 8993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "tag",
											"source": 21,
											"value": "734"
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8907,
											"end": 8995,
											"name": "tag",
											"source": 21,
											"value": "733"
										},
										{
											"begin": 8907,
											"end": 8995,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9015,
											"end": 9025,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9004,
											"end": 9026,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8794,
											"end": 9032,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8751,
											"end": 9032,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8751,
											"end": 9032,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8751,
											"end": 9032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9167,
											"name": "tag",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 9038,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "736"
										},
										{
											"begin": 9099,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 9099,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9099,
											"end": 9119,
											"name": "tag",
											"source": 21,
											"value": "736"
										},
										{
											"begin": 9099,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9089,
											"end": 9119,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9089,
											"end": 9119,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9128,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "737"
										},
										{
											"begin": 9156,
											"end": 9160,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9128,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "579"
										},
										{
											"begin": 9128,
											"end": 9161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9128,
											"end": 9161,
											"name": "tag",
											"source": 21,
											"value": "737"
										},
										{
											"begin": 9128,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9167,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9167,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9167,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9173,
											"end": 9480,
											"name": "tag",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 9173,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9322,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9313,
											"end": 9343,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 9310,
											"end": 9366,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9310,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "739"
										},
										{
											"begin": 9310,
											"end": 9366,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "740"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 9346,
											"end": 9364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "tag",
											"source": 21,
											"value": "740"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9310,
											"end": 9366,
											"name": "tag",
											"source": 21,
											"value": "739"
										},
										{
											"begin": 9310,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9384,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "741"
										},
										{
											"begin": 9406,
											"end": 9412,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9384,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 9384,
											"end": 9413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9384,
											"end": 9413,
											"name": "tag",
											"source": 21,
											"value": "741"
										},
										{
											"begin": 9384,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9376,
											"end": 9413,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9376,
											"end": 9413,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 9472,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9458,
											"end": 9473,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9450,
											"end": 9473,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9450,
											"end": 9473,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9173,
											"end": 9480,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9173,
											"end": 9480,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9173,
											"end": 9480,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9173,
											"end": 9480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9486,
											"end": 9634,
											"name": "tag",
											"source": 21,
											"value": "582"
										},
										{
											"begin": 9486,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9584,
											"end": 9590,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9579,
											"end": 9582,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9574,
											"end": 9577,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9561,
											"end": 9591,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9622,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9611,
											"end": 9614,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9607,
											"end": 9623,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9486,
											"end": 9634,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9486,
											"end": 9634,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9486,
											"end": 9634,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9486,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "tag",
											"source": 21,
											"value": "583"
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9742,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "744"
										},
										{
											"begin": 9758,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "745"
										},
										{
											"begin": 9799,
											"end": 9805,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9758,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 9758,
											"end": 9806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9758,
											"end": 9806,
											"name": "tag",
											"source": 21,
											"value": "745"
										},
										{
											"begin": 9758,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9742,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 9742,
											"end": 9807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9742,
											"end": 9807,
											"name": "tag",
											"source": 21,
											"value": "744"
										},
										{
											"begin": 9742,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9733,
											"end": 9807,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9733,
											"end": 9807,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9830,
											"end": 9836,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9823,
											"end": 9828,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9868,
											"end": 9872,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9861,
											"end": 9866,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9857,
											"end": 9873,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9906,
											"end": 9909,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9897,
											"end": 9903,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9892,
											"end": 9895,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9888,
											"end": 9904,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9885,
											"end": 9910,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 9882,
											"end": 9994,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9882,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "746"
										},
										{
											"begin": 9882,
											"end": 9994,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9913,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "747"
										},
										{
											"begin": 9913,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "577"
										},
										{
											"begin": 9913,
											"end": 9992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9913,
											"end": 9992,
											"name": "tag",
											"source": 21,
											"value": "747"
										},
										{
											"begin": 9913,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9882,
											"end": 9994,
											"name": "tag",
											"source": 21,
											"value": "746"
										},
										{
											"begin": 9882,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10003,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "748"
										},
										{
											"begin": 10050,
											"end": 10056,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10045,
											"end": 10048,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10040,
											"end": 10043,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10003,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "582"
										},
										{
											"begin": 10003,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10003,
											"end": 10057,
											"name": "tag",
											"source": 21,
											"value": "748"
										},
										{
											"begin": 10003,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9723,
											"end": 10063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9640,
											"end": 10063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "tag",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10137,
											"end": 10142,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10189,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10179,
											"end": 10183,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 10171,
											"end": 10177,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10167,
											"end": 10184,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10163,
											"end": 10190,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 10153,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "750"
										},
										{
											"begin": 10153,
											"end": 10275,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "751"
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "576"
										},
										{
											"begin": 10194,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "tag",
											"source": 21,
											"value": "751"
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10153,
											"end": 10275,
											"name": "tag",
											"source": 21,
											"value": "750"
										},
										{
											"begin": 10153,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10311,
											"end": 10317,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10298,
											"end": 10318,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 10336,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "752"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10393,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10336,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "583"
										},
										{
											"begin": 10336,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10336,
											"end": 10414,
											"name": "tag",
											"source": 21,
											"value": "752"
										},
										{
											"begin": 10336,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10327,
											"end": 10414,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10327,
											"end": 10414,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10143,
											"end": 10420,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10082,
											"end": 10420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "tag",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10517,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10562,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 10557,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10535,
											"end": 10558,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10531,
											"end": 10563,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 10528,
											"end": 10647,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10528,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "754"
										},
										{
											"begin": 10528,
											"end": 10647,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10566,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "755"
										},
										{
											"begin": 10566,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 10566,
											"end": 10645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10566,
											"end": 10645,
											"name": "tag",
											"source": 21,
											"value": "755"
										},
										{
											"begin": 10566,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10528,
											"end": 10647,
											"name": "tag",
											"source": 21,
											"value": "754"
										},
										{
											"begin": 10528,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10686,
											"end": 10687,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "756"
										},
										{
											"begin": 10756,
											"end": 10763,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10747,
											"end": 10753,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10736,
											"end": 10745,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10732,
											"end": 10754,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10711,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 10711,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10711,
											"end": 10764,
											"name": "tag",
											"source": 21,
											"value": "756"
										},
										{
											"begin": 10711,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10701,
											"end": 10764,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10701,
											"end": 10764,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10657,
											"end": 10774,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10839,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10813,
											"end": 10845,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10864,
											"end": 10870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10861,
											"end": 10891,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10858,
											"end": 10975,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10858,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "757"
										},
										{
											"begin": 10858,
											"end": 10975,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10894,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "758"
										},
										{
											"begin": 10894,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 10894,
											"end": 10973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10894,
											"end": 10973,
											"name": "tag",
											"source": 21,
											"value": "758"
										},
										{
											"begin": 10894,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10858,
											"end": 10975,
											"name": "tag",
											"source": 21,
											"value": "757"
										},
										{
											"begin": 10858,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10999,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "759"
										},
										{
											"begin": 11053,
											"end": 11060,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11044,
											"end": 11050,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11029,
											"end": 11051,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10999,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 10999,
											"end": 11061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10999,
											"end": 11061,
											"name": "tag",
											"source": 21,
											"value": "759"
										},
										{
											"begin": 10999,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10784,
											"end": 11071,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 11078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "tag",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11189,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11171,
											"end": 11178,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11167,
											"end": 11190,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 11163,
											"end": 11195,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 11160,
											"end": 11279,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11160,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "761"
										},
										{
											"begin": 11160,
											"end": 11279,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11198,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "762"
										},
										{
											"begin": 11198,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 11198,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11198,
											"end": 11277,
											"name": "tag",
											"source": 21,
											"value": "762"
										},
										{
											"begin": 11198,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11160,
											"end": 11279,
											"name": "tag",
											"source": 21,
											"value": "761"
										},
										{
											"begin": 11160,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11318,
											"end": 11319,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "763"
										},
										{
											"begin": 11388,
											"end": 11395,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11379,
											"end": 11385,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11368,
											"end": 11377,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11364,
											"end": 11386,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 11343,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11396,
											"name": "tag",
											"source": 21,
											"value": "763"
										},
										{
											"begin": 11343,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11333,
											"end": 11396,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11333,
											"end": 11396,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11289,
											"end": 11406,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11084,
											"end": 11413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11419,
											"end": 11567,
											"name": "tag",
											"source": 21,
											"value": "585"
										},
										{
											"begin": 11419,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11491,
											"end": 11500,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "765"
										},
										{
											"begin": 11555,
											"end": 11560,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11524,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 11524,
											"end": 11561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11524,
											"end": 11561,
											"name": "tag",
											"source": 21,
											"value": "765"
										},
										{
											"begin": 11524,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11511,
											"end": 11561,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11511,
											"end": 11561,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11419,
											"end": 11567,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11419,
											"end": 11567,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11419,
											"end": 11567,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11419,
											"end": 11567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11573,
											"end": 11748,
											"name": "tag",
											"source": 21,
											"value": "586"
										},
										{
											"begin": 11573,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11682,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "767"
										},
										{
											"begin": 11735,
											"end": 11740,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11682,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "585"
										},
										{
											"begin": 11682,
											"end": 11741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11682,
											"end": 11741,
											"name": "tag",
											"source": 21,
											"value": "767"
										},
										{
											"begin": 11682,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11677,
											"end": 11680,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11670,
											"end": 11742,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11573,
											"end": 11748,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11573,
											"end": 11748,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11573,
											"end": 11748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11869,
											"end": 11873,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11909,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11905,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11892,
											"end": 11910,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11884,
											"end": 11910,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11884,
											"end": 11910,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11920,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "769"
										},
										{
											"begin": 12010,
											"end": 12011,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11999,
											"end": 12008,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11995,
											"end": 12012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11986,
											"end": 11992,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11920,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "586"
										},
										{
											"begin": 11920,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11920,
											"end": 12013,
											"name": "tag",
											"source": 21,
											"value": "769"
										},
										{
											"begin": 11920,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11754,
											"end": 12020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12026,
											"end": 12142,
											"name": "tag",
											"source": 21,
											"value": "587"
										},
										{
											"begin": 12026,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "771"
										},
										{
											"begin": 12111,
											"end": 12116,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 12096,
											"end": 12117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "tag",
											"source": 21,
											"value": "771"
										},
										{
											"begin": 12096,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12086,
											"end": 12118,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 12076,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "772"
										},
										{
											"begin": 12076,
											"end": 12136,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12130,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12134,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12076,
											"end": 12136,
											"name": "tag",
											"source": 21,
											"value": "772"
										},
										{
											"begin": 12076,
											"end": 12136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12026,
											"end": 12142,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12026,
											"end": 12142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "tag",
											"source": 21,
											"value": "588"
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12191,
											"end": 12196,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12229,
											"end": 12235,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 12207,
											"end": 12236,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12207,
											"end": 12236,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12245,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "774"
										},
										{
											"begin": 12269,
											"end": 12274,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12245,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "587"
										},
										{
											"begin": 12245,
											"end": 12275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12245,
											"end": 12275,
											"name": "tag",
											"source": 21,
											"value": "774"
										},
										{
											"begin": 12245,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12148,
											"end": 12281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12366,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12411,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12397,
											"end": 12406,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12388,
											"end": 12395,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12384,
											"end": 12407,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12380,
											"end": 12412,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12496,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "776"
										},
										{
											"begin": 12377,
											"end": 12496,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12415,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "777"
										},
										{
											"begin": 12415,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 12415,
											"end": 12494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12415,
											"end": 12494,
											"name": "tag",
											"source": 21,
											"value": "777"
										},
										{
											"begin": 12415,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12496,
											"name": "tag",
											"source": 21,
											"value": "776"
										},
										{
											"begin": 12377,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "778"
										},
										{
											"begin": 12605,
											"end": 12612,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12596,
											"end": 12602,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12594,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 12581,
											"end": 12603,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12560,
											"end": 12613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 12560,
											"end": 12613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12560,
											"end": 12613,
											"name": "tag",
											"source": 21,
											"value": "778"
										},
										{
											"begin": 12560,
											"end": 12613,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12550,
											"end": 12613,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12550,
											"end": 12613,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12506,
											"end": 12623,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12662,
											"end": 12664,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12688,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "779"
										},
										{
											"begin": 12730,
											"end": 12737,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12721,
											"end": 12727,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12710,
											"end": 12719,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 12706,
											"end": 12728,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12688,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "588"
										},
										{
											"begin": 12688,
											"end": 12738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12688,
											"end": 12738,
											"name": "tag",
											"source": 21,
											"value": "779"
										},
										{
											"begin": 12688,
											"end": 12738,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12678,
											"end": 12738,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12678,
											"end": 12738,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12633,
											"end": 12748,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12761,
											"end": 12862,
											"name": "tag",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 12761,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12797,
											"end": 12804,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12830,
											"end": 12835,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12826,
											"end": 12856,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12815,
											"end": 12856,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12815,
											"end": 12856,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12761,
											"end": 12862,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12761,
											"end": 12862,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12761,
											"end": 12862,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12761,
											"end": 12862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12868,
											"end": 12988,
											"name": "tag",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 12868,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12940,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "782"
										},
										{
											"begin": 12957,
											"end": 12962,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12940,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 12940,
											"end": 12963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12940,
											"end": 12963,
											"name": "tag",
											"source": 21,
											"value": "782"
										},
										{
											"begin": 12940,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12933,
											"end": 12938,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12930,
											"end": 12964,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 12920,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "783"
										},
										{
											"begin": 12920,
											"end": 12982,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12978,
											"end": 12979,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12975,
											"end": 12976,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12980,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12920,
											"end": 12982,
											"name": "tag",
											"source": 21,
											"value": "783"
										},
										{
											"begin": 12920,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12868,
											"end": 12988,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12868,
											"end": 12988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "tag",
											"source": 21,
											"value": "591"
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13039,
											"end": 13044,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13077,
											"end": 13083,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 13055,
											"end": 13084,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13055,
											"end": 13084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13093,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "785"
										},
										{
											"begin": 13119,
											"end": 13124,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13093,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 13093,
											"end": 13125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13093,
											"end": 13125,
											"name": "tag",
											"source": 21,
											"value": "785"
										},
										{
											"begin": 13093,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12994,
											"end": 13131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "tag",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13213,
											"end": 13219,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13221,
											"end": 13227,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13280,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 13266,
											"end": 13275,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13257,
											"end": 13264,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13253,
											"end": 13276,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 13249,
											"end": 13281,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 13246,
											"end": 13365,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13246,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "787"
										},
										{
											"begin": 13246,
											"end": 13365,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13284,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "788"
										},
										{
											"begin": 13284,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 13284,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13284,
											"end": 13363,
											"name": "tag",
											"source": 21,
											"value": "788"
										},
										{
											"begin": 13284,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13246,
											"end": 13365,
											"name": "tag",
											"source": 21,
											"value": "787"
										},
										{
											"begin": 13246,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13429,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "789"
										},
										{
											"begin": 13473,
											"end": 13480,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13464,
											"end": 13470,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13453,
											"end": 13462,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 13449,
											"end": 13471,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13429,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "591"
										},
										{
											"begin": 13429,
											"end": 13481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13429,
											"end": 13481,
											"name": "tag",
											"source": 21,
											"value": "789"
										},
										{
											"begin": 13429,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13419,
											"end": 13481,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 13419,
											"end": 13481,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13375,
											"end": 13491,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13530,
											"end": 13532,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13556,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "790"
										},
										{
											"begin": 13601,
											"end": 13608,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13592,
											"end": 13598,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13581,
											"end": 13590,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 13577,
											"end": 13599,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13556,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 13556,
											"end": 13609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13556,
											"end": 13609,
											"name": "tag",
											"source": 21,
											"value": "790"
										},
										{
											"begin": 13556,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13546,
											"end": 13609,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13546,
											"end": 13609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13501,
											"end": 13619,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13658,
											"end": 13660,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "791"
										},
										{
											"begin": 13729,
											"end": 13736,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13720,
											"end": 13726,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13709,
											"end": 13718,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 13705,
											"end": 13727,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13684,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 13684,
											"end": 13737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13684,
											"end": 13737,
											"name": "tag",
											"source": 21,
											"value": "791"
										},
										{
											"begin": 13684,
											"end": 13737,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13674,
											"end": 13737,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13674,
											"end": 13737,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13629,
											"end": 13747,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13137,
											"end": 13754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "tag",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13860,
											"end": 13883,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 13856,
											"end": 13888,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "793"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "794"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 13891,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "tag",
											"source": 21,
											"value": "794"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "tag",
											"source": 21,
											"value": "793"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "795"
										},
										{
											"begin": 14081,
											"end": 14088,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14072,
											"end": 14078,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14061,
											"end": 14070,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 14036,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "tag",
											"source": 21,
											"value": "795"
										},
										{
											"begin": 14036,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14026,
											"end": 14089,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14026,
											"end": 14089,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13982,
											"end": 14099,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14164,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "796"
										},
										{
											"begin": 14209,
											"end": 14216,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14200,
											"end": 14206,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14189,
											"end": 14198,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14185,
											"end": 14207,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14164,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 14164,
											"end": 14217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14164,
											"end": 14217,
											"name": "tag",
											"source": 21,
											"value": "796"
										},
										{
											"begin": 14164,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14154,
											"end": 14217,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14154,
											"end": 14217,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14109,
											"end": 14227,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13760,
											"end": 14234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14240,
											"end": 14548,
											"name": "tag",
											"source": 21,
											"value": "592"
										},
										{
											"begin": 14240,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14302,
											"end": 14306,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14392,
											"end": 14410,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14384,
											"end": 14390,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14381,
											"end": 14411,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14378,
											"end": 14434,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14378,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "798"
										},
										{
											"begin": 14378,
											"end": 14434,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14414,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "799"
										},
										{
											"begin": 14414,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 14414,
											"end": 14432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14414,
											"end": 14432,
											"name": "tag",
											"source": 21,
											"value": "799"
										},
										{
											"begin": 14414,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14378,
											"end": 14434,
											"name": "tag",
											"source": 21,
											"value": "798"
										},
										{
											"begin": 14378,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14452,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "800"
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14452,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 14452,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14452,
											"end": 14481,
											"name": "tag",
											"source": 21,
											"value": "800"
										},
										{
											"begin": 14452,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14530,
											"end": 14534,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14526,
											"end": 14541,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14518,
											"end": 14541,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14518,
											"end": 14541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14240,
											"end": 14548,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14240,
											"end": 14548,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14240,
											"end": 14548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14240,
											"end": 14548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "tag",
											"source": 21,
											"value": "593"
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14632,
											"end": 14637,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14657,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "802"
										},
										{
											"begin": 14673,
											"end": 14722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "803"
										},
										{
											"begin": 14715,
											"end": 14721,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14673,
											"end": 14722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "592"
										},
										{
											"begin": 14673,
											"end": 14722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14673,
											"end": 14722,
											"name": "tag",
											"source": 21,
											"value": "803"
										},
										{
											"begin": 14673,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14657,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 14657,
											"end": 14723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14657,
											"end": 14723,
											"name": "tag",
											"source": 21,
											"value": "802"
										},
										{
											"begin": 14657,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14648,
											"end": 14723,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14648,
											"end": 14723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14746,
											"end": 14752,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14739,
											"end": 14744,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14732,
											"end": 14753,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14777,
											"end": 14782,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14773,
											"end": 14789,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14822,
											"end": 14825,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14813,
											"end": 14819,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14808,
											"end": 14811,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14804,
											"end": 14820,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14801,
											"end": 14826,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14798,
											"end": 14910,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14798,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "804"
										},
										{
											"begin": 14798,
											"end": 14910,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14829,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "805"
										},
										{
											"begin": 14829,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "577"
										},
										{
											"begin": 14829,
											"end": 14908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14829,
											"end": 14908,
											"name": "tag",
											"source": 21,
											"value": "805"
										},
										{
											"begin": 14829,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14798,
											"end": 14910,
											"name": "tag",
											"source": 21,
											"value": "804"
										},
										{
											"begin": 14798,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14919,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "806"
										},
										{
											"begin": 14966,
											"end": 14972,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14961,
											"end": 14964,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14956,
											"end": 14959,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14919,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "582"
										},
										{
											"begin": 14919,
											"end": 14973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14919,
											"end": 14973,
											"name": "tag",
											"source": 21,
											"value": "806"
										},
										{
											"begin": 14919,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14638,
											"end": 14979,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14554,
											"end": 14979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "tag",
											"source": 21,
											"value": "594"
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15055,
											"end": 15060,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15107,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15097,
											"end": 15101,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 15089,
											"end": 15095,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15085,
											"end": 15102,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15081,
											"end": 15108,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 15071,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "808"
										},
										{
											"begin": 15071,
											"end": 15193,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15112,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "809"
										},
										{
											"begin": 15112,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "576"
										},
										{
											"begin": 15112,
											"end": 15191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15112,
											"end": 15191,
											"name": "tag",
											"source": 21,
											"value": "809"
										},
										{
											"begin": 15112,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15071,
											"end": 15193,
											"name": "tag",
											"source": 21,
											"value": "808"
										},
										{
											"begin": 15071,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15229,
											"end": 15235,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15216,
											"end": 15236,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 15254,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "810"
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15321,
											"end": 15327,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15314,
											"end": 15318,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15306,
											"end": 15312,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15302,
											"end": 15319,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15254,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "593"
										},
										{
											"begin": 15254,
											"end": 15333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15254,
											"end": 15333,
											"name": "tag",
											"source": 21,
											"value": "810"
										},
										{
											"begin": 15254,
											"end": 15333,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15245,
											"end": 15333,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15245,
											"end": 15333,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15061,
											"end": 15339,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14999,
											"end": 15339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "tag",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15478,
											"end": 15484,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15492,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15500,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15510,
											"end": 15516,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15524,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15526,
											"end": 15532,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 15563,
											"end": 15572,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 15554,
											"end": 15561,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 15550,
											"end": 15573,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15546,
											"end": 15579,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 15543,
											"end": 15663,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15543,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "812"
										},
										{
											"begin": 15543,
											"end": 15663,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15582,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "813"
										},
										{
											"begin": 15582,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 15582,
											"end": 15661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15582,
											"end": 15661,
											"name": "tag",
											"source": 21,
											"value": "813"
										},
										{
											"begin": 15582,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15543,
											"end": 15663,
											"name": "tag",
											"source": 21,
											"value": "812"
										},
										{
											"begin": 15543,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15730,
											"end": 15731,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15728,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 15715,
											"end": 15732,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15702,
											"end": 15733,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15752,
											"end": 15758,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15749,
											"end": 15779,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 15746,
											"end": 15863,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15746,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "814"
										},
										{
											"begin": 15746,
											"end": 15863,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "815"
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 15782,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "tag",
											"source": 21,
											"value": "815"
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15746,
											"end": 15863,
											"name": "tag",
											"source": 21,
											"value": "814"
										},
										{
											"begin": 15746,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15887,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "816"
										},
										{
											"begin": 15942,
											"end": 15949,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 15933,
											"end": 15939,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15922,
											"end": 15931,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 15918,
											"end": 15940,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15887,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "594"
										},
										{
											"begin": 15887,
											"end": 15950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15887,
											"end": 15950,
											"name": "tag",
											"source": 21,
											"value": "816"
										},
										{
											"begin": 15887,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15877,
											"end": 15950,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 15877,
											"end": 15950,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15673,
											"end": 15960,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16027,
											"end": 16029,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16025,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 16012,
											"end": 16030,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15999,
											"end": 16031,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16050,
											"end": 16056,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16047,
											"end": 16077,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 16044,
											"end": 16161,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16044,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "817"
										},
										{
											"begin": 16044,
											"end": 16161,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16080,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "818"
										},
										{
											"begin": 16080,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "546"
										},
										{
											"begin": 16080,
											"end": 16159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16080,
											"end": 16159,
											"name": "tag",
											"source": 21,
											"value": "818"
										},
										{
											"begin": 16080,
											"end": 16159,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16044,
											"end": 16161,
											"name": "tag",
											"source": 21,
											"value": "817"
										},
										{
											"begin": 16044,
											"end": 16161,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "819"
										},
										{
											"begin": 16240,
											"end": 16247,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16231,
											"end": 16237,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16220,
											"end": 16229,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16216,
											"end": 16238,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "594"
										},
										{
											"begin": 16185,
											"end": 16248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16248,
											"name": "tag",
											"source": 21,
											"value": "819"
										},
										{
											"begin": 16185,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16175,
											"end": 16248,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 16175,
											"end": 16248,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15970,
											"end": 16258,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16297,
											"end": 16299,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 16323,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "820"
										},
										{
											"begin": 16368,
											"end": 16375,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16359,
											"end": 16365,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16348,
											"end": 16357,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16344,
											"end": 16366,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16323,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 16323,
											"end": 16376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16323,
											"end": 16376,
											"name": "tag",
											"source": 21,
											"value": "820"
										},
										{
											"begin": 16323,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16313,
											"end": 16376,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 16313,
											"end": 16376,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16268,
											"end": 16386,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16425,
											"end": 16427,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 16451,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "821"
										},
										{
											"begin": 16496,
											"end": 16503,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16487,
											"end": 16493,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16472,
											"end": 16494,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16451,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 16451,
											"end": 16504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16451,
											"end": 16504,
											"name": "tag",
											"source": 21,
											"value": "821"
										},
										{
											"begin": 16451,
											"end": 16504,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16441,
											"end": 16504,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 16441,
											"end": 16504,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16396,
											"end": 16514,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16553,
											"end": 16556,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 16580,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "822"
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16616,
											"end": 16622,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16605,
											"end": 16614,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16601,
											"end": 16623,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16580,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 16580,
											"end": 16633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16580,
											"end": 16633,
											"name": "tag",
											"source": 21,
											"value": "822"
										},
										{
											"begin": 16580,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16570,
											"end": 16633,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 16570,
											"end": 16633,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16524,
											"end": 16643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16682,
											"end": 16685,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 16709,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "823"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16709,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 16709,
											"end": 16762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16709,
											"end": 16762,
											"name": "tag",
											"source": 21,
											"value": "823"
										},
										{
											"begin": 16709,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16699,
											"end": 16762,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16699,
											"end": 16762,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16653,
											"end": 16772,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16811,
											"end": 16814,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 16838,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "824"
										},
										{
											"begin": 16883,
											"end": 16890,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 16874,
											"end": 16880,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16863,
											"end": 16872,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 16859,
											"end": 16881,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16838,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 16838,
											"end": 16891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16838,
											"end": 16891,
											"name": "tag",
											"source": 21,
											"value": "824"
										},
										{
											"begin": 16838,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16828,
											"end": 16891,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16828,
											"end": 16891,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16782,
											"end": 16901,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15345,
											"end": 16908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16914,
											"end": 17094,
											"name": "tag",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 16914,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16962,
											"end": 17039,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16959,
											"end": 16960,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16952,
											"end": 17040,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17059,
											"end": 17063,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 17049,
											"end": 17064,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17083,
											"end": 17087,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 17080,
											"end": 17081,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17073,
											"end": 17088,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "tag",
											"source": 21,
											"value": "226"
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17140,
											"end": 17143,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17159,
											"end": 17179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "827"
										},
										{
											"begin": 17177,
											"end": 17178,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17159,
											"end": 17179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 17159,
											"end": 17179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17159,
											"end": 17179,
											"name": "tag",
											"source": 21,
											"value": "827"
										},
										{
											"begin": 17159,
											"end": 17179,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17154,
											"end": 17179,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17154,
											"end": 17179,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "828"
										},
										{
											"begin": 17211,
											"end": 17212,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 17193,
											"end": 17213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "tag",
											"source": 21,
											"value": "828"
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17188,
											"end": 17213,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 17188,
											"end": 17213,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17233,
											"end": 17234,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17229,
											"end": 17238,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17257,
											"end": 17260,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 17254,
											"end": 17255,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17251,
											"end": 17261,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "829"
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17264,
											"end": 17282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "830"
										},
										{
											"begin": 17264,
											"end": 17282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 17264,
											"end": 17282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17264,
											"end": 17282,
											"name": "tag",
											"source": 21,
											"value": "830"
										},
										{
											"begin": 17264,
											"end": 17282,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "tag",
											"source": 21,
											"value": "829"
										},
										{
											"begin": 17248,
											"end": 17284,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17100,
											"end": 17291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17477,
											"name": "tag",
											"source": 21,
											"value": "596"
										},
										{
											"begin": 17297,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17345,
											"end": 17422,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17342,
											"end": 17343,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17335,
											"end": 17423,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17442,
											"end": 17446,
											"name": "PUSH",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 17439,
											"end": 17440,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 17432,
											"end": 17447,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17466,
											"end": 17470,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 17463,
											"end": 17464,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17471,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 17483,
											"end": 17803,
											"name": "tag",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 17483,
											"end": 17803,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17527,
											"end": 17533,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17565,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 17558,
											"end": 17562,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17554,
											"end": 17566,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 17544,
											"end": 17566,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17544,
											"end": 17566,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17611,
											"end": 17612,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 17605,
											"end": 17609,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17601,
											"end": 17613,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 17632,
											"end": 17650,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 17622,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "833"
										},
										{
											"begin": 17622,
											"end": 17703,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17688,
											"end": 17692,
											"name": "PUSH",
											"source": 21,
											"value": "7F"
										},
										{
											"begin": 17680,
											"end": 17686,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17676,
											"end": 17693,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 17666,
											"end": 17693,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17666,
											"end": 17693,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17622,
											"end": 17703,
											"name": "tag",
											"source": 21,
											"value": "833"
										},
										{
											"begin": 17622,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17750,
											"end": 17752,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17739,
											"end": 17753,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 17719,
											"end": 17737,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17716,
											"end": 17754,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 17713,
											"end": 17797,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "834"
										},
										{
											"begin": 17713,
											"end": 17797,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17769,
											"end": 17787,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "835"
										},
										{
											"begin": 17769,
											"end": 17787,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "596"
										},
										{
											"begin": 17769,
											"end": 17787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17769,
											"end": 17787,
											"name": "tag",
											"source": 21,
											"value": "835"
										},
										{
											"begin": 17769,
											"end": 17787,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17713,
											"end": 17797,
											"name": "tag",
											"source": 21,
											"value": "834"
										},
										{
											"begin": 17713,
											"end": 17797,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17534,
											"end": 17803,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17483,
											"end": 17803,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17483,
											"end": 17803,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17483,
											"end": 17803,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17483,
											"end": 17803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17809,
											"end": 17983,
											"name": "tag",
											"source": 21,
											"value": "597"
										},
										{
											"begin": 17809,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17949,
											"end": 17975,
											"name": "PUSH",
											"source": 21,
											"value": "5265636569766572206E6F742077686974656C69737465640000000000000000"
										},
										{
											"begin": 17945,
											"end": 17946,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17937,
											"end": 17943,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17933,
											"end": 17947,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17926,
											"end": 17976,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17809,
											"end": 17983,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17809,
											"end": 17983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18355,
											"name": "tag",
											"source": 21,
											"value": "598"
										},
										{
											"begin": 17989,
											"end": 18355,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18131,
											"end": 18134,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18152,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "838"
										},
										{
											"begin": 18216,
											"end": 18218,
											"name": "PUSH",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 18211,
											"end": 18214,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18152,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 18152,
											"end": 18219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18152,
											"end": 18219,
											"name": "tag",
											"source": 21,
											"value": "838"
										},
										{
											"begin": 18152,
											"end": 18219,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18145,
											"end": 18219,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18145,
											"end": 18219,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18228,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "839"
										},
										{
											"begin": 18317,
											"end": 18320,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18228,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "597"
										},
										{
											"begin": 18228,
											"end": 18321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18228,
											"end": 18321,
											"name": "tag",
											"source": 21,
											"value": "839"
										},
										{
											"begin": 18228,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18346,
											"end": 18348,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18341,
											"end": 18344,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18337,
											"end": 18349,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18330,
											"end": 18349,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18330,
											"end": 18349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18355,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18355,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18355,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17989,
											"end": 18355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18361,
											"end": 18780,
											"name": "tag",
											"source": 21,
											"value": "246"
										},
										{
											"begin": 18361,
											"end": 18780,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18527,
											"end": 18531,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18565,
											"end": 18567,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18554,
											"end": 18563,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18550,
											"end": 18568,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18542,
											"end": 18568,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18542,
											"end": 18568,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18614,
											"end": 18623,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18608,
											"end": 18612,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18604,
											"end": 18624,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 18600,
											"end": 18601,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18589,
											"end": 18598,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18585,
											"end": 18602,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18578,
											"end": 18625,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18642,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "841"
										},
										{
											"begin": 18768,
											"end": 18772,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18642,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "598"
										},
										{
											"begin": 18642,
											"end": 18773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18642,
											"end": 18773,
											"name": "tag",
											"source": 21,
											"value": "841"
										},
										{
											"begin": 18642,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18634,
											"end": 18773,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18634,
											"end": 18773,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18361,
											"end": 18780,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18361,
											"end": 18780,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18361,
											"end": 18780,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18361,
											"end": 18780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "tag",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18826,
											"end": 18830,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18846,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "843"
										},
										{
											"begin": 18864,
											"end": 18865,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18846,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 18846,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18846,
											"end": 18866,
											"name": "tag",
											"source": 21,
											"value": "843"
										},
										{
											"begin": 18846,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18841,
											"end": 18866,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18841,
											"end": 18866,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18880,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "844"
										},
										{
											"begin": 18898,
											"end": 18899,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18880,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 18880,
											"end": 18900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18880,
											"end": 18900,
											"name": "tag",
											"source": 21,
											"value": "844"
										},
										{
											"begin": 18880,
											"end": 18900,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18875,
											"end": 18900,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 18875,
											"end": 18900,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18924,
											"end": 18925,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18921,
											"end": 18922,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 18909,
											"end": 18926,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18909,
											"end": 18926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18948,
											"end": 18949,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18942,
											"end": 18946,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18939,
											"end": 18950,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 18936,
											"end": 18973,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 18936,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "845"
										},
										{
											"begin": 18936,
											"end": 18973,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 18953,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "846"
										},
										{
											"begin": 18953,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 18953,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18953,
											"end": 18971,
											"name": "tag",
											"source": 21,
											"value": "846"
										},
										{
											"begin": 18953,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18936,
											"end": 18973,
											"name": "tag",
											"source": 21,
											"value": "845"
										},
										{
											"begin": 18936,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18786,
											"end": 18980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18986,
											"end": 19157,
											"name": "tag",
											"source": 21,
											"value": "599"
										},
										{
											"begin": 18986,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "PUSH",
											"source": 21,
											"value": "496E73756666696369656E7420756E6C6F636B65640000000000000000000000"
										},
										{
											"begin": 19122,
											"end": 19123,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19114,
											"end": 19120,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19110,
											"end": 19124,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19103,
											"end": 19150,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18986,
											"end": 19157,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18986,
											"end": 19157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19163,
											"end": 19529,
											"name": "tag",
											"source": 21,
											"value": "600"
										},
										{
											"begin": 19163,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19305,
											"end": 19308,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19326,
											"end": 19393,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "849"
										},
										{
											"begin": 19390,
											"end": 19392,
											"name": "PUSH",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 19385,
											"end": 19388,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19326,
											"end": 19393,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 19326,
											"end": 19393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19326,
											"end": 19393,
											"name": "tag",
											"source": 21,
											"value": "849"
										},
										{
											"begin": 19326,
											"end": 19393,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19319,
											"end": 19393,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19319,
											"end": 19393,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19402,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "850"
										},
										{
											"begin": 19491,
											"end": 19494,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19402,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "599"
										},
										{
											"begin": 19402,
											"end": 19495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19402,
											"end": 19495,
											"name": "tag",
											"source": 21,
											"value": "850"
										},
										{
											"begin": 19402,
											"end": 19495,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19520,
											"end": 19522,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19515,
											"end": 19518,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19511,
											"end": 19523,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19504,
											"end": 19523,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19504,
											"end": 19523,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19163,
											"end": 19529,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19163,
											"end": 19529,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19163,
											"end": 19529,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19163,
											"end": 19529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19954,
											"name": "tag",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 19535,
											"end": 19954,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19701,
											"end": 19705,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19739,
											"end": 19741,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19728,
											"end": 19737,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19724,
											"end": 19742,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19716,
											"end": 19742,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19716,
											"end": 19742,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19788,
											"end": 19797,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19782,
											"end": 19786,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 19774,
											"end": 19775,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19763,
											"end": 19772,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 19759,
											"end": 19776,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19752,
											"end": 19799,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19816,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "852"
										},
										{
											"begin": 19942,
											"end": 19946,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19816,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "600"
										},
										{
											"begin": 19816,
											"end": 19947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19816,
											"end": 19947,
											"name": "tag",
											"source": 21,
											"value": "852"
										},
										{
											"begin": 19816,
											"end": 19947,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19808,
											"end": 19947,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19808,
											"end": 19947,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19954,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19954,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19954,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19535,
											"end": 19954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19960,
											"end": 20183,
											"name": "tag",
											"source": 21,
											"value": "601"
										},
										{
											"begin": 19960,
											"end": 20183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20100,
											"end": 20134,
											"name": "PUSH",
											"source": 21,
											"value": "43726F73732D636861696E207265636569766572206E6F742077686974656C69"
										},
										{
											"begin": 20096,
											"end": 20097,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20088,
											"end": 20094,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20084,
											"end": 20098,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20077,
											"end": 20135,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20169,
											"end": 20175,
											"name": "PUSH",
											"source": 21,
											"value": "7374656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20164,
											"end": 20166,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20156,
											"end": 20162,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20152,
											"end": 20167,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20145,
											"end": 20176,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19960,
											"end": 20183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19960,
											"end": 20183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "tag",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20331,
											"end": 20334,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "855"
										},
										{
											"begin": 20416,
											"end": 20418,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 20411,
											"end": 20414,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 20352,
											"end": 20419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "tag",
											"source": 21,
											"value": "855"
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20345,
											"end": 20419,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20345,
											"end": 20419,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "856"
										},
										{
											"begin": 20517,
											"end": 20520,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "601"
										},
										{
											"begin": 20428,
											"end": 20521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "tag",
											"source": 21,
											"value": "856"
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20546,
											"end": 20548,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 20541,
											"end": 20544,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20537,
											"end": 20549,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20530,
											"end": 20549,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20530,
											"end": 20549,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20189,
											"end": 20555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "tag",
											"source": 21,
											"value": "312"
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20727,
											"end": 20731,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20765,
											"end": 20767,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20754,
											"end": 20763,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20750,
											"end": 20768,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20742,
											"end": 20768,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20742,
											"end": 20768,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20814,
											"end": 20823,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20808,
											"end": 20812,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20804,
											"end": 20824,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 20800,
											"end": 20801,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20789,
											"end": 20798,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 20785,
											"end": 20802,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20778,
											"end": 20825,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "858"
										},
										{
											"begin": 20968,
											"end": 20972,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 20842,
											"end": 20973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "tag",
											"source": 21,
											"value": "858"
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20834,
											"end": 20973,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20834,
											"end": 20973,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20561,
											"end": 20980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 20986,
											"end": 21101,
											"name": "tag",
											"source": 21,
											"value": "603"
										},
										{
											"begin": 20986,
											"end": 21101,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "860"
										},
										{
											"begin": 21088,
											"end": 21093,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 21071,
											"end": 21094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "tag",
											"source": 21,
											"value": "860"
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21066,
											"end": 21069,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21059,
											"end": 21095,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20986,
											"end": 21101,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20986,
											"end": 21101,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20986,
											"end": 21101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21107,
											"end": 21225,
											"name": "tag",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 21107,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21194,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "862"
										},
										{
											"begin": 21212,
											"end": 21217,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21194,
											"end": 21218,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "553"
										},
										{
											"begin": 21194,
											"end": 21218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21194,
											"end": 21218,
											"name": "tag",
											"source": 21,
											"value": "862"
										},
										{
											"begin": 21194,
											"end": 21218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21189,
											"end": 21192,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21182,
											"end": 21219,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21107,
											"end": 21225,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21107,
											"end": 21225,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21107,
											"end": 21225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "tag",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21378,
											"end": 21382,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21416,
											"end": 21418,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 21405,
											"end": 21414,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21401,
											"end": 21419,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21393,
											"end": 21419,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21393,
											"end": 21419,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21429,
											"end": 21498,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "864"
										},
										{
											"begin": 21495,
											"end": 21496,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21484,
											"end": 21493,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21480,
											"end": 21497,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21471,
											"end": 21477,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 21429,
											"end": 21498,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "603"
										},
										{
											"begin": 21429,
											"end": 21498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21429,
											"end": 21498,
											"name": "tag",
											"source": 21,
											"value": "864"
										},
										{
											"begin": 21429,
											"end": 21498,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21508,
											"end": 21580,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "865"
										},
										{
											"begin": 21576,
											"end": 21578,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 21565,
											"end": 21574,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21561,
											"end": 21579,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21552,
											"end": 21558,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 21508,
											"end": 21580,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 21508,
											"end": 21580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21508,
											"end": 21580,
											"name": "tag",
											"source": 21,
											"value": "865"
										},
										{
											"begin": 21508,
											"end": 21580,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21590,
											"end": 21662,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "866"
										},
										{
											"begin": 21658,
											"end": 21660,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 21647,
											"end": 21656,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21643,
											"end": 21661,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21634,
											"end": 21640,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 21590,
											"end": 21662,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 21590,
											"end": 21662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21590,
											"end": 21662,
											"name": "tag",
											"source": 21,
											"value": "866"
										},
										{
											"begin": 21590,
											"end": 21662,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21231,
											"end": 21669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "tag",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21715,
											"end": 21722,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21738,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "868"
										},
										{
											"begin": 21756,
											"end": 21757,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21738,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 21738,
											"end": 21758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21738,
											"end": 21758,
											"name": "tag",
											"source": 21,
											"value": "868"
										},
										{
											"begin": 21738,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21733,
											"end": 21758,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21733,
											"end": 21758,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21772,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "869"
										},
										{
											"begin": 21790,
											"end": 21791,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21772,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 21772,
											"end": 21792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21772,
											"end": 21792,
											"name": "tag",
											"source": 21,
											"value": "869"
										},
										{
											"begin": 21772,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21767,
											"end": 21792,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 21767,
											"end": 21792,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21827,
											"end": 21828,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21824,
											"end": 21825,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21820,
											"end": 21829,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 21849,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "870"
										},
										{
											"begin": 21867,
											"end": 21878,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21849,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 21849,
											"end": 21879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21849,
											"end": 21879,
											"name": "tag",
											"source": 21,
											"value": "870"
										},
										{
											"begin": 21849,
											"end": 21879,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21838,
											"end": 21879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21838,
											"end": 21879,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22028,
											"end": 22029,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22019,
											"end": 22026,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22015,
											"end": 22030,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 22012,
											"end": 22013,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 22009,
											"end": 22031,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 21989,
											"end": 21990,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21982,
											"end": 21991,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 21962,
											"end": 22045,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 21939,
											"end": 22078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "871"
										},
										{
											"begin": 21939,
											"end": 22078,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 22058,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "872"
										},
										{
											"begin": 22058,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 22058,
											"end": 22076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22058,
											"end": 22076,
											"name": "tag",
											"source": 21,
											"value": "872"
										},
										{
											"begin": 22058,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21939,
											"end": 22078,
											"name": "tag",
											"source": 21,
											"value": "871"
										},
										{
											"begin": 21939,
											"end": 22078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21723,
											"end": 22085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21675,
											"end": 22085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22091,
											"end": 22316,
											"name": "tag",
											"source": 21,
											"value": "605"
										},
										{
											"begin": 22091,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22231,
											"end": 22265,
											"name": "PUSH",
											"source": 21,
											"value": "546F74616C20736861726573206D757374206265206772656174657220746861"
										},
										{
											"begin": 22227,
											"end": 22228,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22219,
											"end": 22225,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22215,
											"end": 22229,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22208,
											"end": 22266,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 22300,
											"end": 22308,
											"name": "PUSH",
											"source": 21,
											"value": "6E207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22295,
											"end": 22297,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 22287,
											"end": 22293,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22283,
											"end": 22298,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22276,
											"end": 22309,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 22091,
											"end": 22316,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22091,
											"end": 22316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22322,
											"end": 22688,
											"name": "tag",
											"source": 21,
											"value": "606"
										},
										{
											"begin": 22322,
											"end": 22688,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22464,
											"end": 22467,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22485,
											"end": 22552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "875"
										},
										{
											"begin": 22549,
											"end": 22551,
											"name": "PUSH",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 22544,
											"end": 22547,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22485,
											"end": 22552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 22485,
											"end": 22552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22485,
											"end": 22552,
											"name": "tag",
											"source": 21,
											"value": "875"
										},
										{
											"begin": 22485,
											"end": 22552,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22478,
											"end": 22552,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22478,
											"end": 22552,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22561,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "876"
										},
										{
											"begin": 22650,
											"end": 22653,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22561,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "605"
										},
										{
											"begin": 22561,
											"end": 22654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22561,
											"end": 22654,
											"name": "tag",
											"source": 21,
											"value": "876"
										},
										{
											"begin": 22561,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22679,
											"end": 22681,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 22674,
											"end": 22677,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22670,
											"end": 22682,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22663,
											"end": 22682,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22663,
											"end": 22682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22322,
											"end": 22688,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22322,
											"end": 22688,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22322,
											"end": 22688,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22322,
											"end": 22688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22694,
											"end": 23113,
											"name": "tag",
											"source": 21,
											"value": "358"
										},
										{
											"begin": 22694,
											"end": 23113,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22860,
											"end": 22864,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22900,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 22887,
											"end": 22896,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22883,
											"end": 22901,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22875,
											"end": 22901,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22875,
											"end": 22901,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22947,
											"end": 22956,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22941,
											"end": 22945,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22937,
											"end": 22957,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 22933,
											"end": 22934,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22922,
											"end": 22931,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22918,
											"end": 22935,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22911,
											"end": 22958,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 22975,
											"end": 23106,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "878"
										},
										{
											"begin": 23101,
											"end": 23105,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22975,
											"end": 23106,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "606"
										},
										{
											"begin": 22975,
											"end": 23106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 22975,
											"end": 23106,
											"name": "tag",
											"source": 21,
											"value": "878"
										},
										{
											"begin": 22975,
											"end": 23106,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22967,
											"end": 23106,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22967,
											"end": 23106,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22694,
											"end": 23113,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22694,
											"end": 23113,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22694,
											"end": 23113,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22694,
											"end": 23113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23119,
											"end": 23204,
											"name": "tag",
											"source": 21,
											"value": "607"
										},
										{
											"begin": 23119,
											"end": 23204,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23164,
											"end": 23171,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23193,
											"end": 23198,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23182,
											"end": 23198,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23182,
											"end": 23198,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23119,
											"end": 23204,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23119,
											"end": 23204,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23119,
											"end": 23204,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23119,
											"end": 23204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23210,
											"end": 23366,
											"name": "tag",
											"source": 21,
											"value": "608"
										},
										{
											"begin": 23210,
											"end": 23366,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23267,
											"end": 23276,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23300,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "881"
										},
										{
											"begin": 23317,
											"end": 23359,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "882"
										},
										{
											"begin": 23326,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "883"
										},
										{
											"begin": 23352,
											"end": 23357,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 23326,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "607"
										},
										{
											"begin": 23326,
											"end": 23358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23326,
											"end": 23358,
											"name": "tag",
											"source": 21,
											"value": "883"
										},
										{
											"begin": 23326,
											"end": 23358,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23317,
											"end": 23359,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 23317,
											"end": 23359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23317,
											"end": 23359,
											"name": "tag",
											"source": 21,
											"value": "882"
										},
										{
											"begin": 23317,
											"end": 23359,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23300,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 23300,
											"end": 23360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23300,
											"end": 23360,
											"name": "tag",
											"source": 21,
											"value": "881"
										},
										{
											"begin": 23300,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23287,
											"end": 23360,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23287,
											"end": 23360,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23210,
											"end": 23366,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23210,
											"end": 23366,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23210,
											"end": 23366,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23210,
											"end": 23366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23372,
											"end": 23517,
											"name": "tag",
											"source": 21,
											"value": "609"
										},
										{
											"begin": 23372,
											"end": 23517,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23466,
											"end": 23510,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "885"
										},
										{
											"begin": 23504,
											"end": 23509,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23466,
											"end": 23510,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "608"
										},
										{
											"begin": 23466,
											"end": 23510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23466,
											"end": 23510,
											"name": "tag",
											"source": 21,
											"value": "885"
										},
										{
											"begin": 23466,
											"end": 23510,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23461,
											"end": 23464,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23454,
											"end": 23511,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 23372,
											"end": 23517,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23372,
											"end": 23517,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23372,
											"end": 23517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "tag",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23623,
											"end": 23627,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23661,
											"end": 23663,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 23650,
											"end": 23659,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23646,
											"end": 23664,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 23638,
											"end": 23664,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23638,
											"end": 23664,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23674,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "887"
										},
										{
											"begin": 23749,
											"end": 23750,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23738,
											"end": 23747,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 23734,
											"end": 23751,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 23725,
											"end": 23731,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 23674,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "609"
										},
										{
											"begin": 23674,
											"end": 23752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23674,
											"end": 23752,
											"name": "tag",
											"source": 21,
											"value": "887"
										},
										{
											"begin": 23674,
											"end": 23752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23523,
											"end": 23759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "tag",
											"source": 21,
											"value": "407"
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23858,
											"end": 23862,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23896,
											"end": 23898,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 23885,
											"end": 23894,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 23881,
											"end": 23899,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 23873,
											"end": 23899,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 23873,
											"end": 23899,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23909,
											"end": 23980,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "889"
										},
										{
											"begin": 23977,
											"end": 23978,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23966,
											"end": 23975,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 23962,
											"end": 23979,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 23953,
											"end": 23959,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 23909,
											"end": 23980,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 23909,
											"end": 23980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23909,
											"end": 23980,
											"name": "tag",
											"source": 21,
											"value": "889"
										},
										{
											"begin": 23909,
											"end": 23980,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23765,
											"end": 23987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "tag",
											"source": 21,
											"value": "610"
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24050,
											"end": 24055,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24081,
											"end": 24087,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 24075,
											"end": 24088,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 24066,
											"end": 24088,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 24066,
											"end": 24088,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24097,
											"end": 24130,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "891"
										},
										{
											"begin": 24124,
											"end": 24129,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 24097,
											"end": 24130,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "566"
										},
										{
											"begin": 24097,
											"end": 24130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24097,
											"end": 24130,
											"name": "tag",
											"source": 21,
											"value": "891"
										},
										{
											"begin": 24097,
											"end": 24130,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23993,
											"end": 24136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "tag",
											"source": 21,
											"value": "425"
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24212,
											"end": 24218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24261,
											"end": 24263,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 24249,
											"end": 24258,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24240,
											"end": 24247,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 24236,
											"end": 24259,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 24232,
											"end": 24264,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 24229,
											"end": 24348,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 24229,
											"end": 24348,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "893"
										},
										{
											"begin": 24229,
											"end": 24348,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 24267,
											"end": 24346,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "894"
										},
										{
											"begin": 24267,
											"end": 24346,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "545"
										},
										{
											"begin": 24267,
											"end": 24346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24267,
											"end": 24346,
											"name": "tag",
											"source": 21,
											"value": "894"
										},
										{
											"begin": 24267,
											"end": 24346,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24229,
											"end": 24348,
											"name": "tag",
											"source": 21,
											"value": "893"
										},
										{
											"begin": 24229,
											"end": 24348,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24387,
											"end": 24388,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24412,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "895"
										},
										{
											"begin": 24468,
											"end": 24475,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 24459,
											"end": 24465,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24448,
											"end": 24457,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 24444,
											"end": 24466,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24412,
											"end": 24476,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "610"
										},
										{
											"begin": 24412,
											"end": 24476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24412,
											"end": 24476,
											"name": "tag",
											"source": 21,
											"value": "895"
										},
										{
											"begin": 24412,
											"end": 24476,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24402,
											"end": 24476,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24402,
											"end": 24476,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24358,
											"end": 24486,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24142,
											"end": 24493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "tag",
											"source": 21,
											"value": "466"
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24620,
											"end": 24624,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24658,
											"end": 24660,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 24647,
											"end": 24656,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 24643,
											"end": 24661,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24635,
											"end": 24661,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 24635,
											"end": 24661,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24671,
											"end": 24742,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "897"
										},
										{
											"begin": 24739,
											"end": 24740,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 24728,
											"end": 24737,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 24724,
											"end": 24741,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24715,
											"end": 24721,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 24671,
											"end": 24742,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 24671,
											"end": 24742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24671,
											"end": 24742,
											"name": "tag",
											"source": 21,
											"value": "897"
										},
										{
											"begin": 24671,
											"end": 24742,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24752,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "898"
										},
										{
											"begin": 24820,
											"end": 24822,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 24809,
											"end": 24818,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 24805,
											"end": 24823,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 24796,
											"end": 24802,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 24752,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 24752,
											"end": 24824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24752,
											"end": 24824,
											"name": "tag",
											"source": 21,
											"value": "898"
										},
										{
											"begin": 24752,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24499,
											"end": 24831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "tag",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24986,
											"end": 24990,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25024,
											"end": 25026,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 25013,
											"end": 25022,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25009,
											"end": 25027,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25001,
											"end": 25027,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25001,
											"end": 25027,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25037,
											"end": 25108,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "900"
										},
										{
											"begin": 25105,
											"end": 25106,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25094,
											"end": 25103,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25090,
											"end": 25107,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25081,
											"end": 25087,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 25037,
											"end": 25108,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 25037,
											"end": 25108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25037,
											"end": 25108,
											"name": "tag",
											"source": 21,
											"value": "900"
										},
										{
											"begin": 25037,
											"end": 25108,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25118,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "901"
										},
										{
											"begin": 25186,
											"end": 25188,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 25175,
											"end": 25184,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25171,
											"end": 25189,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25162,
											"end": 25168,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 25118,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 25118,
											"end": 25190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25118,
											"end": 25190,
											"name": "tag",
											"source": 21,
											"value": "901"
										},
										{
											"begin": 25118,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25200,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "902"
										},
										{
											"begin": 25268,
											"end": 25270,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 25257,
											"end": 25266,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25253,
											"end": 25271,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25244,
											"end": 25250,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 25200,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 25200,
											"end": 25272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25200,
											"end": 25272,
											"name": "tag",
											"source": 21,
											"value": "902"
										},
										{
											"begin": 25200,
											"end": 25272,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 24837,
											"end": 25279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25285,
											"end": 25426,
											"name": "tag",
											"source": 21,
											"value": "611"
										},
										{
											"begin": 25285,
											"end": 25426,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25334,
											"end": 25338,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25357,
											"end": 25360,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25349,
											"end": 25360,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25349,
											"end": 25360,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25380,
											"end": 25383,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 25377,
											"end": 25378,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25370,
											"end": 25384,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 25414,
											"end": 25418,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 25411,
											"end": 25412,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25401,
											"end": 25419,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 25393,
											"end": 25419,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25393,
											"end": 25419,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25285,
											"end": 25426,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25285,
											"end": 25426,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25285,
											"end": 25426,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25285,
											"end": 25426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25432,
											"end": 25525,
											"name": "tag",
											"source": 21,
											"value": "612"
										},
										{
											"begin": 25432,
											"end": 25525,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25469,
											"end": 25475,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25516,
											"end": 25518,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 25511,
											"end": 25513,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 25504,
											"end": 25509,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25500,
											"end": 25514,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 25496,
											"end": 25519,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 25486,
											"end": 25519,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25486,
											"end": 25519,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25432,
											"end": 25525,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25432,
											"end": 25525,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25432,
											"end": 25525,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25432,
											"end": 25525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "tag",
											"source": 21,
											"value": "613"
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25575,
											"end": 25583,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25625,
											"end": 25630,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25619,
											"end": 25623,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25615,
											"end": 25631,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 25594,
											"end": 25631,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 25594,
											"end": 25631,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25531,
											"end": 25638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "tag",
											"source": 21,
											"value": "614"
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25713,
											"end": 25719,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 25763,
											"end": 25764,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 25751,
											"end": 25761,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25747,
											"end": 25765,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 25786,
											"end": 25883,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "907"
										},
										{
											"begin": 25816,
											"end": 25882,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25805,
											"end": 25814,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 25786,
											"end": 25883,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "613"
										},
										{
											"begin": 25786,
											"end": 25883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25786,
											"end": 25883,
											"name": "tag",
											"source": 21,
											"value": "907"
										},
										{
											"begin": 25786,
											"end": 25883,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25904,
											"end": 25943,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "908"
										},
										{
											"begin": 25934,
											"end": 25942,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 25923,
											"end": 25932,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 25904,
											"end": 25943,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "613"
										},
										{
											"begin": 25904,
											"end": 25943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 25904,
											"end": 25943,
											"name": "tag",
											"source": 21,
											"value": "908"
										},
										{
											"begin": 25904,
											"end": 25943,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 25892,
											"end": 25943,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 25892,
											"end": 25943,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25976,
											"end": 25980,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 25972,
											"end": 25981,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 25965,
											"end": 25970,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 25961,
											"end": 25982,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 25952,
											"end": 25982,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 25952,
											"end": 25982,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26025,
											"end": 26029,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 26015,
											"end": 26023,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 26011,
											"end": 26030,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 26004,
											"end": 26009,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26001,
											"end": 26031,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 25991,
											"end": 26031,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 25991,
											"end": 26031,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25720,
											"end": 26037,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25720,
											"end": 26037,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 25644,
											"end": 26037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26043,
											"end": 26185,
											"name": "tag",
											"source": 21,
											"value": "615"
										},
										{
											"begin": 26043,
											"end": 26185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26093,
											"end": 26102,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "910"
										},
										{
											"begin": 26144,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "911"
										},
										{
											"begin": 26153,
											"end": 26177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "912"
										},
										{
											"begin": 26171,
											"end": 26176,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26153,
											"end": 26177,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 26153,
											"end": 26177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26153,
											"end": 26177,
											"name": "tag",
											"source": 21,
											"value": "912"
										},
										{
											"begin": 26153,
											"end": 26177,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26144,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 26144,
											"end": 26178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26144,
											"end": 26178,
											"name": "tag",
											"source": 21,
											"value": "911"
										},
										{
											"begin": 26144,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26126,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 26126,
											"end": 26179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26126,
											"end": 26179,
											"name": "tag",
											"source": 21,
											"value": "910"
										},
										{
											"begin": 26126,
											"end": 26179,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26113,
											"end": 26179,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26113,
											"end": 26179,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26043,
											"end": 26185,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 26043,
											"end": 26185,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26043,
											"end": 26185,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26043,
											"end": 26185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26191,
											"end": 26266,
											"name": "tag",
											"source": 21,
											"value": "616"
										},
										{
											"begin": 26191,
											"end": 26266,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26234,
											"end": 26237,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26255,
											"end": 26260,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26248,
											"end": 26260,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26248,
											"end": 26260,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26191,
											"end": 26266,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 26191,
											"end": 26266,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26191,
											"end": 26266,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26191,
											"end": 26266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26272,
											"end": 26541,
											"name": "tag",
											"source": 21,
											"value": "617"
										},
										{
											"begin": 26272,
											"end": 26541,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26382,
											"end": 26421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "915"
										},
										{
											"begin": 26413,
											"end": 26420,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 26382,
											"end": 26421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "615"
										},
										{
											"begin": 26382,
											"end": 26421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26382,
											"end": 26421,
											"name": "tag",
											"source": 21,
											"value": "915"
										},
										{
											"begin": 26382,
											"end": 26421,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26443,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "916"
										},
										{
											"begin": 26492,
											"end": 26533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "917"
										},
										{
											"begin": 26516,
											"end": 26532,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26492,
											"end": 26533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "616"
										},
										{
											"begin": 26492,
											"end": 26533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26492,
											"end": 26533,
											"name": "tag",
											"source": 21,
											"value": "917"
										},
										{
											"begin": 26492,
											"end": 26533,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26484,
											"end": 26490,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26477,
											"end": 26481,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26471,
											"end": 26482,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 26443,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "614"
										},
										{
											"begin": 26443,
											"end": 26534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26443,
											"end": 26534,
											"name": "tag",
											"source": 21,
											"value": "916"
										},
										{
											"begin": 26443,
											"end": 26534,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26437,
											"end": 26441,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26430,
											"end": 26535,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 26348,
											"end": 26541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26272,
											"end": 26541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26272,
											"end": 26541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26272,
											"end": 26541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26272,
											"end": 26541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26547,
											"end": 26620,
											"name": "tag",
											"source": 21,
											"value": "618"
										},
										{
											"begin": 26547,
											"end": 26620,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26592,
											"end": 26595,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26613,
											"end": 26614,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26606,
											"end": 26614,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26606,
											"end": 26614,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26547,
											"end": 26620,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26547,
											"end": 26620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26626,
											"end": 26815,
											"name": "tag",
											"source": 21,
											"value": "619"
										},
										{
											"begin": 26626,
											"end": 26815,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26703,
											"end": 26735,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "920"
										},
										{
											"begin": 26703,
											"end": 26735,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "618"
										},
										{
											"begin": 26703,
											"end": 26735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26703,
											"end": 26735,
											"name": "tag",
											"source": 21,
											"value": "920"
										},
										{
											"begin": 26703,
											"end": 26735,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26744,
											"end": 26809,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "921"
										},
										{
											"begin": 26802,
											"end": 26808,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26794,
											"end": 26800,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26788,
											"end": 26792,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 26744,
											"end": 26809,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "617"
										},
										{
											"begin": 26744,
											"end": 26809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26744,
											"end": 26809,
											"name": "tag",
											"source": 21,
											"value": "921"
										},
										{
											"begin": 26744,
											"end": 26809,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26679,
											"end": 26815,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26626,
											"end": 26815,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26626,
											"end": 26815,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26626,
											"end": 26815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26821,
											"end": 27007,
											"name": "tag",
											"source": 21,
											"value": "620"
										},
										{
											"begin": 26821,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "tag",
											"source": 21,
											"value": "923"
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26898,
											"end": 26901,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26891,
											"end": 26896,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26888,
											"end": 26902,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "925"
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 26952,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "926"
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 26982,
											"end": 26987,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 26952,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "619"
										},
										{
											"begin": 26952,
											"end": 26991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26952,
											"end": 26991,
											"name": "tag",
											"source": 21,
											"value": "926"
										},
										{
											"begin": 26952,
											"end": 26991,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26925,
											"end": 26926,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 26918,
											"end": 26923,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 26914,
											"end": 26927,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 26905,
											"end": 26927,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 26905,
											"end": 26927,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "923"
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "tag",
											"source": 21,
											"value": "925"
										},
										{
											"begin": 26881,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 26821,
											"end": 27007,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26821,
											"end": 27007,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 26821,
											"end": 27007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27013,
											"end": 27556,
											"name": "tag",
											"source": 21,
											"value": "621"
										},
										{
											"begin": 27013,
											"end": 27556,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27114,
											"end": 27116,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 27109,
											"end": 27112,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27106,
											"end": 27117,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 27103,
											"end": 27549,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 27103,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "928"
										},
										{
											"begin": 27103,
											"end": 27549,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 27148,
											"end": 27186,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "929"
										},
										{
											"begin": 27180,
											"end": 27185,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27148,
											"end": 27186,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "611"
										},
										{
											"begin": 27148,
											"end": 27186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27148,
											"end": 27186,
											"name": "tag",
											"source": 21,
											"value": "929"
										},
										{
											"begin": 27148,
											"end": 27186,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27232,
											"end": 27261,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "930"
										},
										{
											"begin": 27250,
											"end": 27260,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 27232,
											"end": 27261,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "612"
										},
										{
											"begin": 27232,
											"end": 27261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27232,
											"end": 27261,
											"name": "tag",
											"source": 21,
											"value": "930"
										},
										{
											"begin": 27232,
											"end": 27261,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27222,
											"end": 27230,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27218,
											"end": 27262,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27415,
											"end": 27417,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 27403,
											"end": 27413,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 27400,
											"end": 27418,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 27397,
											"end": 27446,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 27397,
											"end": 27446,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "931"
										},
										{
											"begin": 27397,
											"end": 27446,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 27436,
											"end": 27444,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27397,
											"end": 27446,
											"name": "tag",
											"source": 21,
											"value": "931"
										},
										{
											"begin": 27397,
											"end": 27446,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27459,
											"end": 27539,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "932"
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "933"
										},
										{
											"begin": 27533,
											"end": 27536,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "612"
										},
										{
											"begin": 27515,
											"end": 27537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "tag",
											"source": 21,
											"value": "933"
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27505,
											"end": 27513,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 27501,
											"end": 27538,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 27488,
											"end": 27499,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27459,
											"end": 27539,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "620"
										},
										{
											"begin": 27459,
											"end": 27539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27459,
											"end": 27539,
											"name": "tag",
											"source": 21,
											"value": "932"
										},
										{
											"begin": 27459,
											"end": 27539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27118,
											"end": 27549,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27118,
											"end": 27549,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27103,
											"end": 27549,
											"name": "tag",
											"source": 21,
											"value": "928"
										},
										{
											"begin": 27103,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27013,
											"end": 27556,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27013,
											"end": 27556,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27013,
											"end": 27556,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27013,
											"end": 27556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "tag",
											"source": 21,
											"value": "622"
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27616,
											"end": 27624,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27666,
											"end": 27671,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27660,
											"end": 27664,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 27656,
											"end": 27672,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 27635,
											"end": 27672,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 27635,
											"end": 27672,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27562,
											"end": 27679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "tag",
											"source": 21,
											"value": "623"
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27729,
											"end": 27735,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27762,
											"end": 27813,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "936"
										},
										{
											"begin": 27810,
											"end": 27811,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 27806,
											"end": 27812,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 27798,
											"end": 27803,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 27795,
											"end": 27796,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 27791,
											"end": 27804,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 27762,
											"end": 27813,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "622"
										},
										{
											"begin": 27762,
											"end": 27813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27762,
											"end": 27813,
											"name": "tag",
											"source": 21,
											"value": "936"
										},
										{
											"begin": 27762,
											"end": 27813,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27758,
											"end": 27814,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 27843,
											"end": 27847,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 27837,
											"end": 27841,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 27833,
											"end": 27848,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 27823,
											"end": 27848,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27823,
											"end": 27848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27736,
											"end": 27854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27685,
											"end": 27854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "tag",
											"source": 21,
											"value": "624"
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 27935,
											"end": 27939,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28081,
											"end": 28110,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "938"
										},
										{
											"begin": 28106,
											"end": 28109,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28100,
											"end": 28104,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28081,
											"end": 28110,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "623"
										},
										{
											"begin": 28081,
											"end": 28110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28081,
											"end": 28110,
											"name": "tag",
											"source": 21,
											"value": "938"
										},
										{
											"begin": 28081,
											"end": 28110,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28073,
											"end": 28110,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 28073,
											"end": 28110,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28143,
											"end": 28146,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28140,
											"end": 28141,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 28136,
											"end": 28147,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 28130,
											"end": 28134,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28127,
											"end": 28148,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 28119,
											"end": 28148,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28119,
											"end": 28148,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 27859,
											"end": 28154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28159,
											"end": 29554,
											"name": "tag",
											"source": 21,
											"value": "514"
										},
										{
											"begin": 28159,
											"end": 29554,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28276,
											"end": 28313,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "940"
										},
										{
											"begin": 28309,
											"end": 28312,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28276,
											"end": 28313,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "559"
										},
										{
											"begin": 28276,
											"end": 28313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28276,
											"end": 28313,
											"name": "tag",
											"source": 21,
											"value": "940"
										},
										{
											"begin": 28276,
											"end": 28313,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28378,
											"end": 28396,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28370,
											"end": 28376,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28367,
											"end": 28397,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 28364,
											"end": 28420,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 28364,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "941"
										},
										{
											"begin": 28364,
											"end": 28420,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "942"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 28400,
											"end": 28418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "tag",
											"source": 21,
											"value": "942"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28364,
											"end": 28420,
											"name": "tag",
											"source": 21,
											"value": "941"
										},
										{
											"begin": 28364,
											"end": 28420,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28444,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "943"
										},
										{
											"begin": 28476,
											"end": 28480,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28470,
											"end": 28481,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 28444,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 28444,
											"end": 28482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28444,
											"end": 28482,
											"name": "tag",
											"source": 21,
											"value": "943"
										},
										{
											"begin": 28444,
											"end": 28482,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28529,
											"end": 28596,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "944"
										},
										{
											"begin": 28589,
											"end": 28595,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28581,
											"end": 28587,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28575,
											"end": 28579,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 28529,
											"end": 28596,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "621"
										},
										{
											"begin": 28529,
											"end": 28596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28529,
											"end": 28596,
											"name": "tag",
											"source": 21,
											"value": "944"
										},
										{
											"begin": 28529,
											"end": 28596,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28623,
											"end": 28624,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28647,
											"end": 28651,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 28634,
											"end": 28651,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28634,
											"end": 28651,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28679,
											"end": 28681,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 28671,
											"end": 28677,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 28668,
											"end": 28682,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 28696,
											"end": 28697,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "946"
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 29353,
											"end": 29354,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29370,
											"end": 29376,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 29367,
											"end": 29444,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 29367,
											"end": 29444,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "947"
										},
										{
											"begin": 29367,
											"end": 29444,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 29419,
											"end": 29428,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29414,
											"end": 29417,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 29410,
											"end": 29429,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29404,
											"end": 29430,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 29395,
											"end": 29430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29395,
											"end": 29430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29367,
											"end": 29444,
											"name": "tag",
											"source": 21,
											"value": "947"
										},
										{
											"begin": 29367,
											"end": 29444,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29470,
											"end": 29537,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "948"
										},
										{
											"begin": 29530,
											"end": 29536,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 29523,
											"end": 29528,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29470,
											"end": 29537,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "624"
										},
										{
											"begin": 29470,
											"end": 29537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29470,
											"end": 29537,
											"name": "tag",
											"source": 21,
											"value": "948"
										},
										{
											"begin": 29470,
											"end": 29537,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29464,
											"end": 29468,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 29457,
											"end": 29538,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 29326,
											"end": 29548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28661,
											"end": 29548,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "945"
										},
										{
											"begin": 28661,
											"end": 29548,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "tag",
											"source": 21,
											"value": "946"
										},
										{
											"begin": 28691,
											"end": 29309,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28743,
											"end": 28747,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 28739,
											"end": 28748,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 28731,
											"end": 28737,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 28727,
											"end": 28749,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 28777,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "949"
										},
										{
											"begin": 28809,
											"end": 28813,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 28777,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "611"
										},
										{
											"begin": 28777,
											"end": 28814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28777,
											"end": 28814,
											"name": "tag",
											"source": 21,
											"value": "949"
										},
										{
											"begin": 28777,
											"end": 28814,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28836,
											"end": 28837,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "tag",
											"source": 21,
											"value": "950"
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28864,
											"end": 28871,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28861,
											"end": 28862,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28858,
											"end": 28872,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "952"
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 28943,
											"end": 28952,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 28938,
											"end": 28941,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 28934,
											"end": 28953,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28928,
											"end": 28954,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 28920,
											"end": 28926,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28913,
											"end": 28955,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 28994,
											"end": 28995,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 28986,
											"end": 28992,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 28982,
											"end": 28996,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28972,
											"end": 28996,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 28972,
											"end": 28996,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29041,
											"end": 29043,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 29030,
											"end": 29039,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 29026,
											"end": 29044,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29013,
											"end": 29044,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 29013,
											"end": 29044,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28887,
											"end": 28891,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 28884,
											"end": 28885,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 28880,
											"end": 28892,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 28875,
											"end": 28892,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 28875,
											"end": 28892,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "950"
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "tag",
											"source": 21,
											"value": "952"
										},
										{
											"begin": 28850,
											"end": 29058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29086,
											"end": 29092,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 29077,
											"end": 29084,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 29074,
											"end": 29093,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 29071,
											"end": 29250,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 29071,
											"end": 29250,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "953"
										},
										{
											"begin": 29071,
											"end": 29250,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 29144,
											"end": 29153,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 29139,
											"end": 29142,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 29135,
											"end": 29154,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29129,
											"end": 29155,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 29187,
											"end": 29235,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "954"
										},
										{
											"begin": 29229,
											"end": 29233,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 29221,
											"end": 29227,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 29217,
											"end": 29234,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 29206,
											"end": 29215,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29187,
											"end": 29235,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "623"
										},
										{
											"begin": 29187,
											"end": 29235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29187,
											"end": 29235,
											"name": "tag",
											"source": 21,
											"value": "954"
										},
										{
											"begin": 29187,
											"end": 29235,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29179,
											"end": 29185,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 29172,
											"end": 29236,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 29094,
											"end": 29250,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29071,
											"end": 29250,
											"name": "tag",
											"source": 21,
											"value": "953"
										},
										{
											"begin": 29071,
											"end": 29250,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29296,
											"end": 29297,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 29292,
											"end": 29293,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 29284,
											"end": 29290,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 29280,
											"end": 29294,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 29270,
											"end": 29274,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 29263,
											"end": 29299,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 28698,
											"end": 29309,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28698,
											"end": 29309,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28698,
											"end": 29309,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28661,
											"end": 29548,
											"name": "tag",
											"source": 21,
											"value": "945"
										},
										{
											"begin": 28661,
											"end": 29548,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 28661,
											"end": 29548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28251,
											"end": 29554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28251,
											"end": 29554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28251,
											"end": 29554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28159,
											"end": 29554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28159,
											"end": 29554,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 28159,
											"end": 29554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29560,
											"end": 29658,
											"name": "tag",
											"source": 21,
											"value": "625"
										},
										{
											"begin": 29560,
											"end": 29658,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29611,
											"end": 29617,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29650,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 29639,
											"end": 29651,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 29629,
											"end": 29651,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29629,
											"end": 29651,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29560,
											"end": 29658,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 29560,
											"end": 29658,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29560,
											"end": 29658,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29560,
											"end": 29658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "tag",
											"source": 21,
											"value": "626"
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29765,
											"end": 29776,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29802,
											"end": 29805,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 29787,
											"end": 29805,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 29787,
											"end": 29805,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29664,
											"end": 29811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "tag",
											"source": 21,
											"value": "627"
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29921,
											"end": 29924,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 29949,
											"end": 29987,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "958"
										},
										{
											"begin": 29981,
											"end": 29986,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 29949,
											"end": 29987,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "625"
										},
										{
											"begin": 29949,
											"end": 29987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 29949,
											"end": 29987,
											"name": "tag",
											"source": 21,
											"value": "958"
										},
										{
											"begin": 29949,
											"end": 29987,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 30003,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "959"
										},
										{
											"begin": 30084,
											"end": 30090,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 30079,
											"end": 30082,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 30003,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "626"
										},
										{
											"begin": 30003,
											"end": 30091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 30003,
											"end": 30091,
											"name": "tag",
											"source": 21,
											"value": "959"
										},
										{
											"begin": 30003,
											"end": 30091,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 29996,
											"end": 30091,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 29996,
											"end": 30091,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 30100,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "960"
										},
										{
											"begin": 30158,
											"end": 30164,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 30153,
											"end": 30156,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 30146,
											"end": 30150,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 30139,
											"end": 30144,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 30135,
											"end": 30151,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 30100,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "561"
										},
										{
											"begin": 30100,
											"end": 30165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 30100,
											"end": 30165,
											"name": "tag",
											"source": 21,
											"value": "960"
										},
										{
											"begin": 30100,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 30190,
											"end": 30196,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 30185,
											"end": 30188,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 30181,
											"end": 30197,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 30174,
											"end": 30197,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 30174,
											"end": 30197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29925,
											"end": 30203,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 29817,
											"end": 30203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "tag",
											"source": 21,
											"value": "523"
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 30339,
											"end": 30342,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 30361,
											"end": 30454,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "962"
										},
										{
											"begin": 30450,
											"end": 30453,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 30441,
											"end": 30447,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 30361,
											"end": 30454,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "627"
										},
										{
											"begin": 30361,
											"end": 30454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 30361,
											"end": 30454,
											"name": "tag",
											"source": 21,
											"value": "962"
										},
										{
											"begin": 30361,
											"end": 30454,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 30354,
											"end": 30454,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 30354,
											"end": 30454,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 30471,
											"end": 30474,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 30464,
											"end": 30474,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 30464,
											"end": 30474,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 30209,
											"end": 30480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/IAKSStablecoin.sol",
								"contracts/ITokensBridge.sol",
								"contracts/KFShares.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PROXY_ROLE()": "e48bf15b",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"aksToken()": "3efb0be3",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"basePricePerShare()": "f7154b3c",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"forceBurn(address,uint256)": "e2d6f634",
							"getCurrentPrice(uint256)": "c55d0f56",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(string,string,uint256,address,address,address,address)": "dea7f112",
							"lockShares(address,uint256)": "05fbf448",
							"lockedShares(address)": "e336ac44",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setWhitelisted(address,bool)": "9281aa0b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokensBridge()": "9081e644",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferCrossChain(uint64,address,uint256)": "a14d707c",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockShares(address)": "c255f8c8",
							"updatePricingModel(uint256)": "8d898e34",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"whitelisted(address)": "d936547e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROXY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aksToken\",\"outputs\":[{\"internalType\":\"contract IAKSStablecoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePricePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forceBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aksToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokensBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBridge\",\"outputs\":[{\"internalType\":\"contract ITokensBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferCrossChain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unlockShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasePrice\",\"type\":\"uint256\"}],\"name\":\"updatePricingModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KFShares.sol\":\"KFShares\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/IAKSStablecoin.sol\":{\"keccak256\":\"0xc68c623b2b3d3ec55b5a39f18e81f4413df3d1094d8429e1c1c25f39fba76cc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05fa6b05d4997cf1f9b049c38e5f3cd8d70900d9f1d1c65c19cee28e12070d97\",\"dweb:/ipfs/QmSfS9zu6XRwXLqpaHPjenxrAZJ9qD5hd8RBBztbo26Fjy\"]},\"contracts/ITokensBridge.sol\":{\"keccak256\":\"0xc1f828cd905343855371b929609d802630d9fc6ee46ffdbaee28c784ed10bd68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dde8957fe48ee778fbb586b1bff86bf2e10c34bc61c8155b4034ea269ca4e0a1\",\"dweb:/ipfs/QmRUxRS4A2B5vA2Nwfxw13Lq6WB6Ws46hJSBg3d7zrAvwX\"]},\"contracts/KFShares.sol\":{\"keccak256\":\"0x325631608b3a6582b07ed77ca42f8f464af9e7a1efc47fda889dee36f65a8b6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc8f86953eaf29aa268957df18e56560488ebaacb29f8c6bef13e4ac2557387\",\"dweb:/ipfs/QmbXxHUz8n2T3T7RAXDoVeL5uwgk1J1j7sBprxCp4PU5HZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2844,
								"contract": "contracts/KFShares.sol:KFShares",
								"label": "aksToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IAKSStablecoin)2772"
							},
							{
								"astId": 2847,
								"contract": "contracts/KFShares.sol:KFShares",
								"label": "tokensBridge",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ITokensBridge)2815"
							},
							{
								"astId": 2849,
								"contract": "contracts/KFShares.sol:KFShares",
								"label": "basePricePerShare",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2853,
								"contract": "contracts/KFShares.sol:KFShares",
								"label": "lockedShares",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2857,
								"contract": "contracts/KFShares.sol:KFShares",
								"label": "whitelisted",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IAKSStablecoin)2772": {
								"encoding": "inplace",
								"label": "contract IAKSStablecoin",
								"numberOfBytes": "20"
							},
							"t_contract(ITokensBridge)2815": {
								"encoding": "inplace",
								"label": "contract ITokensBridge",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1475
						],
						"ERC165Upgradeable": [
							1515
						],
						"IAccessControl": [
							1598
						],
						"Initializable": [
							630
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1599,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1598,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1476,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1516,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1515,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 631,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1598,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1515,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1515,
								2592,
								1598,
								1475,
								630
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1514
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1598_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1598_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1598",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1514,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1565
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1573
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1581
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1589
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1597
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7978:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8017:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7988:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7988:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7988:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7988:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8021:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8021:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7988:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8061:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8239:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8253:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8057:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8085:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8099:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8101:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8099:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8108:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8099:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8114:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8099:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8122:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8099:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8099:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8099:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8169:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8175:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "8184:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8184:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "8157:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8157:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8152:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8218:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8211:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7903:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7923:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7915:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7914:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7972:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7971:6:0"
									},
									"scope": 362,
									"src": "7894:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6194:0",
							"usedErrors": [
								379,
								382,
								1525,
								1528
							],
							"usedEvents": [
								387,
								1537,
								1546,
								1555
							]
						}
					],
					"src": "108:8177:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 630,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$630",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$630",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 630,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 630,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 630,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 630,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 612,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 376,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 611,
												"id": 613,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 630,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 622,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 624,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 627,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 373,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 630,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "2349:6929:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2060
						],
						"IERC1822Proxiable": [
							1629
						],
						"Initializable": [
							630
						],
						"UUPSUpgradeable": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 1630,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 2061,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 635,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2060,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 631,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 640,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1023:13:2"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 642,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "1038:17:2"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								1629,
								630
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 650,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 645,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 648,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 647,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 646,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 654,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 812,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 652,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 657,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 662,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 659,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 668,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 670,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 673,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 676,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 678,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 680,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 812,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 686,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 812,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 698,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2060_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1781,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 697,
												"id": 700,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 694,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 693,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 678,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 695,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 812,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 712,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 670,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 812,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 728,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 726,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 730,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 732,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2060_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1812,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 735,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 738,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 740,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 812,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$812",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 748,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 752,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 758,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 757,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 754,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 756,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 812,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 812,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 799,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 782,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 783,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2060_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1781,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 791,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 790,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 787,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 780,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 786,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 662,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 789,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 795,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 796,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 792,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2060_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1875,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 798,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 800,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 781,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 800,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 807,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 804,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 801,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2060_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1786,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 806,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 808,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 775,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 774,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1629_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1629",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1628,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 809,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 812,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 813,
							"src": "986:5586:2",
							"usedErrors": [
								379,
								382,
								657,
								662,
								1786,
								1799,
								2184,
								2447
							],
							"usedEvents": [
								387,
								1606
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1475
						],
						"ERC20Upgradeable": [
							1429
						],
						"IERC20": [
							2148
						],
						"IERC20Errors": [
							1671
						],
						"IERC20Metadata": [
							2174
						],
						"Initializable": [
							630
						]
					},
					"id": 1430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2149,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 815,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2148,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2175,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 817,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2174,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 1476,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 819,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 1767,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 821,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1671,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 631,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 823,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "1319:13:3"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:3"
								},
								{
									"baseName": {
										"id": 828,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "1334:18:3"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:3"
								},
								{
									"baseName": {
										"id": 830,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2148,
										"src": "1354:6:3"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:3"
								},
								{
									"baseName": {
										"id": 832,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2174,
										"src": "1362:14:3"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:3"
								},
								{
									"baseName": {
										"id": 834,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1671,
										"src": "1378:12:3"
									},
									"id": 835,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1429,
							"linearizedBaseContracts": [
								1429,
								1671,
								2174,
								2148,
								1475,
								630
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 853,
									"members": [
										{
											"constant": false,
											"id": 840,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1495:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 839,
												"keyName": "account",
												"keyNameLocation": "1511:7:3",
												"keyType": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1551:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 845,
												"keyName": "account",
												"keyNameLocation": "1567:7:3",
												"keyType": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 844,
													"keyName": "spender",
													"keyNameLocation": "1594:7:3",
													"keyType": {
														"id": 842,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 843,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1637:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 847,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1668:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 849,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1690:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 851,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:3",
									"nodeType": "StructDefinition",
									"scope": 1429,
									"src": "1465:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 856,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "1826:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 854,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "2021:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:3",
													"nodeType": "YulBlock",
													"src": "2040:54:3",
													"statements": [
														{
															"nativeSrc": "2054:30:3",
															"nodeType": "YulAssignment",
															"src": "2054:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:3",
																"nodeType": "YulIdentifier",
																"src": "2064:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:3",
														"valueSize": 1
													}
												],
												"id": 862,
												"nodeType": "InlineAssembly",
												"src": "2031:63:3"
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1997:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "1997:12:3"
													},
													"referencedDeclaration": 853,
													"src": "1997:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:3"
									},
									"scope": 1429,
									"src": "1947:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "2355:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "2388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 876,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2395:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 874,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "2365:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:3"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 872,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 871,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2338:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2285:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2306:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:3"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:3"
									},
									"scope": 1429,
									"src": "2263:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2518:114:3",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "2528:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 890,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 889,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "2528:12:3"
															},
															"referencedDeclaration": 853,
															"src": "2528:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 892,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2553:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:3"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 895,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2581:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "2581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 898,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2591:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:3"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 901,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2606:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 852,
														"src": "2606:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2618:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:3"
											}
										]
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 886,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "2501:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2448:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2469:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:3"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:3"
									},
									"scope": 1429,
									"src": "2416:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2161
									],
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2757:84:3",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "2767:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 915,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 914,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "2767:12:3"
															},
															"referencedDeclaration": 853,
															"src": "2767:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2792:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2827:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 850,
													"src": "2827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 913,
												"id": 922,
												"nodeType": "Return",
												"src": "2820:14:3"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2742:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:3"
									},
									"scope": 1429,
									"src": "2697:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2167
									],
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "3016:86:3",
										"statements": [
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3026:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 931,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 930,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "3026:12:3"
															},
															"referencedDeclaration": 853,
															"src": "3026:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 933,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3051:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 936,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3086:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 852,
													"src": "3086:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 929,
												"id": 938,
												"nodeType": "Return",
												"src": "3079:16:3"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:3"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3001:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:3"
									},
									"scope": 1429,
									"src": "2954:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2173
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "3791:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 945,
												"id": 947,
												"nodeType": "Return",
												"src": "3801:9:3"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:3"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "3784:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 943,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:3"
									},
									"scope": 1429,
									"src": "3735:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2097
									],
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "3938:91:3",
										"statements": [
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3969:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "3948:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 956,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 955,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3948:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "3948:12:3"
															},
															"referencedDeclaration": 853,
															"src": "3948:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "3973:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 961,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4008:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4010:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "4008:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 963,
												"nodeType": "Return",
												"src": "4001:21:3"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "3823:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3886:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3897:2:3"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "3929:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:3"
									},
									"scope": 1429,
									"src": "3877:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2105
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "4161:97:3",
										"statements": [
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4192:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "4171:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 974,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 973,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4171:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "4171:12:3"
															},
															"referencedDeclaration": 853,
															"src": "4171:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 976,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "4196:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 979,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4231:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4233:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "4231:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 982,
													"indexExpression": {
														"id": 981,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4243:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 972,
												"id": 983,
												"nodeType": "Return",
												"src": "4224:27:3"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "4035:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4096:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4114:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4106:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:17:3"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:3"
									},
									"scope": 1429,
									"src": "4087:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2115
									],
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "4528:103:3",
										"statements": [
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4546:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "4538:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 995,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 997,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "4554:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "4586:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4593:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4597:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4576:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "4576:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4620:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 994,
												"id": 1007,
												"nodeType": "Return",
												"src": "4613:11:3"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "4264:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4462:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4479:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4471:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4491:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4483:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:27:3"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4522:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:3"
									},
									"scope": 1429,
									"src": "4453:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2125
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "4778:106:3",
										"statements": [
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4809:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "4788:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1020,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1019,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4788:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "4788:12:3"
															},
															"referencedDeclaration": 853,
															"src": "4788:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1022,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "4813:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4788:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 1025,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "4848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4850:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 846,
															"src": "4848:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4862:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4848:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"id": 1029,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4848:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1031,
												"nodeType": "Return",
												"src": "4841:36:3"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "4637:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4698:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4708:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4731:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4723:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:32:3"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4769:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:9:3"
									},
									"scope": 1429,
									"src": "4689:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2135
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5270:107:3",
										"statements": [
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5288:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5280:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1043,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1045,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5296:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5327:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "5334:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5343:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1312,
															1380
														],
														"referencedDeclaration": 1312,
														"src": "5318:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "5318:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1042,
												"id": 1055,
												"nodeType": "Return",
												"src": "5359:11:3"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4890:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5200:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5208:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5233:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5225:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:32:3"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5264:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:6:3"
									},
									"scope": 1429,
									"src": "5191:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2147
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "6062:151:3",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6080:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "6072:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1069,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6072:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1071,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "6090:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6090:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6072:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "6128:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "6134:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6143:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "6112:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "6112:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "6169:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "6175:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6179:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "6159:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "6159:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6202:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1068,
												"id": 1087,
												"nodeType": "Return",
												"src": "6195:11:3"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5383:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5978:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5999:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "5991:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6013:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6005:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6025:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6017:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:41:3"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "6056:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6056:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:6:3"
									},
									"scope": 1429,
									"src": "5969:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "6655:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6669:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6685:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6677:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1100,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6677:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6677:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6669:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "6665:86:3",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "6689:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6737:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6729:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1106,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6729:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6729:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1105,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "6710:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6710:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1111,
															"nodeType": "RevertStatement",
															"src": "6703:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "6764:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1115,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6770:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6764:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "6760:86:3",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "6782:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6832:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6824:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1121,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6824:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6824:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1120,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "6803:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6803:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "6796:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6863:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6869:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "6873:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "6855:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "6855:24:3"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "6219:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6595:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6613:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6605:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6627:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6619:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6639:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6631:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6604:41:3"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6655:0:3"
									},
									"scope": 1429,
									"src": "6586:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "7276:1095:3",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7307:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "7286:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1147,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1146,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7286:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "7286:12:3"
															},
															"referencedDeclaration": 853,
															"src": "7286:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1149,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "7311:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7286:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "7343:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7359:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7351:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7351:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7351:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "7519:366:3",
													"statements": [
														{
															"assignments": [
																1166
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1166,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7541:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1194,
																	"src": "7533:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1165,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7533:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1171,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1167,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "7555:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7557:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 840,
																	"src": "7555:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1170,
																"indexExpression": {
																	"id": 1169,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "7567:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7555:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7533:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "7590:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "7604:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7590:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1182,
															"nodeType": "IfStatement",
															"src": "7586:115:3",
															"trueBody": {
																"id": 1181,
																"nodeType": "Block",
																"src": "7611:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1176,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1139,
																					"src": "7661:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1177,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "7667:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1178,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "7680:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1175,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "7636:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7636:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1180,
																		"nodeType": "RevertStatement",
																		"src": "7629:57:3"
																	}
																]
															}
														},
														{
															"id": 1193,
															"nodeType": "UncheckedBlock",
															"src": "7714:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1183,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7821:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7823:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 840,
																				"src": "7821:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1187,
																			"indexExpression": {
																				"id": 1185,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "7833:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7821:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1188,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "7841:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1189,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "7855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7821:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1192,
																	"nodeType": "ExpressionStatement",
																	"src": "7821:39:3"
																}
															]
														}
													]
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "7339:546:3",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "7363:150:3",
													"statements": [
														{
															"expression": {
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1158,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "7479:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7481:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 848,
																	"src": "7479:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "7497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7479:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1163,
															"nodeType": "ExpressionStatement",
															"src": "7479:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1196,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7899:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7913:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7905:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1197,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7905:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7905:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7899:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "8116:208:3",
													"statements": [
														{
															"id": 1218,
															"nodeType": "UncheckedBlock",
															"src": "8130:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1210,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "8275:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8277:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 840,
																				"src": "8275:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1214,
																			"indexExpression": {
																				"id": 1212,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "8287:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8275:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "8294:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8275:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "8275:24:3"
																}
															]
														}
													]
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "7895:429:3",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "7917:193:3",
													"statements": [
														{
															"id": 1208,
															"nodeType": "UncheckedBlock",
															"src": "7931:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1202,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "8062:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8064:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 848,
																			"src": "8062:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "8080:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8062:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1207,
																	"nodeType": "ExpressionStatement",
																	"src": "8062:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1222,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "8348:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "8354:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "8358:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "8339:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8339:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "8334:30:3"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "6892:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7210:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7226:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7218:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7240:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7232:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:41:3"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:0:3"
									},
									"scope": 1429,
									"src": "7201:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "8770:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "8784:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8803:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8795:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1237,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8795:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8795:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8784:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "8780:91:3",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "8807:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8857:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8849:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1243,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8849:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8849:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1242,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "8828:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8828:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1248,
															"nodeType": "RevertStatement",
															"src": "8821:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8888:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1252,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8888:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8888:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "8909:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1251,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "8880:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "8880:35:3"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "8377:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8723:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8737:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "8729:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8754:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "8746:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:32:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:3"
									},
									"scope": 1429,
									"src": "8714:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "9296:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "9310:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9321:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9321:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9321:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9310:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "9306:89:3",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "9333:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9381:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9373:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1276,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9373:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9373:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1275,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "9354:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9354:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1281,
															"nodeType": "RevertStatement",
															"src": "9347:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "9412:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9429:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9421:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9421:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9421:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "9433:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1284,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "9404:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "9404:35:3"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "8928:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9249:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9263:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9255:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9255:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9280:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9272:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9272:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9254:32:3"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9296:0:3"
									},
									"scope": 1429,
									"src": "9240:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "10056:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "10075:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "10082:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "10091:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10098:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1304,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1312,
															1380
														],
														"referencedDeclaration": 1380,
														"src": "10066:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10066:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "10066:37:3"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "9452:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9991:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10008:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10000:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:47:3"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:3"
									},
									"scope": 1429,
									"src": "9982:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "11055:389:3",
										"statements": [
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11086:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1379,
														"src": "11065:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1325,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1324,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11065:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 853,
																"src": "11065:12:3"
															},
															"referencedDeclaration": 853,
															"src": "11065:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1327,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "11090:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11090:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11065:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "11122:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11139:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11131:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1331,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11131:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11131:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11122:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1344,
												"nodeType": "IfStatement",
												"src": "11118:89:3",
												"trueBody": {
													"id": 1343,
													"nodeType": "Block",
													"src": "11143:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11193:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11185:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1337,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11185:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11185:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1336,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "11164:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1342,
															"nodeType": "RevertStatement",
															"src": "11157:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "11220:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11239:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1346,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11231:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11231:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11220:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1359,
												"nodeType": "IfStatement",
												"src": "11216:90:3",
												"trueBody": {
													"id": 1358,
													"nodeType": "Block",
													"src": "11243:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11292:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11284:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1352,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11284:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11284:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1351,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "11264:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11264:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1357,
															"nodeType": "RevertStatement",
															"src": "11257:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1360,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "11315:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$853_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11317:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 846,
																"src": "11315:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1365,
															"indexExpression": {
																"id": 1362,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "11329:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11315:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1366,
														"indexExpression": {
															"id": 1363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "11336:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11315:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1367,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11347:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11315:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "11315:37:3"
											},
											{
												"condition": {
													"id": 1370,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "11366:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "11362:76:3",
												"trueBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "11377:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1372,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "11405:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1373,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "11412:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1374,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "11421:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1371,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "11396:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11396:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1376,
															"nodeType": "EmitStatement",
															"src": "11391:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "10116:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10966:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10983:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10975:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10998:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "10990:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "11007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11027:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "11022:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11022:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10974:63:3"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:3"
									},
									"scope": 1429,
									"src": "10957:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "11815:387:3",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11833:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "11825:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11825:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"arguments": [
														{
															"id": 1393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "11862:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "11869:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1392,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "11852:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11825:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "11891:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11915:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11915:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1398,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11910:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11924:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11910:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11891:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "11887:309:3",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "11929:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1404,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "11947:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "11966:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11947:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1414,
															"nodeType": "IfStatement",
															"src": "11943:130:3",
															"trueBody": {
																"id": 1413,
																"nodeType": "Block",
																"src": "11973:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1408,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1385,
																					"src": "12025:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1409,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "12034:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1410,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12052:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1407,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1660,
																				"src": "11998:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11998:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1412,
																		"nodeType": "RevertStatement",
																		"src": "11991:67:3"
																	}
																]
															}
														},
														{
															"id": 1424,
															"nodeType": "UncheckedBlock",
															"src": "12086:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1416,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "12123:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1417,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "12130:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1418,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "12139:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1419,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12158:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12139:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12165:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1415,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1312,
																				1380
																			],
																			"referencedDeclaration": 1380,
																			"src": "12114:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12114:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1423,
																	"nodeType": "ExpressionStatement",
																	"src": "12114:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "11450:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11735:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11774:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11766:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11791:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "11783:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11783:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11750:47:3"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11815:0:3"
									},
									"scope": 1429,
									"src": "11726:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1430,
							"src": "1281:10923:3",
							"usedErrors": [
								379,
								382,
								1641,
								1646,
								1651,
								1660,
								1665,
								1670
							],
							"usedEvents": [
								387,
								2082,
								2091
							]
						}
					],
					"src": "105:12100:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1475
						],
						"Initializable": [
							630
						]
					},
					"id": 1476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 631,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1432,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1435,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "728:13:4"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1434,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1475,
							"linearizedBaseContracts": [
								1475,
								630
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1439,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1438,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1475,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1444,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1475,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1453,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1455,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1475,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1462,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1464,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1475,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1470,
												"id": 1472,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1475,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1476,
							"src": "688:505:4",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1515
						],
						"IERC165": [
							2592
						],
						"Initializable": [
							630
						]
					},
					"id": 1516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 2593,
							"src": "140:80:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2592,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1516,
							"sourceUnit": 631,
							"src": "221:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1480,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "229:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1483,
										"name": "Initializable",
										"nameLocations": [
											"808:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "808:13:5"
									},
									"id": 1484,
									"nodeType": "InheritanceSpecifier",
									"src": "808:13:5"
								},
								{
									"baseName": {
										"id": 1485,
										"name": "IERC165",
										"nameLocations": [
											"823:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2592,
										"src": "823:7:5"
									},
									"id": 1486,
									"nodeType": "InheritanceSpecifier",
									"src": "823:7:5"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1482,
								"nodeType": "StructuredDocumentation",
								"src": "289:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1515,
							"linearizedBaseContracts": [
								1515,
								2592,
								630
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "787:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "888:7:5",
										"statements": []
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "onlyInitializing",
												"nameLocations": [
													"871:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "871:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "871:16:5"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "846:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:5"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:5"
									},
									"scope": 1515,
									"src": "837:58:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "962:7:5",
										"statements": []
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1494,
												"name": "onlyInitializing",
												"nameLocations": [
													"945:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "945:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:16:5"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "910:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:2:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:5"
									},
									"scope": 1515,
									"src": "901:68:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2591
									],
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1117:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1506,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "1134:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1508,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2592,
																	"src": "1154:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2592_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2592_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1507,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1149:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1149:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2592",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1163:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1149:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1134:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1512,
												"nodeType": "Return",
												"src": "1127:47:5"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "974:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1044:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1069:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1062:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:20:5"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1111:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:6:5"
									},
									"scope": 1515,
									"src": "1035:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1516,
							"src": "769:414:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1070:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1598
						]
					},
					"id": 1599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1518,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:6",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 1598,
							"linearizedBaseContracts": [
								1598
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:6",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1525,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "357:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "374:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:6"
									},
									"src": "318:76:6"
								},
								{
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:6",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1528,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:6"
									},
									"src": "553:37:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:6",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1537,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "878:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "900:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "935:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:6"
									},
									"src": "855:110:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:6",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1546,
									"name": "RoleGranted",
									"nameLocation": "1277:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1289:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1311:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1336:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:6"
									},
									"src": "1271:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:6",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1555,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1664:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1686:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1711:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:6"
									},
									"src": "1646:89:6"
								},
								{
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:6",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1839:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1557,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1853:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1893:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:6"
									},
									"scope": 1598,
									"src": "1822:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:6",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2116:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:6"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2153:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1570,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:6"
									},
									"scope": 1598,
									"src": "2094:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:6",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2431:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2445:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:6"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 1598,
									"src": "2412:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:6",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2725:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2739:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:6"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:6"
									},
									"scope": 1598,
									"src": "2705:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:6",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3289:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3303:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:6"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:6"
									},
									"scope": 1598,
									"src": "3267:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1599,
							"src": "226:3116:6",
							"usedErrors": [
								1525,
								1528
							],
							"usedEvents": [
								1537,
								1546,
								1555
							]
						}
					],
					"src": "109:3234:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1619
						]
					},
					"id": 1620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1601,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:7",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1619,
							"linearizedBaseContracts": [
								1619
							],
							"name": "IERC1967",
							"nameLocation": "245:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:7",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1606,
									"name": "Upgraded",
									"nameLocation": "339:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "348:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:7"
									},
									"src": "333:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:7",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1613,
									"name": "AdminChanged",
									"nameLocation": "464:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "477:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "500:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:7"
									},
									"src": "458:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:7",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1618,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "609:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:7"
									},
									"src": "588:45:7"
								}
							],
							"scope": 1620,
							"src": "235:400:7",
							"usedErrors": [],
							"usedEvents": [
								1606,
								1613,
								1618
							]
						}
					],
					"src": "107:529:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1622,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:8",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:8",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:8"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:8"
									},
									"scope": 1629,
									"src": "821:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "344:536:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1766
						],
						"IERC20Errors": [
							1671
						],
						"IERC721Errors": [
							1719
						]
					},
					"id": 1767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:9",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1671,
							"linearizedBaseContracts": [
								1671
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1641,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "654:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "670:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "687:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:9"
									},
									"src": "623:80:9"
								},
								{
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1646,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "891:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:9"
									},
									"src": "866:41:9"
								},
								{
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1651,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1104:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:9"
									},
									"src": "1077:45:9"
								},
								{
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:9",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1660,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1511:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1547:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:9"
									},
									"src": "1478:85:9"
								},
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1665,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "1775:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:9"
									},
									"src": "1748:45:9"
								},
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:9",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1670,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2025:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:9"
									},
									"src": "1999:43:9"
								}
							],
							"scope": 1767,
							"src": "280:1764:9",
							"usedErrors": [
								1641,
								1646,
								1651,
								1660,
								1665,
								1670
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:9",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:9",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1677,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2469:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:9"
									},
									"src": "2444:40:9"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:9",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1682,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2656:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:9"
									},
									"src": "2627:46:9"
								},
								{
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:9",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1691,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:9"
									},
									"src": "2973:75:9"
								},
								{
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1696,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "3237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:9"
									},
									"src": "3211:42:9"
								},
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1701,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "3451:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:9"
									},
									"src": "3423:46:9"
								},
								{
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1708,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3760:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "3778:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:9"
									},
									"src": "3727:68:9"
								},
								{
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1713,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "4008:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:9"
									},
									"src": "3980:46:9"
								},
								{
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1718,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "4262:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:9"
									},
									"src": "4234:46:9"
								}
							],
							"scope": 1767,
							"src": "2190:2092:9",
							"usedErrors": [
								1677,
								1682,
								1691,
								1696,
								1701,
								1708,
								1713,
								1718
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1720,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:9",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1766,
							"linearizedBaseContracts": [
								1766
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1731,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4860:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4893:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "4909:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:9"
									},
									"src": "4827:99:9"
								},
								{
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1736,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "5116:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:9"
									},
									"src": "5089:43:9"
								},
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1741,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "5331:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:9"
									},
									"src": "5302:47:9"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1748,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "5651:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "5669:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:9"
									},
									"src": "5616:68:9"
								},
								{
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1753,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "5898:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:9"
									},
									"src": "5869:47:9"
								},
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1758,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6153:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:9"
									},
									"src": "6124:47:9"
								},
								{
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:9",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1765,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "6494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "6513:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:9"
									},
									"src": "6462:73:9"
								}
							],
							"scope": 1767,
							"src": "4430:2107:9",
							"usedErrors": [
								1731,
								1736,
								1741,
								1748,
								1753,
								1758,
								1765
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2434
						],
						"ERC1967Utils": [
							2060
						],
						"IBeacon": [
							2070
						],
						"IERC1967": [
							1619
						],
						"StorageSlot": [
							2580
						]
					},
					"id": 2061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2061,
							"sourceUnit": 2071,
							"src": "140:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1769,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2061,
							"sourceUnit": 1620,
							"src": "187:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1771,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1619,
										"src": "195:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2061,
							"sourceUnit": 2435,
							"src": "243:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1773,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2434,
										"src": "251:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2061,
							"sourceUnit": 2581,
							"src": "292:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1775,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2580,
										"src": "300:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1777,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:10",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2060,
							"linearizedBaseContracts": [
								2060
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:10",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1781,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2060,
									"src": "763:114:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1779,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:10",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1786,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "993:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:10"
									},
									"src": "958:59:10"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:10",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1791,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "1114:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:10"
									},
									"src": "1088:41:10"
								},
								{
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:10",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1796,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "1228:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:10"
									},
									"src": "1201:43:10"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:10",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1799,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:10"
									},
									"src": "1337:26:10"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "1502:77:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1807,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "1546:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1805,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2580,
																"src": "1519:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2491,
															"src": "1519:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2461,
													"src": "1519:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1804,
												"id": 1810,
												"nodeType": "Return",
												"src": "1512:60:10"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:10",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:10"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:10"
									},
									"scope": 2060,
									"src": "1441:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "1734:218:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1818,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "1748:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1828,
												"nodeType": "IfStatement",
												"src": "1744:119:10",
												"trueBody": {
													"id": 1827,
													"nodeType": "Block",
													"src": "1784:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1824,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "1834:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1823,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "1805:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1826,
															"nodeType": "RevertStatement",
															"src": "1798:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1832,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1899:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1829,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "1872:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2491,
																"src": "1872:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "1872:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1835,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "1928:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:10"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:10",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "1699:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:10"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:10"
									},
									"scope": 2060,
									"src": "1671:281:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "2345:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "2374:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1847,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2355:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1854,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "2425:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1851,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "2407:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1619_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:10",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1606,
														"src": "2407:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "EmitStatement",
												"src": "2402:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "2458:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1872,
													"nodeType": "Block",
													"src": "2559:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1869,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2059,
																	"src": "2573:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1871,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:10"
														}
													]
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "2454:148:10",
												"trueBody": {
													"id": 1868,
													"nodeType": "Block",
													"src": "2475:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1864,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "2518:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1865,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "2537:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1861,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2434,
																		"src": "2489:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2434_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2351,
																	"src": "2489:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1867,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:10",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2290:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2317:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:10"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:10"
									},
									"scope": 2060,
									"src": "2264:344:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:10",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1879,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2060,
									"src": "2829:105:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1877,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1878,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "3339:68:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1887,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "3383:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1885,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2580,
																"src": "3356:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2491,
															"src": "3356:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2461,
													"src": "3356:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1884,
												"id": 1890,
												"nodeType": "Return",
												"src": "3349:51:10"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:10",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:10"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3330:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:10"
									},
									"scope": 2060,
									"src": "3287:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "3535:172:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1898,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "3549:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1899,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "3545:91:10",
												"trueBody": {
													"id": 1911,
													"nodeType": "Block",
													"src": "3573:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1905,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1904,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "3594:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1910,
															"nodeType": "RevertStatement",
															"src": "3587:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1916,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "3672:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1913,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "3645:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2491,
																"src": "3645:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "3645:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1919,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "3692:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:10"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:10",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "3509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:10"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:10"
									},
									"scope": 2060,
									"src": "3490:217:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "3875:94:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1932,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "3912:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1934,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "3924:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1929,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "3890:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1619_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:10",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1613,
														"src": "3890:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "EmitStatement",
												"src": "3885:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "3953:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1937,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "3943:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:10"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:10",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "3848:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:10"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:10"
									},
									"scope": 2060,
									"src": "3827:142:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:10",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1946,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2060,
									"src": "4246:106:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1944,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "4468:69:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1954,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "4512:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1952,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2580,
																"src": "4485:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2491,
															"src": "4485:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2461,
													"src": "4485:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1951,
												"id": 1957,
												"nodeType": "Return",
												"src": "4478:52:10"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:10",
										"text": " @dev Returns the current beacon."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:10"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4459:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:10"
									},
									"scope": 2060,
									"src": "4415:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "4667:390:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1965,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "4681:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "IfStatement",
												"src": "4677:95:10",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "4709:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1971,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "4751:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1970,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "4730:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1973,
															"nodeType": "RevertStatement",
															"src": "4723:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1979,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "4809:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1976,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "4782:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2580_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2491,
																"src": "4782:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2462_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "4782:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1982,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "4830:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:10"
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "4850:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1985,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1992,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1988,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "4889:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1987,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "4881:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2070_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2070",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:10",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2069,
														"src": "4881:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1993,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "4930:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "4926:125:10",
												"trueBody": {
													"id": 2002,
													"nodeType": "Block",
													"src": "4969:82:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1999,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "5019:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1998,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "4990:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2001,
															"nodeType": "RevertStatement",
															"src": "4983:57:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:10",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "4640:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:10"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:10"
									},
									"scope": 2060,
									"src": "4620:437:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "5661:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "5682:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2013,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "5671:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2020,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "5731:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2017,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "5707:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1619_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:10",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1618,
														"src": "5707:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "EmitStatement",
												"src": "5702:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2023,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "5756:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2042,
													"nodeType": "Block",
													"src": "5875:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2039,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2059,
																	"src": "5889:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2041,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:10"
														}
													]
												},
												"id": 2043,
												"nodeType": "IfStatement",
												"src": "5752:166:10",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "5773:96:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2031,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "5824:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2030,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "5816:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2070_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2070",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:10",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2069,
																			"src": "5816:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2035,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "5853:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2027,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2434,
																		"src": "5787:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2434_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2351,
																	"src": "5787:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2037,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:10",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "5614:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "5633:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:10"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:10"
									},
									"scope": 2060,
									"src": "5582:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "6149:86:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2049,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2057,
												"nodeType": "IfStatement",
												"src": "6159:70:10",
												"trueBody": {
													"id": 2056,
													"nodeType": "Block",
													"src": "6178:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2053,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "6199:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2055,
															"nodeType": "RevertStatement",
															"src": "6192:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:10",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:10"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:10"
									},
									"scope": 2060,
									"src": "6113:122:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2061,
							"src": "496:5741:10",
							"usedErrors": [
								1786,
								1791,
								1796,
								1799
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2070
						]
					},
					"id": 2071,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2063,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:11",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2070,
							"linearizedBaseContracts": [
								2070
							],
							"name": "IBeacon",
							"nameLocation": "224:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:11",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "460:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:11"
									},
									"scope": 2070,
									"src": "411:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2071,
							"src": "214:257:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2148
						]
					},
					"id": 2149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2072,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2073,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:12",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2148,
							"linearizedBaseContracts": [
								2148
							],
							"name": "IERC20",
							"nameLocation": "214:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:12",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2082,
									"name": "Transfer",
									"nameLocation": "396:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "405:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "427:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "447:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:12"
									},
									"src": "390:72:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:12",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2091,
									"name": "Approval",
									"nameLocation": "627:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "636:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "659:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:12"
									},
									"src": "621:78:12"
								},
								{
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:12",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:12"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "821:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:12"
									},
									"scope": 2148,
									"src": "775:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:12",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "931:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:12"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "971:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:12"
									},
									"scope": 2148,
									"src": "912:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:12",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1222:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1234:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:12"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1267:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:12"
									},
									"scope": 2148,
									"src": "1204:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:12",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1567:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1582:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:12"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1622:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:12"
									},
									"scope": 2148,
									"src": "1548:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:12",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "2326:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "2343:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:12"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "2376:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:12"
									},
									"scope": 2148,
									"src": "2309:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:12",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2712:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2726:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:12"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2771:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:12"
									},
									"scope": 2148,
									"src": "2690:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2149,
							"src": "204:2575:12",
							"usedErrors": [],
							"usedEvents": [
								2082,
								2091
							]
						}
					],
					"src": "106:2674:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2148
						],
						"IERC20Metadata": [
							2174
						]
					},
					"id": 2175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2175,
							"sourceUnit": 2149,
							"src": "151:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2151,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2148,
										"src": "159:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2154,
										"name": "IERC20",
										"nameLocations": [
											"306:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2148,
										"src": "306:6:13"
									},
									"id": 2155,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:13"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2153,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:13",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2174,
							"linearizedBaseContracts": [
								2174,
								2148
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:13",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:13"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "417:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:13"
									},
									"scope": 2174,
									"src": "378:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:13",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:13"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "540:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:13"
									},
									"scope": 2174,
									"src": "499:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:13",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:13"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "674:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2170,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:13"
									},
									"scope": 2174,
									"src": "631:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2175,
							"src": "278:405:13",
							"usedErrors": [],
							"usedEvents": [
								2082,
								2091
							]
						}
					],
					"src": "125:559:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2434
						],
						"Errors": [
							2456
						]
					},
					"id": 2435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2435,
							"sourceUnit": 2457,
							"src": "127:36:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2177,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2456,
										"src": "135:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2179,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2434,
							"linearizedBaseContracts": [
								2434
							],
							"name": "Address",
							"nameLocation": "241:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2180,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2184,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "358:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:14"
									},
									"src": "335:39:14"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "1361:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2194,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2434",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2434",
																		"typeString": "library Address"
																	}
																],
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2192,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2197,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "1399:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2211,
												"nodeType": "IfStatement",
												"src": "1371:125:14",
												"trueBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "1407:89:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2204,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2434",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2434",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2202,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2207,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "1478:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2199,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "1428:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2456_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2444,
																	"src": "1428:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2209,
															"nodeType": "RevertStatement",
															"src": "1421:64:14"
														}
													]
												}
											},
											{
												"assignments": [
													2213,
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "1507:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2212,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "1521:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2222,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2216,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "1548:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2218,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "1570:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:14"
											},
											{
												"condition": {
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:14",
													"subExpression": {
														"id": 2223,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "1596:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2230,
												"nodeType": "IfStatement",
												"src": "1591:58:14",
												"trueBody": {
													"id": 2229,
													"nodeType": "Block",
													"src": "1605:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2226,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2215,
																		"src": "1627:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2225,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "1619:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2228,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1309:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1336:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:14"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2434,
									"src": "1290:365:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "2589:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "2628:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "2636:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2242,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "2606:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2247,
												"nodeType": "Return",
												"src": "2599:45:14"
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2522:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2538:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:14"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2575:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:14"
									},
									"scope": 2434,
									"src": "2500:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "3088:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2263,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2434",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2434",
																		"typeString": "library Address"
																	}
																],
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2266,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "3126:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2280,
												"nodeType": "IfStatement",
												"src": "3098:123:14",
												"trueBody": {
													"id": 2279,
													"nodeType": "Block",
													"src": "3133:88:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2273,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2434",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2434",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2271,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2276,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "3204:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2268,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "3154:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2456_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2444,
																	"src": "3154:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2278,
															"nodeType": "RevertStatement",
															"src": "3147:63:14"
														}
													]
												}
											},
											{
												"assignments": [
													2282,
													2284
												],
												"declarations": [
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2298,
														"src": "3231:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2281,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2284,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2298,
														"src": "3245:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2283,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"arguments": [
														{
															"id": 2289,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "3298:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2285,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2252,
																"src": "3272:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2287,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "3291:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "3347:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2294,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3355:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2295,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "3364:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2292,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "3320:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2260,
												"id": 2297,
												"nodeType": "Return",
												"src": "3313:62:14"
											}
										]
									},
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3006:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3022:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3041:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:14"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3074:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:14"
									},
									"scope": 2434,
									"src": "2975:407:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "3621:154:14",
										"statements": [
											{
												"assignments": [
													2310,
													2312
												],
												"declarations": [
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "3632:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2312,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "3646:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2311,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2317,
												"initialValue": {
													"arguments": [
														{
															"id": 2315,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "3691:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2313,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "3673:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2319,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "3740:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2320,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3748:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2321,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "3757:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2318,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "3713:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2323,
												"nodeType": "Return",
												"src": "3706:62:14"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3549:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3565:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:14"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3607:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:14"
									},
									"scope": 2434,
									"src": "3521:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "4013:156:14",
										"statements": [
											{
												"assignments": [
													2336,
													2338
												],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2350,
														"src": "4024:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2335,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2338,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2350,
														"src": "4038:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2337,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2343,
												"initialValue": {
													"arguments": [
														{
															"id": 2341,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "4085:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2339,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "4065:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2345,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "4134:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2346,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "4142:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2347,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "4151:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2344,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "4107:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2334,
												"id": 2349,
												"nodeType": "Return",
												"src": "4100:62:14"
											}
										]
									},
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "3946:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "3962:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:14"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "3999:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:14"
									},
									"scope": 2434,
									"src": "3916:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "4595:424:14",
										"statements": [
											{
												"condition": {
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:14",
													"subExpression": {
														"id": 2363,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "4610:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2388,
													"nodeType": "Block",
													"src": "4669:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2370,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2358,
																			"src": "4857:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2374,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2354,
																				"src": "4883:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2385,
															"nodeType": "IfStatement",
															"src": "4853:119:14",
															"trueBody": {
																"id": 2384,
																"nodeType": "Block",
																"src": "4908:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2381,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2354,
																					"src": "4950:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2380,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2184,
																				"src": "4933:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2383,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2386,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "4992:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2362,
															"id": 2387,
															"nodeType": "Return",
															"src": "4985:17:14"
														}
													]
												},
												"id": 2389,
												"nodeType": "IfStatement",
												"src": "4605:408:14",
												"trueBody": {
													"id": 2369,
													"nodeType": "Block",
													"src": "4619:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2366,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2358,
																		"src": "4641:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2365,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "4633:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2368,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "4482:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "4506:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "4528:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:14"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "4581:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:14"
									},
									"scope": 2434,
									"src": "4437:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "5323:122:14",
										"statements": [
											{
												"condition": {
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:14",
													"subExpression": {
														"id": 2401,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "5338:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2410,
													"nodeType": "Block",
													"src": "5397:42:14",
													"statements": [
														{
															"expression": {
																"id": 2408,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "5418:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2400,
															"id": 2409,
															"nodeType": "Return",
															"src": "5411:17:14"
														}
													]
												},
												"id": 2411,
												"nodeType": "IfStatement",
												"src": "5333:106:14",
												"trueBody": {
													"id": 2407,
													"nodeType": "Block",
													"src": "5347:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2404,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "5369:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2403,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "5361:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2406,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "5247:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "5261:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:14"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "5309:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:14"
									},
									"scope": 2434,
									"src": "5221:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "5614:432:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2419,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "5690:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2430,
													"nodeType": "Block",
													"src": "5989:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "6010:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2456_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2447,
																	"src": "6010:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2429,
															"nodeType": "RevertStatement",
															"src": "6003:26:14"
														}
													]
												},
												"id": 2431,
												"nodeType": "IfStatement",
												"src": "5686:354:14",
												"trueBody": {
													"id": 2424,
													"nodeType": "Block",
													"src": "5713:270:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:14",
																"nodeType": "YulBlock",
																"src": "5840:133:14",
																"statements": [
																	{
																		"nativeSrc": "5858:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:14"
																			},
																			"nativeSrc": "5881:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:14",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:14",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:14"
																					},
																					"nativeSrc": "5922:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:14"
																			},
																			"nativeSrc": "5915:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:14"
																		},
																		"nativeSrc": "5915:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:14"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 2416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 2416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2423,
															"nodeType": "InlineAssembly",
															"src": "5815:158:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "5576:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:14"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:14"
									},
									"scope": 2434,
									"src": "5559:487:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2435,
							"src": "233:5815:14",
							"usedErrors": [
								2184
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2456
						]
					},
					"id": 2457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2437,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:15",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2456,
							"linearizedBaseContracts": [
								2456
							],
							"name": "Errors",
							"nameLocation": "419:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:15",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2444,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "557:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "574:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:15"
									},
									"src": "531:59:15"
								},
								{
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:15",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2447,
									"name": "FailedCall",
									"nameLocation": "696:10:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:15"
									},
									"src": "690:19:15"
								},
								{
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:15",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2450,
									"name": "FailedDeployment",
									"nameLocation": "772:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:15"
									},
									"src": "766:25:15"
								},
								{
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:15",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2455,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "884:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:15"
									},
									"src": "860:33:15"
								}
							],
							"scope": 2457,
							"src": "411:484:15",
							"usedErrors": [
								2444,
								2447,
								2450,
								2455
							],
							"usedEvents": []
						}
					],
					"src": "100:796:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2580
						]
					},
					"id": 2581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2459,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:16",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2580,
							"linearizedBaseContracts": [
								2580
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2462,
									"members": [
										{
											"constant": false,
											"id": 2461,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2462,
											"src": "1462:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2460,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1433:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2465,
									"members": [
										{
											"constant": false,
											"id": 2464,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2465,
											"src": "1517:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2463,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1488:46:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2468,
									"members": [
										{
											"constant": false,
											"id": 2467,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2468,
											"src": "1569:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2466,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1540:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2471,
									"members": [
										{
											"constant": false,
											"id": 2470,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2471,
											"src": "1624:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1595:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2474,
									"members": [
										{
											"constant": false,
											"id": 2473,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2474,
											"src": "1678:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2472,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1650:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2477,
									"members": [
										{
											"constant": false,
											"id": 2476,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2477,
											"src": "1731:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2475,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1703:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2480,
									"members": [
										{
											"constant": false,
											"id": 2479,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2480,
											"src": "1783:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2478,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:16",
									"nodeType": "StructDefinition",
									"scope": 2580,
									"src": "1756:45:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "1983:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:16",
													"nodeType": "YulBlock",
													"src": "2018:38:16",
													"statements": [
														{
															"nativeSrc": "2032:14:16",
															"nodeType": "YulAssignment",
															"src": "2032:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:16",
																"nodeType": "YulIdentifier",
																"src": "2042:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2487,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2483,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2489,
												"nodeType": "InlineAssembly",
												"src": "1993:63:16"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:16",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "1923:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:16"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "1960:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2485,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2462,
														"src": "1960:11:16"
													},
													"referencedDeclaration": 2462,
													"src": "1960:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2462_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:16"
									},
									"scope": 2580,
									"src": "1899:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "2243:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:16",
													"nodeType": "YulBlock",
													"src": "2278:38:16",
													"statements": [
														{
															"nativeSrc": "2292:14:16",
															"nodeType": "YulAssignment",
															"src": "2292:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:16",
																"nodeType": "YulIdentifier",
																"src": "2302:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2498,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2494,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2500,
												"nodeType": "InlineAssembly",
												"src": "2253:63:16"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:16",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2183:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:16"
									},
									"returnParameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2220:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2465_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2497,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2496,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2465,
														"src": "2220:11:16"
													},
													"referencedDeclaration": 2465,
													"src": "2220:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2465_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:16"
									},
									"scope": 2580,
									"src": "2159:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "2503:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:16",
													"nodeType": "YulBlock",
													"src": "2538:38:16",
													"statements": [
														{
															"nativeSrc": "2552:14:16",
															"nodeType": "YulAssignment",
															"src": "2552:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:16",
																"nodeType": "YulIdentifier",
																"src": "2562:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2509,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2505,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2511,
												"nodeType": "InlineAssembly",
												"src": "2513:63:16"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:16",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "2443:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:16"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "2480:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2468_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2507,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2468,
														"src": "2480:11:16"
													},
													"referencedDeclaration": 2468,
													"src": "2480:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2468_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:16"
									},
									"scope": 2580,
									"src": "2419:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "2763:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:16",
													"nodeType": "YulBlock",
													"src": "2798:38:16",
													"statements": [
														{
															"nativeSrc": "2812:14:16",
															"nodeType": "YulAssignment",
															"src": "2812:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:16",
																"nodeType": "YulIdentifier",
																"src": "2822:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2520,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2516,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2522,
												"nodeType": "InlineAssembly",
												"src": "2773:63:16"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:16",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "2703:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:16"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "2740:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2471_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2518,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2471,
														"src": "2740:11:16"
													},
													"referencedDeclaration": 2471,
													"src": "2740:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2471_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:16"
									},
									"scope": 2580,
									"src": "2679:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "3020:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:16",
													"nodeType": "YulBlock",
													"src": "3055:38:16",
													"statements": [
														{
															"nativeSrc": "3069:14:16",
															"nodeType": "YulAssignment",
															"src": "3069:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:16",
																"nodeType": "YulIdentifier",
																"src": "3079:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2531,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2527,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2533,
												"nodeType": "InlineAssembly",
												"src": "3030:63:16"
											}
										]
									},
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:16",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2961:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:16"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2998:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2474_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2529,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2474,
														"src": "2998:10:16"
													},
													"referencedDeclaration": 2474,
													"src": "2998:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2474_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:16"
									},
									"scope": 2580,
									"src": "2938:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "3277:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:16",
													"nodeType": "YulBlock",
													"src": "3312:38:16",
													"statements": [
														{
															"nativeSrc": "3326:14:16",
															"nodeType": "YulAssignment",
															"src": "3326:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:16",
																"nodeType": "YulIdentifier",
																"src": "3336:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2542,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2538,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2544,
												"nodeType": "InlineAssembly",
												"src": "3287:63:16"
											}
										]
									},
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:16",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "3218:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2537,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:16"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "3255:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2477_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2540,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2477,
														"src": "3255:10:16"
													},
													"referencedDeclaration": 2477,
													"src": "3255:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2477_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:16"
									},
									"scope": 2580,
									"src": "3195:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "3558:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:16",
													"nodeType": "YulBlock",
													"src": "3593:44:16",
													"statements": [
														{
															"nativeSrc": "3607:20:16",
															"nodeType": "YulAssignment",
															"src": "3607:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:16",
																"nodeType": "YulIdentifier",
																"src": "3617:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2553,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2549,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2555,
												"nodeType": "InlineAssembly",
												"src": "3568:69:16"
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:16",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "3491:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:16"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "3536:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2477_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2552,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2551,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2477,
														"src": "3536:10:16"
													},
													"referencedDeclaration": 2477,
													"src": "3536:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2477_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:16"
									},
									"scope": 2580,
									"src": "3468:175:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "3818:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:16",
													"nodeType": "YulBlock",
													"src": "3853:38:16",
													"statements": [
														{
															"nativeSrc": "3867:14:16",
															"nodeType": "YulAssignment",
															"src": "3867:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:16",
																"nodeType": "YulIdentifier",
																"src": "3877:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2564,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2560,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2566,
												"nodeType": "InlineAssembly",
												"src": "3828:63:16"
											}
										]
									},
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:16",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3760:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:16"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3797:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2480_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2562,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2480,
														"src": "3797:9:16"
													},
													"referencedDeclaration": 2480,
													"src": "3797:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2480_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:16"
									},
									"scope": 2580,
									"src": "3738:159:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "4094:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:16",
													"nodeType": "YulBlock",
													"src": "4129:44:16",
													"statements": [
														{
															"nativeSrc": "4143:20:16",
															"nodeType": "YulAssignment",
															"src": "4143:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:16",
																"nodeType": "YulIdentifier",
																"src": "4153:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2575,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2571,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2577,
												"nodeType": "InlineAssembly",
												"src": "4104:69:16"
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:16",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "4029:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:16"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "4073:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2480_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2573,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2480,
														"src": "4073:9:16"
													},
													"referencedDeclaration": 2480,
													"src": "4073:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2480_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:16"
									},
									"scope": 2580,
									"src": "4007:172:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2581,
							"src": "1407:2774:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2592
						]
					},
					"id": 2593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2583,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:17",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2592,
							"linearizedBaseContracts": [
								2592
							],
							"name": "IERC165",
							"nameLocation": "432:7:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:17",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "818:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2585,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:17"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "861:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:17"
									},
									"scope": 2592,
									"src": "791:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2593,
							"src": "422:447:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:17"
				},
				"id": 17
			},
			"contracts/IAKSStablecoin.sol": {
				"ast": {
					"absolutePath": "contracts/IAKSStablecoin.sol",
					"exportedSymbols": {
						"IAKSStablecoin": [
							2772
						]
					},
					"id": 2773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAKSStablecoin",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2772,
							"linearizedBaseContracts": [
								2772
							],
							"name": "IAKSStablecoin",
							"nameLocation": "71:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "aae9beddccf584528e87b66c6ff2563825c8a1433305b8a656e9b5f9bf390499",
									"id": 2600,
									"name": "BridgeUpdated",
									"nameLocation": "114:13:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousBridge",
												"nameLocation": "144:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "128:30:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"indexed": true,
												"mutability": "mutable",
												"name": "newBridge",
												"nameLocation": "176:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "160:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "127:59:18"
									},
									"src": "108:79:18"
								},
								{
									"anonymous": false,
									"eventSelector": "bd45c5f5d28e3962d234f9fa4e443f6f92e4525b10556e441307306fab9f9e03",
									"id": 2606,
									"name": "ReserveUpdated",
									"nameLocation": "199:14:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousReserve",
												"nameLocation": "230:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "214:31:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"indexed": true,
												"mutability": "mutable",
												"name": "newReserve",
												"nameLocation": "263:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "247:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:61:18"
									},
									"src": "193:82:18"
								},
								{
									"anonymous": false,
									"eventSelector": "fbafa80149025f67f6b02dc04336ccefcbb7205c203b5f13f2c7d051718f072e",
									"id": 2612,
									"name": "ReserveMint",
									"nameLocation": "287:11:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "315:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "299:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "327:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "319:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:36:18"
									},
									"src": "281:54:18"
								},
								{
									"anonymous": false,
									"eventSelector": "883a64757c2681323207733af7958b032744da2b2f2e49886ec7b6160ec05014",
									"id": 2618,
									"name": "ReserveBurn",
									"nameLocation": "347:11:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "375:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "359:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "389:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "381:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:38:18"
									},
									"src": "341:56:18"
								},
								{
									"anonymous": false,
									"eventSelector": "9b5b9a05e4726d8bb959f1440e05c6b8109443f2083bc4e386237d7654526553",
									"id": 2624,
									"name": "BridgeBurn",
									"nameLocation": "409:10:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "436:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "420:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "450:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "442:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:38:18"
									},
									"src": "403:55:18"
								},
								{
									"anonymous": false,
									"eventSelector": "397b33b307fc137878ebfc75b295289ec0ee25a31bb5bf034f33256fe8ea2aa6",
									"id": 2630,
									"name": "BridgeMint",
									"nameLocation": "470:10:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "497:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "481:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "501:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:36:18"
									},
									"src": "464:53:18"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "571:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:18"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "608:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:9:18"
									},
									"scope": 2772,
									"src": "562:55:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "632:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "650:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "642:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:17:18"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "682:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:9:18"
									},
									"scope": 2772,
									"src": "623:68:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "706:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "723:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "715:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "735:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "727:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:28:18"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "761:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "761:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:6:18"
									},
									"scope": 2772,
									"src": "697:70:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "782:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "800:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "792:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "815:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "807:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:32:18"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "847:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:18"
									},
									"scope": 2772,
									"src": "773:83:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "871:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "887:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "879:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "896:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:33:18"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "930:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:6:18"
									},
									"scope": 2772,
									"src": "862:74:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "951:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "972:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "964:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "986:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "978:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "998:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "990:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:42:18"
									},
									"returnParameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "1024:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1024:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:6:18"
									},
									"scope": 2772,
									"src": "942:88:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1074:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:18"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "1104:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:15:18"
									},
									"scope": 2772,
									"src": "1065:54:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1134:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:2:18"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "1166:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1166:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:15:18"
									},
									"scope": 2772,
									"src": "1125:56:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1196:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1204:2:18"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "1230:5:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2692,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1230:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:7:18"
									},
									"scope": 2772,
									"src": "1187:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e78cea92",
									"id": 2700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridge",
									"nameLocation": "1300:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:18"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "1332:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:9:18"
									},
									"scope": 2772,
									"src": "1291:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd3293de",
									"id": 2705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserve",
									"nameLocation": "1356:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:2:18"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1389:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:9:18"
									},
									"scope": 2772,
									"src": "1347:51:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "32cb6b0c",
									"id": 2710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_SUPPLY",
									"nameLocation": "1413:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:2:18"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "1449:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:9:18"
									},
									"scope": 2772,
									"src": "1404:54:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8dd14802",
									"id": 2715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBridge",
									"nameLocation": "1503:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "_bridge",
												"nameLocation": "1521:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "1513:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1512:17:18"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:0:18"
									},
									"scope": 2772,
									"src": "1494:45:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9cecc80a",
									"id": 2720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserve",
									"nameLocation": "1554:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "_reserve",
												"nameLocation": "1573:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "1565:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:18:18"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:18"
									},
									"scope": 2772,
									"src": "1545:47:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8456cb59",
									"id": 2723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "1607:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:2:18"
									},
									"returnParameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:0:18"
									},
									"scope": 2772,
									"src": "1598:26:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4ba83a",
									"id": 2726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "1639:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:18"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:18"
									},
									"scope": 2772,
									"src": "1630:28:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b0ea1802",
									"id": 2733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserveMint",
									"nameLocation": "1705:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1725:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "1717:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1737:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "1729:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:28:18"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:18"
									},
									"scope": 2772,
									"src": "1696:58:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c139ec8c",
									"id": 2740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserveBurn",
									"nameLocation": "1769:11:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1789:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "1781:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1803:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "1795:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:30:18"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:18"
									},
									"scope": 2772,
									"src": "1760:60:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "74f4f547",
									"id": 2747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeBurn",
									"nameLocation": "1866:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1885:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1877:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1899:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1891:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:30:18"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:0:18"
									},
									"scope": 2772,
									"src": "1857:59:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c2a993e",
									"id": 2754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeMint",
									"nameLocation": "1931:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1950:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "1942:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1962:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "1954:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:28:18"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:18"
									},
									"scope": 2772,
									"src": "1922:57:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2027:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2040:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "2032:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:16:18"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:18"
									},
									"scope": 2772,
									"src": "2018:39:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 2766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "2072:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2089:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "2081:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2106:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "2098:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:33:18"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:0:18"
									},
									"scope": 2772,
									"src": "2063:60:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 2771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2167:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2173:2:18"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "2199:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2199:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:6:18"
									},
									"scope": 2772,
									"src": "2158:47:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2773,
							"src": "61:2147:18",
							"usedErrors": [],
							"usedEvents": [
								2600,
								2606,
								2612,
								2618,
								2624,
								2630
							]
						}
					],
					"src": "33:2175:18"
				},
				"id": 18
			},
			"contracts/ITokensBridge.sol": {
				"ast": {
					"absolutePath": "contracts/ITokensBridge.sol",
					"exportedSymbols": {
						"ITokensBridge": [
							2815
						]
					},
					"id": 2816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokensBridge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2815,
							"linearizedBaseContracts": [
								2815
							],
							"name": "ITokensBridge",
							"nameLocation": "71:13:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c42bd134",
									"id": 2783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendAKS",
									"nameLocation": "101:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "_destinationChainSelector",
												"nameLocation": "126:25:19",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "119:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2775,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "119:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "170:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "162:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "198:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "190:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:104:19"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:0:19"
									},
									"scope": 2815,
									"src": "92:138:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01ee5b22",
									"id": 2792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendKFS",
									"nameLocation": "251:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "_destinationChainSelector",
												"nameLocation": "276:25:19",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "269:32:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2784,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "269:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "320:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "312:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "348:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "340:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:104:19"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:19"
									},
									"scope": 2815,
									"src": "242:138:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "77d684d1",
									"id": 2803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveAKS",
									"nameLocation": "401:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "430:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "422:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "454:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "447:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2795,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "447:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "484:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "476:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "511:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "503:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:113:19"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:19"
									},
									"scope": 2815,
									"src": "392:142:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2c8e827",
									"id": 2814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveKFS",
									"nameLocation": "555:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "584:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "576:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "608:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "601:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2806,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "601:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "638:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "630:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "665:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "657:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:113:19"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:19"
									},
									"scope": 2815,
									"src": "546:142:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2816,
							"src": "61:630:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:658:19"
				},
				"id": 19
			},
			"contracts/KFShares.sol": {
				"ast": {
					"absolutePath": "contracts/KFShares.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1475
						],
						"ERC165Upgradeable": [
							1515
						],
						"ERC1967Utils": [
							2060
						],
						"ERC20Upgradeable": [
							1429
						],
						"IAKSStablecoin": [
							2772
						],
						"IAccessControl": [
							1598
						],
						"IERC1822Proxiable": [
							1629
						],
						"IERC20": [
							2148
						],
						"IERC20Errors": [
							1671
						],
						"IERC20Metadata": [
							2174
						],
						"ITokensBridge": [
							2815
						],
						"Initializable": [
							630
						],
						"KFShares": [
							3212
						],
						"UUPSUpgradeable": [
							812
						]
					},
					"id": 3213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2818,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 631,
							"src": "61:75:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2819,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 813,
							"src": "138:77:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 363,
							"src": "217:81:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2821,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 1430,
							"src": "300:78:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IAKSStablecoin.sol",
							"file": "./IAKSStablecoin.sol",
							"id": 2822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 2773,
							"src": "380:30:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ITokensBridge.sol",
							"file": "./ITokensBridge.sol",
							"id": 2823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3213,
							"sourceUnit": 2816,
							"src": "412:29:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2824,
										"name": "Initializable",
										"nameLocations": [
											"466:13:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "466:13:20"
									},
									"id": 2825,
									"nodeType": "InheritanceSpecifier",
									"src": "466:13:20"
								},
								{
									"baseName": {
										"id": 2826,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"481:16:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1429,
										"src": "481:16:20"
									},
									"id": 2827,
									"nodeType": "InheritanceSpecifier",
									"src": "481:16:20"
								},
								{
									"baseName": {
										"id": 2828,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"499:24:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "499:24:20"
									},
									"id": 2829,
									"nodeType": "InheritanceSpecifier",
									"src": "499:24:20"
								},
								{
									"baseName": {
										"id": 2830,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"525:15:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "525:15:20"
									},
									"id": 2831,
									"nodeType": "InheritanceSpecifier",
									"src": "525:15:20"
								}
							],
							"canonicalName": "KFShares",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3212,
							"linearizedBaseContracts": [
								3212,
								812,
								1629,
								362,
								1515,
								2592,
								1598,
								1429,
								1671,
								2174,
								2148,
								1475,
								630
							],
							"name": "KFShares",
							"nameLocation": "454:8:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2836,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "572:13:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "548:66:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "548:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2834,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "598:15:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2833,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "588:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "588:26:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e48bf15b",
									"id": 2841,
									"mutability": "constant",
									"name": "PROXY_ROLE",
									"nameLocation": "645:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "621:60:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2837,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "621:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "50524f58595f524f4c45",
												"id": 2839,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "668:12:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b",
													"typeString": "literal_string \"PROXY_ROLE\""
												},
												"value": "PROXY_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_77d72916e966418e6dc58a19999ae9934bef3f749f1547cde0a86e809f19c89b",
													"typeString": "literal_string \"PROXY_ROLE\""
												}
											],
											"id": 2838,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "658:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2840,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "658:23:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3efb0be3",
									"id": 2844,
									"mutability": "mutable",
									"name": "aksToken",
									"nameLocation": "712:8:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "690:30:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAKSStablecoin_$2772",
										"typeString": "contract IAKSStablecoin"
									},
									"typeName": {
										"id": 2843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2842,
											"name": "IAKSStablecoin",
											"nameLocations": [
												"690:14:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2772,
											"src": "690:14:20"
										},
										"referencedDeclaration": 2772,
										"src": "690:14:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAKSStablecoin_$2772",
											"typeString": "contract IAKSStablecoin"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9081e644",
									"id": 2847,
									"mutability": "mutable",
									"name": "tokensBridge",
									"nameLocation": "748:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "727:33:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokensBridge_$2815",
										"typeString": "contract ITokensBridge"
									},
									"typeName": {
										"id": 2846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2845,
											"name": "ITokensBridge",
											"nameLocations": [
												"727:13:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2815,
											"src": "727:13:20"
										},
										"referencedDeclaration": 2815,
										"src": "727:13:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokensBridge_$2815",
											"typeString": "contract ITokensBridge"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7154b3c",
									"id": 2849,
									"mutability": "mutable",
									"name": "basePricePerShare",
									"nameLocation": "784:17:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "769:32:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "769:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e336ac44",
									"id": 2853,
									"mutability": "mutable",
									"name": "lockedShares",
									"nameLocation": "853:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "818:47:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2852,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2850,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "818:27:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2851,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d936547e",
									"id": 2857,
									"mutability": "mutable",
									"name": "whitelisted",
									"nameLocation": "904:11:20",
									"nodeType": "VariableDeclaration",
									"scope": 3212,
									"src": "872:43:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2856,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2854,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "880:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "872:24:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2855,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "891:4:20",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2864,
										"nodeType": "Block",
										"src": "992:41:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2861,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "1003:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "1003:22:20"
											}
										]
									},
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "924:48:20",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:2:20"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:20"
									},
									"scope": 3212,
									"src": "978:55:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "1287:501:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2885,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "1306:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1320:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1306:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20736861726573206d7573742062652067726561746572207468616e207a65726f",
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1323:40:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5",
																"typeString": "literal_string \"Total shares must be greater than zero\""
															},
															"value": "Total shares must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344e44ffffd1fedf4c81f24f46c42db8c840a0bf1a12c4442b1ee786781990d5",
																"typeString": "literal_string \"Total shares must be greater than zero\""
															}
														],
														"id": 2884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1298:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:66:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2890,
												"nodeType": "ExpressionStatement",
												"src": "1298:66:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2892,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "1390:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2893,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "1396:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2891,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "1377:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:26:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "1377:26:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2896,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1414:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2898,
												"nodeType": "ExpressionStatement",
												"src": "1414:22:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2899,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1447:22:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:24:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2901,
												"nodeType": "ExpressionStatement",
												"src": "1447:24:20"
											},
											{
												"expression": {
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2902,
														"name": "aksToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "1484:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAKSStablecoin_$2772",
															"typeString": "contract IAKSStablecoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2904,
																"name": "_aksToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2875,
																"src": "1510:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2903,
															"name": "IAKSStablecoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "1495:14:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAKSStablecoin_$2772_$",
																"typeString": "type(contract IAKSStablecoin)"
															}
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1495:25:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAKSStablecoin_$2772",
															"typeString": "contract IAKSStablecoin"
														}
													},
													"src": "1484:36:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAKSStablecoin_$2772",
														"typeString": "contract IAKSStablecoin"
													}
												},
												"id": 2907,
												"nodeType": "ExpressionStatement",
												"src": "1484:36:20"
											},
											{
												"expression": {
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2908,
														"name": "tokensBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "1531:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokensBridge_$2815",
															"typeString": "contract ITokensBridge"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2910,
																"name": "_tokensBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2877,
																"src": "1560:13:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2909,
															"name": "ITokensBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "1546:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokensBridge_$2815_$",
																"typeString": "type(contract ITokensBridge)"
															}
														},
														"id": 2911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1546:28:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokensBridge_$2815",
															"typeString": "contract ITokensBridge"
														}
													},
													"src": "1531:43:20",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokensBridge_$2815",
														"typeString": "contract ITokensBridge"
													}
												},
												"id": 2913,
												"nodeType": "ExpressionStatement",
												"src": "1531:43:20"
											},
											{
												"expression": {
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2914,
														"name": "basePricePerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "1585:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653138",
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1605:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1585:24:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2917,
												"nodeType": "ExpressionStatement",
												"src": "1585:24:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2919,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1633:18:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2920,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "1653:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2918,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1622:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:37:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2922,
												"nodeType": "ExpressionStatement",
												"src": "1622:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2924,
															"name": "PROXY_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "1681:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2925,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "1693:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2923,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1670:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:29:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2927,
												"nodeType": "ExpressionStatement",
												"src": "1670:29:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2929,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "1721:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2930,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "1736:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2928,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1710:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2932,
												"nodeType": "ExpressionStatement",
												"src": "1710:32:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2934,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "1761:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2935,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "1768:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2933,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1755:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:25:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2937,
												"nodeType": "ExpressionStatement",
												"src": "1755:25:20"
											}
										]
									},
									"functionSelector": "dea7f112",
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2881,
												"name": "initializer",
												"nameLocations": [
													"1275:11:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "1275:11:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1275:11:20"
										}
									],
									"name": "initialize",
									"nameLocation": "1050:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1085:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1071:18:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1114:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1100:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1100:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "1139:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1131:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1169:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1161:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "_aksToken",
												"nameLocation": "1193:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1185:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "_tokensBridge",
												"nameLocation": "1221:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1213:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "1253:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "1245:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:205:20"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:0:20"
									},
									"scope": 3212,
									"src": "1041:747:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "1900:36:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "1917:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2951,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "1921:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2949,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1911:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:17:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "1911:17:20"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2946,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "1888:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2945,
												"name": "onlyRole",
												"nameLocations": [
													"1879:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "1879:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1879:20:20"
										}
									],
									"name": "mint",
									"nameLocation": "1837:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1850:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1842:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1862:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1854:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:28:20"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:0:20"
									},
									"scope": 3212,
									"src": "1828:108:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2969,
										"nodeType": "Block",
										"src": "2004:44:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2964,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2021:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2025:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2021:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2966,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "2033:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2963,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2015:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:25:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2968,
												"nodeType": "ExpressionStatement",
												"src": "2015:25:20"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 2970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2960,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "1992:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2961,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2959,
												"name": "onlyRole",
												"nameLocations": [
													"1983:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "1983:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "1983:20:20"
										}
									],
									"name": "burn",
									"nameLocation": "1953:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1966:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "1958:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:16:20"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:20"
									},
									"scope": 3212,
									"src": "1944:104:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "2138:41:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2981,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "2155:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2982,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "2164:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2980,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2149:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2984,
												"nodeType": "ExpressionStatement",
												"src": "2149:22:20"
											}
										]
									},
									"functionSelector": "e2d6f634",
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2977,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "2126:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2978,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2976,
												"name": "onlyRole",
												"nameLocations": [
													"2117:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2117:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2117:20:20"
										}
									],
									"name": "forceBurn",
									"nameLocation": "2065:9:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2083:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2075:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2100:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2092:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:33:20"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:20"
									},
									"scope": 3212,
									"src": "2056:123:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "2270:50:20",
										"statements": [
											{
												"expression": {
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2996,
															"name": "lockedShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "2281:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2998,
														"indexExpression": {
															"id": 2997,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2988,
															"src": "2294:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2281:21:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2999,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2990,
														"src": "2306:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2281:31:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3001,
												"nodeType": "ExpressionStatement",
												"src": "2281:31:20"
											}
										]
									},
									"functionSelector": "05fbf448",
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2993,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "2258:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2992,
												"name": "onlyRole",
												"nameLocations": [
													"2249:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2249:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2249:20:20"
										}
									],
									"name": "lockShares",
									"nameLocation": "2196:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2215:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "2207:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2232:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "2224:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:33:20"
									},
									"returnParameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:0:20"
									},
									"scope": 3212,
									"src": "2187:133:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "2397:44:20",
										"statements": [
											{
												"expression": {
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3011,
															"name": "lockedShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "2408:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3013,
														"indexExpression": {
															"id": 3012,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "2421:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2408:21:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2432:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2408:25:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3016,
												"nodeType": "ExpressionStatement",
												"src": "2408:25:20"
											}
										]
									},
									"functionSelector": "c255f8c8",
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3008,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "2385:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3007,
												"name": "onlyRole",
												"nameLocations": [
													"2376:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2376:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2376:20:20"
										}
									],
									"name": "unlockShares",
									"nameLocation": "2337:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2358:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "2350:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:17:20"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:20"
									},
									"scope": 3212,
									"src": "2328:113:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "2529:51:20",
										"statements": [
											{
												"expression": {
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3026,
														"name": "basePricePerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "2540:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3027,
														"name": "newBasePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "2560:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2540:32:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3029,
												"nodeType": "ExpressionStatement",
												"src": "2540:32:20"
											}
										]
									},
									"functionSelector": "8d898e34",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3023,
													"name": "PROXY_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "2517:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3022,
												"name": "onlyRole",
												"nameLocations": [
													"2508:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2508:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2508:20:20"
										}
									],
									"name": "updatePricingModel",
									"nameLocation": "2458:18:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "newBasePrice",
												"nameLocation": "2485:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "2477:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:22:20"
									},
									"returnParameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2529:0:20"
									},
									"scope": 3212,
									"src": "2449:131:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "2661:52:20",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3038,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "2679:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3039,
														"name": "basePricePerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "2688:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2679:26:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3037,
												"id": 3041,
												"nodeType": "Return",
												"src": "2672:33:20"
											}
										]
									},
									"functionSelector": "c55d0f56",
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "2597:15:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2621:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "2613:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:16:20"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "2652:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:9:20"
									},
									"scope": 3212,
									"src": "2588:125:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 3081,
										"nodeType": "Block",
										"src": "2851:218:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3054,
																"name": "whitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2857,
																"src": "2870:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3056,
															"indexExpression": {
																"id": 3055,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "2882:2:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2870:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636569766572206e6f742077686974656c6973746564",
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2887:26:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
																"typeString": "literal_string \"Receiver not whitelisted\""
															},
															"value": "Receiver not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
																"typeString": "literal_string \"Receiver not whitelisted\""
															}
														],
														"id": 3053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2862:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2862:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3059,
												"nodeType": "ExpressionStatement",
												"src": "2862:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3062,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2943:3:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2947:6:20",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2943:10:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3061,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "2933:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2933:21:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3065,
																		"name": "lockedShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2853,
																		"src": "2957:12:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3068,
																	"indexExpression": {
																		"expression": {
																			"id": 3066,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2970:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2974:6:20",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2970:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2957:24:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2933:48:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3070,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "2985:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2933:58:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420756e6c6f636b6564",
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2993:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															},
															"value": "Insufficient unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															}
														],
														"id": 3060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2925:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:92:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "2925:92:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "3050:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "3054:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3075,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3035:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_KFShares_$3212_$",
																"typeString": "type(contract super KFShares)"
															}
														},
														"id": 3076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3041:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1009,
														"src": "3035:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:26:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3052,
												"id": 3080,
												"nodeType": "Return",
												"src": "3028:33:20"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 3082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2783:8:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3049,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2827:8:20"
									},
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2800:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "2792:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2812:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "2804:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:28:20"
									},
									"returnParameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "2845:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2845:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:6:20"
									},
									"scope": 3212,
									"src": "2774:295:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "3172:216:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3095,
																"name": "whitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2857,
																"src": "3191:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3097,
															"indexExpression": {
																"id": 3096,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3086,
																"src": "3203:2:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3191:15:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636569766572206e6f742077686974656c6973746564",
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:26:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
																"typeString": "literal_string \"Receiver not whitelisted\""
															},
															"value": "Receiver not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46962007c72e3a369fc1c6a8acfb2ab5a3c03a41c63fa7e90c0e5f65b110c514",
																"typeString": "literal_string \"Receiver not whitelisted\""
															}
														],
														"id": 3094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3183:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:52:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3100,
												"nodeType": "ExpressionStatement",
												"src": "3183:52:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3103,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3084,
																			"src": "3264:4:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3102,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "3254:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 3104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3254:15:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3105,
																		"name": "lockedShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2853,
																		"src": "3272:12:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3107,
																	"indexExpression": {
																		"id": 3106,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3084,
																		"src": "3285:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3272:18:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3254:36:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3088,
																"src": "3294:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3254:46:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420756e6c6f636b6564",
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3302:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															},
															"value": "Insufficient unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															}
														],
														"id": 3101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3246:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3246:80:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3113,
												"nodeType": "ExpressionStatement",
												"src": "3246:80:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3116,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3084,
															"src": "3363:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "3369:2:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3088,
															"src": "3373:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3114,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3344:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_KFShares_$3212_$",
																"typeString": "type(contract super KFShares)"
															}
														},
														"id": 3115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3350:12:20",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "3344:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:36:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3093,
												"id": 3120,
												"nodeType": "Return",
												"src": "3337:43:20"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3086:12:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3090,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3148:8:20"
									},
									"parameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3107:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "3099:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3121:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "3113:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3113:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3133:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "3125:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:42:20"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "3166:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:6:20"
									},
									"scope": 3212,
									"src": "3077:311:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3183,
										"nodeType": "Block",
										"src": "3605:392:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3132,
																"name": "whitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2857,
																"src": "3624:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3134,
															"indexExpression": {
																"id": 3133,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3126,
																"src": "3636:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3624:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f73732d636861696e207265636569766572206e6f742077686974656c6973746564",
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3647:38:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48",
																"typeString": "literal_string \"Cross-chain receiver not whitelisted\""
															},
															"value": "Cross-chain receiver not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbe1bb37768afbea50b916756e6cb08acd8ade2a243328df38ad29dfc474ce48",
																"typeString": "literal_string \"Cross-chain receiver not whitelisted\""
															}
														],
														"id": 3131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3616:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3616:70:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3137,
												"nodeType": "ExpressionStatement",
												"src": "3616:70:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3140,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3715:3:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3719:6:20",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3715:10:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3139,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "3705:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 3142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3705:21:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3143,
																		"name": "lockedShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2853,
																		"src": "3729:12:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3146,
																	"indexExpression": {
																		"expression": {
																			"id": 3144,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3742:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3746:6:20",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3742:10:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3729:24:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3705:48:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3148,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3128,
																"src": "3757:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3705:58:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420756e6c6f636b6564",
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3765:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															},
															"value": "Insufficient unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_737506e8884ef82ca2c2fc915e892684c372c5fb1637de81fecd0740b663d1d2",
																"typeString": "literal_string \"Insufficient unlocked\""
															}
														],
														"id": 3138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3697:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:92:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3152,
												"nodeType": "ExpressionStatement",
												"src": "3697:92:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3812:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3816:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3812:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3158,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3832:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KFShares_$3212",
																		"typeString": "contract KFShares"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KFShares_$3212",
																		"typeString": "contract KFShares"
																	}
																],
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3824:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3156,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3824:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3824:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3128,
															"src": "3839:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3153,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3802:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:44:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3162,
												"nodeType": "ExpressionStatement",
												"src": "3802:44:20"
											},
											{
												"expression": {
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3163,
															"name": "lockedShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "3857:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3168,
														"indexExpression": {
															"arguments": [
																{
																	"id": 3166,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3878:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KFShares_$3212",
																		"typeString": "contract KFShares"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KFShares_$3212",
																		"typeString": "contract KFShares"
																	}
																],
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3870:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3870:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3870:13:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3857:27:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3169,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "3888:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3857:37:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3171,
												"nodeType": "ExpressionStatement",
												"src": "3857:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3178,
															"name": "destinationChainSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "3946:24:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 3179,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "3972:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3180,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3128,
															"src": "3982:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3172,
																"name": "tokensBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2847,
																"src": "3907:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokensBridge_$2815",
																	"typeString": "contract ITokensBridge"
																}
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3920:7:20",
															"memberName": "sendKFS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2792,
															"src": "3907:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (uint64,address,uint256) payable external"
															}
														},
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 3175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3935:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3939:5:20",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3935:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3907:38:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (uint64,address,uint256) payable external"
														}
													},
													"id": 3181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3907:82:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3182,
												"nodeType": "ExpressionStatement",
												"src": "3907:82:20"
											}
										]
									},
									"functionSelector": "a14d707c",
									"id": 3184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferCrossChain",
									"nameLocation": "3468:18:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "3504:24:20",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "3497:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3123,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3497:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3547:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "3539:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3574:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3184,
												"src": "3566:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:101:20"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:20"
									},
									"scope": 3212,
									"src": "3459:538:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3200,
										"nodeType": "Block",
										"src": "4126:48:20",
										"statements": [
											{
												"expression": {
													"id": 3198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3194,
															"name": "whitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "4137:11:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3196,
														"indexExpression": {
															"id": 3195,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "4149:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4137:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3197,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3188,
														"src": "4160:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4137:29:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3199,
												"nodeType": "ExpressionStatement",
												"src": "4137:29:20"
											}
										]
									},
									"functionSelector": "9281aa0b",
									"id": 3201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3191,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "4106:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3190,
												"name": "onlyRole",
												"nameLocations": [
													"4097:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4097:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "4097:28:20"
										}
									],
									"name": "setWhitelisted",
									"nameLocation": "4043:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4066:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "4058:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4080:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "4075:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4075:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4057:30:20"
									},
									"returnParameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4126:0:20"
									},
									"scope": 3212,
									"src": "4034:140:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 3210,
										"nodeType": "Block",
										"src": "4313:2:20",
										"statements": []
									},
									"id": 3211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3207,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2836,
													"src": "4298:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3206,
												"name": "onlyRole",
												"nameLocations": [
													"4289:8:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4289:8:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "4289:23:20"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4226:17:20",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3205,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4280:8:20"
									},
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4252:17:20",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "4244:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:27:20"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4313:0:20"
									},
									"scope": 3212,
									"src": "4217:98:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3213,
							"src": "445:3873:20",
							"usedErrors": [
								379,
								382,
								657,
								662,
								1525,
								1528,
								1641,
								1646,
								1651,
								1660,
								1665,
								1670,
								1786,
								1799,
								2184,
								2447
							],
							"usedEvents": [
								387,
								1537,
								1546,
								1555,
								1606,
								2082,
								2091
							]
						}
					],
					"src": "33:4287:20"
				},
				"id": 20
			}
		}
	}
}